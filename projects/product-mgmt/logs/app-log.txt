[TRACE] 2023-05-20 10:25:56,483 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:25:56,528 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:29)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,540 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,543 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,548 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,552 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:26:24,689 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-20 10:32:33,646 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:32:33,711 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,720 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,724 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,729 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,742 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:34:26,881 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:34:26,954 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,967 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,970 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,975 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,988 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:35:33,942 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-20 10:36:13,415 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:36:13,433 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:36:21,316 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-21 12:26:22,677 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-21 12:26:22,693 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-21 12:28:10,157 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-21 12:44:36,200 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:44:36,243 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:46:02,645 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:46:24,013 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:46:24,033 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:46:36,531 main            com.targetindia.App [81] user entered non-numeric value asd for unit price while editing product Product(id=77, name=Chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=90.0, unitsInStock=126)
java.lang.NumberFormatException: For input string: "asd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:79)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:46:41,913 main            com.targetindia.App [92] user entered non-numeric value aSD for units in stock while editing product Product(id=77, name=Chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=90.0, unitsInStock=126)
java.lang.NumberFormatException: For input string: "aSD"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.App.editProductDetails(App.java:90)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:47:54,050 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:49:16,743 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:49:16,763 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:49:26,582 main            com.targetindia.App [81] user entered non-numeric value asd for unit price while editing product Product(id=77, name=Masala chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=101.0, unitsInStock=105)
java.lang.NumberFormatException: For input string: "asd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:79)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:50:06,787 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:58:38,008 main            com.targetindia.App [273] starting the app
[ WARN] 2023-05-21 12:58:38,038 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:274)
[TRACE] 2023-05-21 12:59:52,599 main            com.targetindia.App [275] terminating the app gracefully
[TRACE] 2023-05-21 13:00:50,709 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:00:50,728 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[ WARN] 2023-05-21 13:01:10,614 main            com.targetindia.App [76] Error while accepting id for deleting
java.util.UnknownFormatConversionException: Conversion = 'I'
	at java.base/java.util.Formatter$FormatSpecifier.conversion(Formatter.java:2855)
	at java.base/java.util.Formatter$FormatSpecifier.<init>(Formatter.java:2891)
	at java.base/java.util.Formatter.parse(Formatter.java:2747)
	at java.base/java.util.Formatter.format(Formatter.java:2671)
	at java.base/java.io.PrintStream.format(PrintStream.java:1209)
	at java.base/java.io.PrintStream.printf(PrintStream.java:1105)
	at com.targetindia.App.deleteProduct(App.java:70)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:01:25,211 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:02:30,539 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:02:30,566 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:02:46,446 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:11:32,684 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:11:32,713 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:12:38,429 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:18:26,981 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:18:26,991 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:18:46,695 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-22 10:59:12,183 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-22 10:59:12,196 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[ WARN] 2023-05-22 11:00:09,316 main            com.targetindia.App [110] user entered non-numeric value asdasd for unit price while editing product Product(id=77, name=Masala chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=102.0, unitsInStock=105)
java.lang.NumberFormatException: For input string: "asdasd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:108)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-22 11:00:41,639 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-22 11:08:47,208 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-22 11:08:47,217 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-22 11:08:50,840 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:49:07,376 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:49:14,863 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:53:50,174 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:53:59,293 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:54:57,892 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:55:43,836 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:59:07,932 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:59:39,558 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:59:56,548 main            com.targetindia.App [275] starting the app
[TRACE] 2023-05-28 14:00:24,039 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:10:51,495 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:17:09,827 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:18:19,587 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:24:03,102 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:25:47,208 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:26:13,872 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:26:53,951 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:28:51,738 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:29:46,593 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:38:34,608 main            com.targetindia.App [275] starting the app
[ INFO] 2023-06-04 12:39:28,641 main            org.hibernate.jpa.internal.util.LogHelper [31] HHH000204: Processing PersistenceUnitInfo [name: h2-northwind]
[ INFO] 2023-06-04 12:39:28,688 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[ INFO] 2023-06-04 12:39:28,690 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[ WARN] 2023-06-04 12:39:28,856 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [170] HHH10001001: Connection properties: {password=****, user=root}
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[ INFO] 2023-06-04 12:39:28,863 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[ INFO] 2023-06-04 12:39:29,316 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[ INFO] 2023-06-04 12:39:29,871 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:40:29,731 main            org.hibernate.jpa.internal.util.LogHelper [31] HHH000204: Processing PersistenceUnitInfo [name: h2-northwind]
[ WARN] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [170] HHH10001001: Connection properties: {password=****, user=root}
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[ INFO] 2023-06-04 12:40:29,767 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[ INFO] 2023-06-04 12:40:29,793 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2023-06-04 12:40:32,085 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:46:57,284 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:47:22,653 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:47:22,656 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:47:22,661 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:47:22,697 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:47:22,698 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:47:22,699 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:47:22,714 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:47:22,717 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:47:22,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:47:22,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:47:22,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:47:22,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:47:22,728 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:47:22,729 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@2b91004a
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b91004a
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@20ccf40b
[DEBUG] 2023-06-04 12:47:22,813 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5b03b9fe
[DEBUG] 2023-06-04 12:47:22,813 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b03b9fe
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@f0da945
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-04 12:47:22,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@729d991e
[DEBUG] 2023-06-04 12:47:22,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@31fa1761
[DEBUG] 2023-06-04 12:47:22,817 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b11171f] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:47:22,817 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1151e434] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2dc54ad4]
[DEBUG] 2023-06-04 12:47:22,855 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:47:22,855 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:47:22,866 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:47:22,870 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:47:22,870 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:47:22,871 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:47:22,871 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:47:22,872 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:47:22,872 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:47:23,136 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:47:23,139 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:47:23,139 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,152 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:47:23,152 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:47:23,154 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:47:23,155 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@ec2bf82)
[DEBUG] 2023-06-04 12:47:23,157 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37d3d232] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30c0ccff]
[DEBUG] 2023-06-04 12:47:23,184 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:47:23,209 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,215 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:47:23,220 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:47:23,226 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:47:23,238 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,239 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:47:23,239 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,242 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:47:23,244 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:47:23,247 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:47:23,250 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:47:23,251 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:47:23,263 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:47:23,266 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:47:23,291 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:47:23,398 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:47:23,424 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:47:23,425 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e22def, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:47:23,427 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:47:23,431 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:47:23,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:47:23,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:47:23,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:47:23,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:47:23,458 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1de0a46c] under count; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5477a1ca] under every; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ae9d1e2] under any; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:47:23,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:47:23,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under pi; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2903c6ff] under log; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:47:23,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@10cd6753] under position; prior registration was null
[DEBUG] 2023-06-04 12:47:23,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@68e7c8c3] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:47:23,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@58860997] under trim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,466 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3e17a0a1] under cast; prior registration was null
[DEBUG] 2023-06-04 12:47:23,466 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@790a251b] under collate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3e15bb06] under extract; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7a7cc52c] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@332820f4] under pad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,468 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@21f459fc] under str; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2dfe5525] under format; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@a518813] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1d75e7af] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under instant; prior registration was null
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@396639b] under sql; prior registration was null
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2b22a1cc] under count; prior registration was org.hibernate.dialect.function.CountFunction@1de0a46c
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2ab0702e] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7158daf2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1dd7796b
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@67a3bd51
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@f679798] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59d77850] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@10cd6753
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ed09e8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@60859f5a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2dfe5525
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under mode; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6631cb64] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19962194] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7e2c64] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c1e32c9] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@41b1f51e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:47:23,495 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:47:23,592 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:47:23,592 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,725 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.addProduct(JpaProductDao.java:15)
	at com.targetindia.service.ProductManager.addNewProduct(ProductManager.java:72)
	at com.targetindia.App.acceptAndAddProductDetails(App.java:152)
	at com.targetindia.App.start(App.java:32)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:47:23,755 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:47:23,755 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:47:23,797 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,797 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:47:23,807 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:47:23,809 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:47:23,820 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:47:23,822 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:47:23,849 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:47:23,850 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:47:23,854 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:47:23,855 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:47:23,857 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:47:23,857 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:47:23,857 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37d3d232] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1e225820]
[DEBUG] 2023-06-04 12:47:23,858 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:47:23,858 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:47:23,859 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:47:23,859 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:47:23,860 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a32191e
[DEBUG] 2023-06-04 12:47:23,860 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 3f2f90fe-4eb8-434d-9b82-4af7e8f9ba5b (<unnamed>)
[DEBUG] 2023-06-04 12:47:23,861 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:47:23,861 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:47:23,891 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:47:23,894 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:47:23,894 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:47:23,902 main            org.hibernate.engine.spi.ActionQueue [277] Executing identity-insert immediately
[DEBUG] 2023-06-04 12:47:23,910 main            org.hibernate.SQL [133] 
    insert 
    into
        products
        (category,name,quantity_per_unit,unit_price,units_in_stock,id) 
    values
        (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:47:23,931 main            org.hibernate.id.IdentifierGeneratorHelper [84] Natively generated identity (com.targetindia.model.Product) : 7
[DEBUG] 2023-06-04 12:47:23,931 main            org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl [105] HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-06-04 12:47:23,938 main            org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl [203] Exception clearing maxRows/queryTimeout [No operations allowed after statement closed.]
[DEBUG] 2023-06-04 12:47:23,942 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:47:23,943 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:47:23,943 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:47:23,948 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=35.0, unitsInStock=20, name=Cold Coffee, id=7, quantityPerUnit=200ml tetrapack, category=Beverages}
[DEBUG] 2023-06-04 12:47:23,952 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:47:23,953 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-04 12:47:36,933 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:49:21,549 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:26,531 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:26,535 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:26,539 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:49:26,578 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:49:26,579 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:49:26,580 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:49:26,599 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:26,602 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:26,604 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:26,604 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:26,605 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:26,607 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:26,607 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:26,615 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:26,616 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:26,704 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:26,704 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:49:26,708 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:26,708 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:49:26,745 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:26,745 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:26,756 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:26,762 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:26,762 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:27,031 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:27,036 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:27,036 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,051 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:27,051 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:27,052 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:27,054 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:27,056 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:49:27,084 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:27,104 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,116 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:27,120 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:27,126 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:27,138 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,139 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:27,139 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,141 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:27,144 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:27,147 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:27,150 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:27,150 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:27,152 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:27,162 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:27,162 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:27,165 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:27,190 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:27,289 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:27,312 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:27,313 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:27,315 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:27,319 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:27,342 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:27,342 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:27,343 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:27,343 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:27,344 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:27,344 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:27,347 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,353 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,353 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:27,354 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:27,354 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:49:27,360 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:49:27,360 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,364 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,364 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:27,366 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:27,367 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:27,380 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:27,492 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:27,492 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,637 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:27,668 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:27,668 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:27,712 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,712 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:27,722 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:27,724 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:27,735 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:27,737 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:27,764 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:27,765 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:27,769 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:27,769 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:27,771 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:27,771 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:27,772 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e64dc99e-6f9d-450d-9d81-7af04ce426e4 (<unnamed>)
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:27,802 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:27,815 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:27,824 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:27,825 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:27,829 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:27,841 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:36,722 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52f6900a
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7bbcf6f0
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b80e5a9
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4cc01c7f
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a50b32d
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36c7cbe1
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@562919fe
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@794f11cd] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:36,733 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@715f45c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d5c41e5]
[DEBUG] 2023-06-04 12:49:36,740 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:36,740 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7015ebef]
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:36,766 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:36,767 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:36,767 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a87ba34, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@34d480b9] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6b415f5f] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@66749eea] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7135ce0a] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@617449dd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e590b] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df5c7e3] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2c18a3ea] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@166c2c17] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25953be6] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19dc0d32] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70b2fa10] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7c96c85] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b0f2d91] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7243145f] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15c6027d] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5927f904] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2bb62414] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@413d2cd1] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@644d1b61] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2443135] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184823ed] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30bbcf91] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ca14cf4] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f4f0fcc] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c10083] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@28e8888d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1e98b788] under count; prior registration was org.hibernate.dialect.function.CountFunction@34d480b9
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@794eeaf8] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5284a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30bbcf91
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3ca14cf4
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b8572df] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aaad0] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eed890d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f477e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6097fca9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15c6027d
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35eee641] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5729b410] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64518270] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b7c58e7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79627d27] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6371cf2f] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b5b9333] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@52b959df] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,798 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:36,799 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:36,799 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:36,802 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@565aa4ac]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e08a0d78-17d5-4ea2-9663-c592cd8b20d8 (<unnamed>)
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@92784065 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:36,806 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1138121345
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:49:36,812 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:49:36,812 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ab4aa5e
[DEBUG] 2023-06-04 12:49:36,813 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:41,668 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1e545821
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12952aff
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@76a7fcbd
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@433ea2ac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7f977fba
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@446e7065
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d653e41
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b78c683
[DEBUG] 2023-06-04 12:49:41,675 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7f5614f9] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:41,675 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@480cbe2e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c3f1658]
[DEBUG] 2023-06-04 12:49:41,682 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:41,682 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b35798] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e00bfe2]
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:41,705 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:41,705 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6a2d867d, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73bb1337] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@685f5d0d] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3830b06c] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e28d779] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15214920] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@784d9bc] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5d9618f2] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7c7e73c5] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@13cc0b90] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@58687fb7] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3554bdc0] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3a3b10f4] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@49580ca8] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@525647f3] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@42fc4ac4] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20a24edf] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@29962b2f] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@491f8831] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@691541bc] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b733ef7] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43a4a9e5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@764fffa0] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35145874] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77524ca7] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11df2829] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18e4674d] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@f245bdd] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6af609ea] under count; prior registration was org.hibernate.dialect.function.CountFunction@73bb1337
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@280fafd] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39e53bef] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@35145874
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@77524ca7
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@14b275bd] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ed18798] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b03cbad] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5d9618f2
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b29ab61] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c313224] under format; prior registration was org.hibernate.dialect.function.FormatFunction@20a24edf
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e1e837d] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4b957db0] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d71b500] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@8840c98] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@626b639e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@273fa9e] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@527a8665] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7ab2a07e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:41,719 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:41,719 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,731 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:41,732 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:41,732 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:41,735 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:41,735 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:41,736 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b35798] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5ec88f9e]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 556ced14-6185-4332-8542-6ed690691901 (<unnamed>)
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@2047145776 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:41,737 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 1
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#1] : 897541009
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#1
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@689faf79
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:57,003 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2fd39436
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@60b5e80d
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@46394f65
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@31aab981
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26be9a6
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4d518c66
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@411fa0ce
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@251d7fdd
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@78e68401] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@391515c7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5b0dbfb]
[DEBUG] 2023-06-04 12:49:57,516 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:57,516 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:57,529 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@578a5ce8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c453c34]
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:57,537 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:57,537 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3dfd6220, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3815146b] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6de43bc1] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@27a9f025] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71936a92] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61359e87] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dc39b53] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45037e16] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f2e4bde] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6222391a] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@538a2f0e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d2708a7] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@508ad266] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2313db84] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@216372b7] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14b4340c] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@12abcd1e] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2fd9fb34] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1595d2b2] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@20349058] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6cbb7a7d] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cdb3c85] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37606fee] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33d28f0a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48d739f] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51e7589f] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cc5252] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42c12b3e] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dbfa972] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46f73ffa] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@41aebbb4] under count; prior registration was org.hibernate.dialect.function.CountFunction@3815146b
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@afde064] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45037e16
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a592c70] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51e7589f
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@65cc5252
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@252ec02e] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11e9ac24] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6222391a
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@34279b8a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1595d2b2
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@687389a6] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8641b7d] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37c7766e] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fb450d7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4b7ed03e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@636985df] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f91fbda] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@723e3c17] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:57,549 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,561 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:57,565 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@578a5ce8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7d37ee0c]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 56b1e4c8-6bb3-44f5-9800-0ed4c93b7265 (<unnamed>)
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1518022811 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:57,567 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:49:57,567 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 893152673
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36c07c75
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:50:06,766 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:50:11,705 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:50:13,305 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:52:15,291 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:52:19,778 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:19,778 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:19,779 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:19,784 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:19,788 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:19,792 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:52:19,834 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:52:19,835 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:52:19,836 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:52:19,855 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:19,859 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:19,859 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:19,861 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:19,861 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:19,862 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:19,864 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:19,871 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:19,872 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:19,959 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:19,959 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:52:19,963 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:19,963 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:52:20,001 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:20,001 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:20,012 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:20,018 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:20,018 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:20,287 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:20,290 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:20,291 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:20,303 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,304 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,304 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,305 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:20,305 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:20,307 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:20,308 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:20,311 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:52:20,338 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:20,358 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,369 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:20,374 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:20,381 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,396 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:20,399 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:20,402 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:20,405 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:20,405 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:20,407 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:20,417 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:20,420 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:20,443 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:20,550 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:20,579 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:20,579 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:20,582 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:20,586 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:20,611 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:20,611 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:20,612 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:20,612 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:20,613 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:20,619 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:20,620 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:20,620 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,621 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:20,621 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,623 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:20,623 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:20,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:20,636 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,636 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:20,649 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:20,747 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:20,748 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,891 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:20,920 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:20,920 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:20,959 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:20,959 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:20,966 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:20,968 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:20,980 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:20,982 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:21,010 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:21,012 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:21,016 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:21,017 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:21,019 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:21,019 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:21,020 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:21,023 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:52:21,023 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 48e41f13-165c-491f-8f1c-2769370f95c6 (<unnamed>)
[DEBUG] 2023-06-04 12:52:21,024 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:21,024 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:21,053 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:21,067 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:21,077 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:21,078 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:21,082 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:21,094 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:39,397 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52f6900a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7bbcf6f0
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b80e5a9
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4cc01c7f
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a50b32d
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36c7cbe1
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@562919fe
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@794f11cd] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:39,408 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@715f45c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d5c41e5]
[DEBUG] 2023-06-04 12:52:39,416 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:39,416 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:39,431 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7015ebef]
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:39,439 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:39,441 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:39,441 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a87ba34, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@34d480b9] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6b415f5f] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@66749eea] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7135ce0a] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@617449dd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e590b] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df5c7e3] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2c18a3ea] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@166c2c17] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25953be6] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19dc0d32] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70b2fa10] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7c96c85] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b0f2d91] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7243145f] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15c6027d] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5927f904] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2bb62414] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@413d2cd1] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@644d1b61] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2443135] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184823ed] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30bbcf91] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ca14cf4] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f4f0fcc] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c10083] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@28e8888d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1e98b788] under count; prior registration was org.hibernate.dialect.function.CountFunction@34d480b9
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@794eeaf8] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5284a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30bbcf91
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3ca14cf4
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b8572df] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aaad0] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eed890d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f477e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6097fca9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15c6027d
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35eee641] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5729b410] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64518270] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b7c58e7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79627d27] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6371cf2f] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b5b9333] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@52b959df] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:39,455 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:39,455 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,468 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:39,469 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:39,469 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:39,472 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@565aa4ac]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: baa9d650-9685-4218-80ea-c4ae2e14a109 (<unnamed>)
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:39,473 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@92784065 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:39,473 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:39,475 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:52:39,476 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 1138121345
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:52:39,479 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:52:39,479 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ab4aa5e
[DEBUG] 2023-06-04 12:52:39,481 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@12952aff
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@76a7fcbd
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@433ea2ac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7f977fba
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@446e7065
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d653e41
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b78c683
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7f5614f9
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@480cbe2e] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c3f1658] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@110e9982]
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:43,387 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e00bfe2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4702e7a5]
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:43,411 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:43,412 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@73bb1337, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@685f5d0d] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3830b06c] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3e28d779] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15214920] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@784d9bc] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d9618f2] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7c7e73c5] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13cc0b90] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@58687fb7] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3554bdc0] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a3b10f4] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@49580ca8] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@525647f3] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42fc4ac4] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@20a24edf] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@29962b2f] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@491f8831] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@691541bc] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b733ef7] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43a4a9e5] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@764fffa0] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35145874] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77524ca7] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11df2829] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18e4674d] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f245bdd] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6af609ea] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@280fafd] under count; prior registration was org.hibernate.dialect.function.CountFunction@685f5d0d
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@39e53bef] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b275bd] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@77524ca7
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@11df2829
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4ed18798] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b03cbad] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b29ab61] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7c7e73c5
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c313224] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e1e837d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@29962b2f
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4b957db0] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d71b500] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8840c98] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@626b639e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@273fa9e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@527a8665] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ab2a07e] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@437c4b25] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:43,425 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:43,425 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,437 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.deleteProduct(JpaProductDao.java:53)
	at com.targetindia.service.ProductManager.deleteProduct(ProductManager.java:33)
	at com.targetindia.App.deleteProduct(App.java:65)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:43,441 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e00bfe2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a04f730]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 294950b4-b970-46af-9c1a-0383a05df4c3 (<unnamed>)
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@990994954 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:43,443 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 1755295609
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@582e9152
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,446 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:52:43,446 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:52:43,452 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:52:43,452 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:52:43,453 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:52:43,455 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=98.0, unitsInStock=29, name=Chang, id=3, quantityPerUnit=150 gm pouch, category=Condiments}
[DEBUG] 2023-06-04 12:52:43,463 main            org.hibernate.SQL [133] 
    delete 
    from
        products 
    where
        id=?
[DEBUG] 2023-06-04 12:52:43,470 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,470 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c18516
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a0b901c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3d104c9b
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6544899b
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6da54910
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1bd8afc8
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@24134cbc
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65da01f4
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@22f02996] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c8874ef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@42c0a16e]
[DEBUG] 2023-06-04 12:52:49,308 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:49,308 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d1bdd4a]
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:49,329 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3457cc8d, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7a66c35a] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7994a0d1] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@73e4387] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d87d449] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4137aab0] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df9186f] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682e422c] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5bb8e6fc] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2726a511] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@72c9ebfa] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@686cf8ad] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@747f6c5a] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e341e9] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b48f0f4] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@546ed2a0] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5bfc79cb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@27ec8754] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3bbf1c0d] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@19662208] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@216c22ce] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62f9c790] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21e5f0b6] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@93bf0e0] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4981d95b] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@656842bc] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b867ee7] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dec3f87] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a606260] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5dbab232] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5939e24] under count; prior registration was org.hibernate.dialect.function.CountFunction@7a66c35a
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@595f9916] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682e422c
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2055833f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@656842bc
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6b867ee7
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@28768e25] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@310d57b1] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@143fefaf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2726a511
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18ffca6c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@46468f0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3bbf1c0d
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5f8f1712] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@34a6d9db] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52ecc989] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@756808cc] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52f8a6f4] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5012c571] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6486fe7b] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@511da44f] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,351 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:49,355 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@37d3e140]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 98abed4d-70c6-400c-b4b5-a04b004d4ddb (<unnamed>)
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1045677229 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:49,357 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:50,253 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:09,435 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40bd0f8
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7eb27768
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6169be09
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e3db14
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5fb54740
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@325162e9
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ee40b5c
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c448ef
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@703e8050] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@49c1e294] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7741ae1b]
[DEBUG] 2023-06-04 12:53:11,736 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:53:11,736 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9690008] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42cf6349]
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:53:11,757 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:53:11,757 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:53:11,758 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1a2e563e, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5b066c33] under count; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@62ea8931] under every; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47fb7ec9] under any; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f8c4fae] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4703c998] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71166348] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d874695] under pi; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20bb85b4] under log; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@79add732] under position; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3be3e76c] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6c07ad6b] under trim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@10ed037a] under cast; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76e4212] under collate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@23121d14] under extract; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@72af90e8] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@aa1bb14] under pad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7faa0680] under str; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4c635edc] under format; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4245bf68] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@45bbc52f] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a8a551e] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cc9632d] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@53982523] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@489110c2] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@700b9e6b] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ac5b4c] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@150fc7a7] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55d8c2c4] under instant; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@798cf6d2] under sql; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1c1fa494] under count; prior registration was org.hibernate.dialect.function.CountFunction@5b066c33
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@77c66a4f] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d874695
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@649b5891] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@700b9e6b
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7ac5b4c
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a3f08b6] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1be52861] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb5ad40] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@79add732
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@615439f7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@632cf7d3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4c635edc
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@51b87df7] under mode; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2315052d] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@634e1b39] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67d8faec] under rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@751d7425] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7eaa2bc6] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6dae70f9] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4d81e83a] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:53:11,770 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:53:11,770 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,780 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.editProductDetails(App.java:82)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:53:11,783 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9690008] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@718989fa]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: ecb97528-8b52-4880-bcde-3ab78e57ffa2 (<unnamed>)
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1777369261 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 2016400644
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:53:11,787 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1537c744
[DEBUG] 2023-06-04 12:53:11,787 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:53:13,405 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:19,322 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:54:47,039 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:54:53,466 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:54:53,469 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:54:53,473 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:54:53,507 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:54:53,508 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:54:53,509 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:54:53,528 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:54:53,531 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:54:53,534 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:54:53,536 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:54:53,544 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:54:53,545 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:54:53,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:54:53,637 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:54:53,637 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:54:53,640 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:54:53,640 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:54:53,644 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:54:53,644 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:54:53,685 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:54:53,685 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:54:53,697 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:54:53,702 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:54:53,702 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:54:53,955 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:54:53,959 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:54:53,959 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:54:53,971 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,971 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,972 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,973 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:54:53,973 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:54:53,974 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:54:53,975 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:54:53,978 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:54:54,004 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:54:54,024 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,035 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:54:54,039 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:54:54,046 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:54:54,057 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,058 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:54:54,058 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,060 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:54:54,063 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:54:54,066 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:54:54,069 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:54:54,069 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:54:54,071 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:54:54,080 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:54:54,082 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:54:54,083 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:54:54,104 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:54:54,195 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:54:54,220 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:54:54,221 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:54:54,223 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:54:54,227 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:54:54,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:54:54,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:54:54,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:54:54,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:54:54,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:54:54,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:54:54,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:54:54,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:54:54,273 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:54:54,287 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:54:54,382 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:54:54,382 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,525 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.editProductDetails(App.java:82)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:54:54,556 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:54:54,556 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:54:54,597 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,597 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:54:54,606 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:54:54,608 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:54:54,619 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:54:54,621 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:54:54,646 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:54:54,647 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:54:54,651 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:54:54,651 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:54:54,653 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:54:54,653 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:54:54,654 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: cc5a9473-1e1d-4601-9232-d22573325714 (<unnamed>)
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:54:54,683 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:54:54,695 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:54:54,705 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:54:54,705 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:54:54,711 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:54:54,723 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1235151206
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:54:54,728 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:54:54,728 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39da5e49
[DEBUG] 2023-06-04 12:54:54,730 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:55:10,059 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@14d25b6e
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51c65a43
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@740dcae3
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e140497
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@481b2f10
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b6c7012
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@31acfd4e
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5f726750
[DEBUG] 2023-06-04 12:55:10,068 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4e80a001] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:10,068 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@624b523] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50b46e24]
[DEBUG] 2023-06-04 12:55:10,077 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:10,077 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62ade015] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70ede57d]
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:55:10,105 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:55:10,106 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:55:10,106 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61f377d1, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6c538eb2] under count; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@738a5848] under every; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@487cd177] under any; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@324b6a56] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@421d54b3] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63f40ca0] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dad8ec0] under pi; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24dd44f9] under log; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@ccd341d] under position; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4f1fb828] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6ee5f485] under trim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@20d19f2c] under cast; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45592af7] under collate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@77b5148c] under extract; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@36359723] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1ab14636] under pad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16b3c905] under str; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@49fdbe2b] under format; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@53eba4b8] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@437bd805] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b88ca8e] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa02932] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61608e1a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c46c9c3] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7197b07f] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f10fec6] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a65a360] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30a7653e] under instant; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7cff3f1d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6401188a] under count; prior registration was org.hibernate.dialect.function.CountFunction@6c538eb2
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@33a8c9c9] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dad8ec0
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@382dc417] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7197b07f
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1f10fec6
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3daf03d8] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510689af] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2415e4c7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@ccd341d
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72ce812e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@373afd6c] under format; prior registration was org.hibernate.dialect.function.FormatFunction@49fdbe2b
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@521441d5] under mode; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@592ca48c] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5fed9976] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fdcde7a] under rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f363abd] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7302ff13] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4017fe2c] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1961d75a] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:55:10,122 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:10,122 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,137 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.updateProduct(JpaProductDao.java:48)
	at com.targetindia.service.ProductManager.updateProduct(ProductManager.java:28)
	at com.targetindia.App.editProductDetails(App.java:126)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:55:10,141 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62ade015] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6274f21c]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: fd464c64-7823-48c2-bcb4-02e02137c7fc (<unnamed>)
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:55:10,142 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:55:10,142 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:55:10,146 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@327574313 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 2144659477
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f6b53ed
[DEBUG] 2023-06-04 12:55:10,151 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:55:10,151 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:55:10,152 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:55:10,158 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=38.0, unitsInStock=22, name=Cold Coffee, id=7, quantityPerUnit=200ml tetrapack, category=Beverages}
[DEBUG] 2023-06-04 12:55:10,166 main            org.hibernate.SQL [133] 
    update
        products 
    set
        category=?,
        name=?,
        quantity_per_unit=?,
        unit_price=?,
        units_in_stock=? 
    where
        id=?
[DEBUG] 2023-06-04 12:55:10,172 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:10,173 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:55:14,202 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:55:14,202 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1a8e9ed9] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68ea253b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12fcb2c3]
[DEBUG] 2023-06-04 12:55:14,216 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:14,216 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@482c351d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75eaba95]
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:55:14,239 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:55:14,239 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@435e416c, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6af310c7] under count; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4aed311e] under every; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4c38cd16] under any; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ddcb0dc] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f5bf288] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c1d57bc] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c77f54] under pi; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e856100] under log; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6e9a0bea] under position; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@28fc1132] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@355ce6a6] under trim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@20440c6c] under cast; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e3f86d5] under collate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@560271a1] under extract; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4b9c411] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@41e9f86] under pad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@66f5b8fe] under str; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@233f52f8] under format; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@69ec93c2] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19fec3d6] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5287ba5f] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b768a65] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6897a4a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6986f93e] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bce313] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39266403] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74b00247] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2aa14ae6] under instant; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4be490da] under sql; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4168f3d9] under count; prior registration was org.hibernate.dialect.function.CountFunction@6af310c7
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@353e6389] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c77f54
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15e8f9b2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6bce313
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@39266403
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a65c995] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c950b3b] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3af10d0b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6e9a0bea
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6806468e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3c7b137a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@233f52f8
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@68631b1d] under mode; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5a48da4f] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a0c5be] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6424e613] under rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@14efa279] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@8e99809] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@e62319f] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4d354a3e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:14,253 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,266 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:55:14,269 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:55:14,269 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:55:14,270 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@482c351d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22f02996]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 0a689234-c536-45a8-bc0c-6b28b21b07e0 (<unnamed>)
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:55:14,271 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@2089317615 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:55:14,271 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1413473944
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b2fdffc
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:23,930 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:55:25,828 main            com.targetindia.App [277] terminating the app gracefully
