[TRACE] 2023-05-20 10:25:56,483 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:25:56,528 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:29)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,540 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,543 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,548 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:25:56,552 main            com.targetindia.dao.CsvProductDao [37] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:33)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:41)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:52)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:26:24,689 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-20 10:32:33,646 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:32:33,711 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,720 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,724 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,729 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:32:33,742 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:34:26,881 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:34:26,954 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,967 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,970 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,975 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[ WARN] 2023-05-20 10:34:26,988 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: empty String
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:1842)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:31)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:35:33,942 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-20 10:36:13,415 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-20 10:36:13,433 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-20 10:36:21,316 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-21 12:26:22,677 main            com.targetindia.App [187] starting the app
[ WARN] 2023-05-21 12:26:22,693 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:188)
[TRACE] 2023-05-21 12:28:10,157 main            com.targetindia.App [189] terminating the app gracefully
[TRACE] 2023-05-21 12:44:36,200 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:44:36,243 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:46:02,645 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:46:24,013 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:46:24,033 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:46:36,531 main            com.targetindia.App [81] user entered non-numeric value asd for unit price while editing product Product(id=77, name=Chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=90.0, unitsInStock=126)
java.lang.NumberFormatException: For input string: "asd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:79)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:46:41,913 main            com.targetindia.App [92] user entered non-numeric value aSD for units in stock while editing product Product(id=77, name=Chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=90.0, unitsInStock=126)
java.lang.NumberFormatException: For input string: "aSD"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.App.editProductDetails(App.java:90)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:47:54,050 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:49:16,743 main            com.targetindia.App [243] starting the app
[ WARN] 2023-05-21 12:49:16,763 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:244)
[ WARN] 2023-05-21 12:49:26,582 main            com.targetindia.App [81] user entered non-numeric value asd for unit price while editing product Product(id=77, name=Masala chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=101.0, unitsInStock=105)
java.lang.NumberFormatException: For input string: "asd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:79)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:244)
[TRACE] 2023-05-21 12:50:06,787 main            com.targetindia.App [245] terminating the app gracefully
[TRACE] 2023-05-21 12:58:38,008 main            com.targetindia.App [273] starting the app
[ WARN] 2023-05-21 12:58:38,038 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:274)
[TRACE] 2023-05-21 12:59:52,599 main            com.targetindia.App [275] terminating the app gracefully
[TRACE] 2023-05-21 13:00:50,709 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:00:50,728 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[ WARN] 2023-05-21 13:01:10,614 main            com.targetindia.App [76] Error while accepting id for deleting
java.util.UnknownFormatConversionException: Conversion = 'I'
	at java.base/java.util.Formatter$FormatSpecifier.conversion(Formatter.java:2855)
	at java.base/java.util.Formatter$FormatSpecifier.<init>(Formatter.java:2891)
	at java.base/java.util.Formatter.parse(Formatter.java:2747)
	at java.base/java.util.Formatter.format(Formatter.java:2671)
	at java.base/java.io.PrintStream.format(PrintStream.java:1209)
	at java.base/java.io.PrintStream.printf(PrintStream.java:1105)
	at com.targetindia.App.deleteProduct(App.java:70)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:01:25,211 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:02:30,539 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:02:30,566 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:02:46,446 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:11:32,684 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:11:32,713 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:12:38,429 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-21 13:18:26,981 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-21 13:18:26,991 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-21 13:18:46,695 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-22 10:59:12,183 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-22 10:59:12,196 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[ WARN] 2023-05-22 11:00:09,316 main            com.targetindia.App [110] user entered non-numeric value asdasd for unit price while editing product Product(id=77, name=Masala chai, category=Beverages, quantityPerUnit=6 tetrapacks in a box, unitPrice=102.0, unitsInStock=105)
java.lang.NumberFormatException: For input string: "asdasd"
	at java.base/jdk.internal.math.FloatingDecimal.readJavaFormatString(FloatingDecimal.java:2054)
	at java.base/jdk.internal.math.FloatingDecimal.parseDouble(FloatingDecimal.java:110)
	at java.base/java.lang.Double.parseDouble(Double.java:651)
	at com.targetindia.App.editProductDetails(App.java:108)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-22 11:00:41,639 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-22 11:08:47,208 main            com.targetindia.App [276] starting the app
[ WARN] 2023-05-22 11:08:47,217 main            com.targetindia.dao.CsvProductDao [35] Error!
java.lang.NumberFormatException: For input string: "id"
	at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
	at java.base/java.lang.Integer.parseInt(Integer.java:668)
	at java.base/java.lang.Integer.parseInt(Integer.java:786)
	at com.targetindia.dao.CsvProductDao.lambda$loadProductsFromCsvFile$1(CsvProductDao.java:27)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at com.targetindia.dao.CsvProductDao.loadProductsFromCsvFile(CsvProductDao.java:39)
	at com.targetindia.dao.CsvProductDao.<init>(CsvProductDao.java:50)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at com.targetindia.dao.DaoFactory.getProductDao(DaoFactory.java:31)
	at com.targetindia.service.ProductManager.<init>(ProductManager.java:16)
	at com.targetindia.App.<init>(App.java:15)
	at com.targetindia.App.main(App.java:277)
[TRACE] 2023-05-22 11:08:50,840 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:49:07,376 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:49:14,863 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:53:50,174 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:53:59,293 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:54:57,892 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:55:43,836 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:59:07,932 main            com.targetindia.App [276] starting the app
[TRACE] 2023-05-28 13:59:39,558 main            com.targetindia.App [278] terminating the app gracefully
[TRACE] 2023-05-28 13:59:56,548 main            com.targetindia.App [275] starting the app
[TRACE] 2023-05-28 14:00:24,039 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:10:51,495 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:17:09,827 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:18:19,587 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:24:03,102 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:25:47,208 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:26:13,872 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:26:53,951 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-03 10:28:51,738 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-03 10:29:46,593 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:38:34,608 main            com.targetindia.App [275] starting the app
[ INFO] 2023-06-04 12:39:28,641 main            org.hibernate.jpa.internal.util.LogHelper [31] HHH000204: Processing PersistenceUnitInfo [name: h2-northwind]
[ INFO] 2023-06-04 12:39:28,688 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[ INFO] 2023-06-04 12:39:28,690 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[ WARN] 2023-06-04 12:39:28,856 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [170] HHH10001001: Connection properties: {password=****, user=root}
[ INFO] 2023-06-04 12:39:28,861 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[ INFO] 2023-06-04 12:39:28,863 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[ INFO] 2023-06-04 12:39:29,316 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[ INFO] 2023-06-04 12:39:29,871 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:40:29,731 main            org.hibernate.jpa.internal.util.LogHelper [31] HHH000204: Processing PersistenceUnitInfo [name: h2-northwind]
[ WARN] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [170] HHH10001001: Connection properties: {password=****, user=root}
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[ INFO] 2023-06-04 12:40:29,743 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[ INFO] 2023-06-04 12:40:29,767 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[ INFO] 2023-06-04 12:40:29,793 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[TRACE] 2023-06-04 12:40:32,085 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:46:57,284 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:47:22,648 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:47:22,653 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:47:22,656 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:47:22,661 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:47:22,697 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:47:22,698 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:47:22,699 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:47:22,714 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:47:22,717 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:47:22,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:47:22,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:47:22,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:47:22,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:47:22,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:47:22,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:47:22,728 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:47:22,729 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:47:22,800 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:47:22,801 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:47:22,803 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:47:22,804 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:47:22,805 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:47:22,806 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:47:22,807 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:47:22,808 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@2b91004a
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@2b91004a
[DEBUG] 2023-06-04 12:47:22,809 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@20ccf40b
[DEBUG] 2023-06-04 12:47:22,813 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5b03b9fe
[DEBUG] 2023-06-04 12:47:22,813 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5b03b9fe
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@f0da945
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:47:22,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-04 12:47:22,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@729d991e
[DEBUG] 2023-06-04 12:47:22,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@31fa1761
[DEBUG] 2023-06-04 12:47:22,817 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1b11171f] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:47:22,817 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1151e434] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2dc54ad4]
[DEBUG] 2023-06-04 12:47:22,855 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:47:22,855 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:47:22,866 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:47:22,870 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:47:22,870 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:47:22,871 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:47:22,871 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:47:22,872 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:47:22,872 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:47:23,104 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:47:23,136 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:47:23,139 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:47:23,139 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,151 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:47:23,152 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:47:23,152 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:47:23,154 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:47:23,155 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@ec2bf82)
[DEBUG] 2023-06-04 12:47:23,157 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37d3d232] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@30c0ccff]
[DEBUG] 2023-06-04 12:47:23,184 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:47:23,209 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,215 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:47:23,220 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:47:23,226 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:47:23,238 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,239 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:47:23,239 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,242 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:47:23,244 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:47:23,247 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:47:23,250 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:47:23,251 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:47:23,253 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:47:23,254 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:47:23,255 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:47:23,256 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:47:23,257 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:47:23,263 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:47:23,264 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:47:23,266 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:47:23,291 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:47:23,398 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:47:23,424 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:47:23,425 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@45e22def, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:47:23,427 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:47:23,431 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:47:23,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:47:23,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:47:23,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:47:23,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:47:23,458 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1de0a46c] under count; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5477a1ca] under every; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3ae9d1e2] under any; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:47:23,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:47:23,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:47:23,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:47:23,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under pi; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2903c6ff] under log; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:47:23,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:47:23,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@10cd6753] under position; prior registration was null
[DEBUG] 2023-06-04 12:47:23,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@68e7c8c3] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:47:23,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@58860997] under trim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,466 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3e17a0a1] under cast; prior registration was null
[DEBUG] 2023-06-04 12:47:23,466 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@790a251b] under collate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3e15bb06] under extract; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7a7cc52c] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@332820f4] under pad; prior registration was null
[DEBUG] 2023-06-04 12:47:23,468 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@21f459fc] under str; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@2dfe5525] under format; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@a518813] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@1d75e7af] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:47:23,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:47:23,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under instant; prior registration was null
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@396639b] under sql; prior registration was null
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:47:23,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2b22a1cc] under count; prior registration was org.hibernate.dialect.function.CountFunction@1de0a46c
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2ab0702e] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7158daf2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:47:23,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:47:23,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@1dd7796b
[DEBUG] 2023-06-04 12:47:23,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@67a3bd51
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@f679798] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:47:23,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59d77850] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@10cd6753
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ed09e8] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:47:23,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@60859f5a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@2dfe5525
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:47:23,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under mode; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6631cb64] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19962194] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:47:23,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7e2c64] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c1e32c9] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:47:23,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@41b1f51e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,482 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,484 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:47:23,485 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,486 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:47:23,487 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,488 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,489 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:47:23,490 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:47:23,491 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:47:23,492 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:47:23,495 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:47:23,592 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:47:23,592 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,725 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.addProduct(JpaProductDao.java:15)
	at com.targetindia.service.ProductManager.addNewProduct(ProductManager.java:72)
	at com.targetindia.App.acceptAndAddProductDetails(App.java:152)
	at com.targetindia.App.start(App.java:32)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:47:23,755 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:47:23,755 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:47:23,797 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:47:23,797 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:47:23,798 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:47:23,807 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:47:23,809 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:47:23,820 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:47:23,822 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:47:23,849 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:47:23,850 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:47:23,854 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:47:23,855 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:47:23,857 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:47:23,857 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:47:23,857 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@37d3d232] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1e225820]
[DEBUG] 2023-06-04 12:47:23,858 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:47:23,858 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:47:23,859 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:47:23,859 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:47:23,860 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6a32191e
[DEBUG] 2023-06-04 12:47:23,860 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 3f2f90fe-4eb8-434d-9b82-4af7e8f9ba5b (<unnamed>)
[DEBUG] 2023-06-04 12:47:23,861 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:47:23,861 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:47:23,891 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:47:23,894 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:47:23,894 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:47:23,902 main            org.hibernate.engine.spi.ActionQueue [277] Executing identity-insert immediately
[DEBUG] 2023-06-04 12:47:23,910 main            org.hibernate.SQL [133] 
    insert 
    into
        products
        (category,name,quantity_per_unit,unit_price,units_in_stock,id) 
    values
        (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:47:23,931 main            org.hibernate.id.IdentifierGeneratorHelper [84] Natively generated identity (com.targetindia.model.Product) : 7
[DEBUG] 2023-06-04 12:47:23,931 main            org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl [105] HHH000387: ResultSet's statement was not registered
[DEBUG] 2023-06-04 12:47:23,938 main            org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl [203] Exception clearing maxRows/queryTimeout [No operations allowed after statement closed.]
[DEBUG] 2023-06-04 12:47:23,942 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:47:23,943 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:47:23,943 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:47:23,947 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:47:23,948 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=35.0, unitsInStock=20, name=Cold Coffee, id=7, quantityPerUnit=200ml tetrapack, category=Beverages}
[DEBUG] 2023-06-04 12:47:23,952 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:47:23,953 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-04 12:47:36,933 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:49:21,549 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:26,526 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:26,531 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:26,535 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:26,539 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:49:26,578 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:49:26,579 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:49:26,580 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:49:26,599 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:26,602 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:26,603 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:26,604 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:26,604 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:26,605 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:26,606 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:26,607 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:26,607 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:26,615 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:26,616 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:26,691 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:26,692 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:26,693 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:26,694 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:26,695 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:26,696 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:26,697 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:26,698 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:26,699 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:26,700 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:26,704 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:26,704 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:49:26,705 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:49:26,706 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:49:26,708 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:26,708 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:49:26,745 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:26,745 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:26,756 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:26,760 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:26,762 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:26,762 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:26,995 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:27,031 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:27,036 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:27,036 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,049 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:27,051 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:27,051 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:27,052 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:27,054 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:27,056 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:49:27,084 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:27,104 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,116 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:27,120 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:27,126 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:27,138 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,139 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:27,139 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,141 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:27,144 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:27,147 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:27,150 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:27,150 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:27,152 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:27,153 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:27,154 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:27,155 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:27,156 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:27,157 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:27,162 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:27,162 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:27,163 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:27,165 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:27,190 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:27,289 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:27,312 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:27,313 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:27,315 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:27,319 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:27,342 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:27,342 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:27,343 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:27,343 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:27,344 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:27,344 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:27,345 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:27,346 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:27,347 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:27,348 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:27,349 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:27,351 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,352 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,353 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:27,353 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:27,354 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:27,354 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,355 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:27,356 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:27,357 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:27,358 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,359 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:49:27,360 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:49:27,360 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,361 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:27,362 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:27,363 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,364 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,364 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:27,365 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:27,366 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:27,367 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,368 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,370 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,371 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:27,372 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:27,373 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:27,374 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:27,375 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:27,376 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:27,377 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:27,380 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:27,492 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:27,492 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,637 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:27,668 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:27,668 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:27,712 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:27,712 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:27,713 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:27,722 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:27,724 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:27,735 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:27,737 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:27,764 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:27,765 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:27,769 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:27,769 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:27,771 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:27,771 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:27,772 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:27,773 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e64dc99e-6f9d-450d-9d81-7af04ce426e4 (<unnamed>)
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:27,775 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:27,802 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:27,815 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:27,824 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:27,825 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:27,829 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:27,841 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:36,722 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:36,723 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:36,724 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:36,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:36,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,727 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:36,728 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:36,729 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:36,730 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:36,731 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52f6900a
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7bbcf6f0
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b80e5a9
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4cc01c7f
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a50b32d
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36c7cbe1
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@562919fe
[DEBUG] 2023-06-04 12:49:36,732 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@794f11cd] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:36,733 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@715f45c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d5c41e5]
[DEBUG] 2023-06-04 12:49:36,740 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:36,740 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:36,741 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:36,757 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:36,758 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7015ebef]
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:36,759 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:36,760 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:36,761 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:36,762 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:36,763 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:36,764 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:36,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:36,766 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:36,767 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:36,767 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a87ba34, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:36,768 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@34d480b9] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6b415f5f] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@66749eea] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:36,769 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7135ce0a] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@617449dd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e590b] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df5c7e3] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:36,770 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2c18a3ea] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@166c2c17] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25953be6] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19dc0d32] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70b2fa10] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7c96c85] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b0f2d91] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7243145f] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15c6027d] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5927f904] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2bb62414] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@413d2cd1] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@644d1b61] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2443135] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:36,771 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184823ed] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30bbcf91] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ca14cf4] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f4f0fcc] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c10083] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@28e8888d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1e98b788] under count; prior registration was org.hibernate.dialect.function.CountFunction@34d480b9
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@794eeaf8] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5284a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:36,772 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30bbcf91
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3ca14cf4
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b8572df] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aaad0] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,773 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eed890d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f477e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,774 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6097fca9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15c6027d
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35eee641] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5729b410] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64518270] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b7c58e7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79627d27] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6371cf2f] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b5b9333] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@52b959df] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:36,775 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:36,776 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,777 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:36,778 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:36,779 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:36,780 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:36,781 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,798 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:36,799 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:36,799 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:36,800 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:36,801 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:36,802 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@565aa4ac]
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e08a0d78-17d5-4ea2-9663-c592cd8b20d8 (<unnamed>)
[DEBUG] 2023-06-04 12:49:36,802 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@92784065 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:36,803 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:36,806 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1138121345
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:49:36,807 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:49:36,808 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:49:36,812 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:49:36,812 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ab4aa5e
[DEBUG] 2023-06-04 12:49:36,813 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:41,667 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:41,668 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:41,669 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:41,670 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:41,671 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:41,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:41,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1e545821
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@12952aff
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@76a7fcbd
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@433ea2ac
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7f977fba
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@446e7065
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@d653e41
[DEBUG] 2023-06-04 12:49:41,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3b78c683
[DEBUG] 2023-06-04 12:49:41,675 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7f5614f9] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:41,675 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@480cbe2e] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c3f1658]
[DEBUG] 2023-06-04 12:49:41,682 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:41,682 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:41,683 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:41,697 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:41,698 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b35798] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1e00bfe2]
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:41,699 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,700 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:41,701 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:41,702 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:41,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:41,704 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:41,705 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:41,705 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6a2d867d, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:41,706 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@73bb1337] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@685f5d0d] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3830b06c] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:41,707 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e28d779] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15214920] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@784d9bc] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:41,708 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5d9618f2] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7c7e73c5] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@13cc0b90] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@58687fb7] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3554bdc0] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3a3b10f4] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@49580ca8] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@525647f3] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@42fc4ac4] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@20a24edf] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@29962b2f] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@491f8831] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@691541bc] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b733ef7] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43a4a9e5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@764fffa0] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35145874] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77524ca7] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11df2829] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,709 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18e4674d] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@f245bdd] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6af609ea] under count; prior registration was org.hibernate.dialect.function.CountFunction@73bb1337
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@280fafd] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39e53bef] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:41,710 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@35145874
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@77524ca7
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@14b275bd] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ed18798] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b03cbad] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5d9618f2
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,711 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b29ab61] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c313224] under format; prior registration was org.hibernate.dialect.function.FormatFunction@20a24edf
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:41,712 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e1e837d] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4b957db0] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d71b500] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@8840c98] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@626b639e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@273fa9e] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@527a8665] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@7ab2a07e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:41,713 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,714 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:41,715 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:41,716 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:41,717 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:41,718 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:41,719 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:41,719 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,731 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:41,732 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:41,732 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:41,733 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:41,734 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:41,735 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:41,735 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:41,736 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3b35798] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5ec88f9e]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 556ced14-6185-4332-8542-6ed690691901 (<unnamed>)
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:41,736 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@2047145776 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:41,737 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 1
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#1] : 897541009
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:49:41,738 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#1
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@689faf79
[DEBUG] 2023-06-04 12:49:41,739 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:49:57,003 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:49:57,501 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:49:57,502 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:57,503 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:49:57,504 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:57,505 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,506 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:49:57,507 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2fd39436
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@60b5e80d
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@46394f65
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@31aab981
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@26be9a6
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4d518c66
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@411fa0ce
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@251d7fdd
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@78e68401] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:57,508 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@391515c7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5b0dbfb]
[DEBUG] 2023-06-04 12:49:57,516 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:49:57,516 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:49:57,516 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:49:57,517 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:49:57,529 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:49:57,530 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@578a5ce8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7c453c34]
[DEBUG] 2023-06-04 12:49:57,531 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:49:57,532 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:49:57,533 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:49:57,534 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:49:57,535 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:49:57,536 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:49:57,537 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:49:57,537 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3dfd6220, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:49:57,538 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3815146b] under count; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6de43bc1] under every; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@27a9f025] under any; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71936a92] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61359e87] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2dc39b53] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45037e16] under pi; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f2e4bde] under log; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:49:57,539 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6222391a] under position; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@538a2f0e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@d2708a7] under trim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@508ad266] under cast; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2313db84] under collate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@216372b7] under extract; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@14b4340c] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@12abcd1e] under pad; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2fd9fb34] under str; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1595d2b2] under format; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@20349058] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6cbb7a7d] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:49:57,540 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@cdb3c85] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@37606fee] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@33d28f0a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@48d739f] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51e7589f] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65cc5252] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42c12b3e] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2dbfa972] under instant; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@46f73ffa] under sql; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@41aebbb4] under count; prior registration was org.hibernate.dialect.function.CountFunction@3815146b
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@afde064] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45037e16
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:49:57,541 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5a592c70] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@51e7589f
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@65cc5252
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@252ec02e] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:49:57,542 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@11e9ac24] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@74f280bd] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6222391a
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@675b18ff] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:49:57,543 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@34279b8a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1595d2b2
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@687389a6] under mode; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8641b7d] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@37c7766e] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fb450d7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4b7ed03e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@636985df] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f91fbda] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@723e3c17] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,544 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,545 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,546 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:49:57,547 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:49:57,548 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:49:57,549 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,561 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:49:57,562 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:49:57,563 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:49:57,564 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:49:57,565 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@578a5ce8] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7d37ee0c]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 56b1e4c8-6bb3-44f5-9800-0ed4c93b7265 (<unnamed>)
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:49:57,565 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1518022811 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:49:57,566 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:49:57,567 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:49:57,567 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 893152673
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@36c07c75
[DEBUG] 2023-06-04 12:49:57,568 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:50:06,766 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:50:11,705 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:50:13,305 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-04 12:52:15,291 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:52:19,778 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:19,778 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:19,779 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:19,784 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:19,788 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:19,792 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:52:19,834 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:52:19,835 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:52:19,836 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:52:19,855 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:19,859 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:19,859 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:19,860 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:19,861 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:19,861 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:19,862 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:19,863 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:19,864 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:19,871 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:19,872 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:19,946 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:19,947 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,948 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:19,949 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:19,950 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:19,951 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:19,952 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:19,953 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:19,954 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:19,955 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:19,959 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:19,959 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:52:19,960 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:52:19,963 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:19,963 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:52:20,001 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:20,001 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:20,012 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:20,016 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:20,018 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:20,018 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:20,250 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:20,287 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:20,290 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:20,291 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:20,303 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,304 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,304 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:20,305 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:20,305 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:20,307 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:20,308 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:20,311 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:52:20,338 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:20,358 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,369 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:20,374 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:20,381 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:20,393 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,396 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:20,399 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:20,402 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:20,405 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:20,405 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:20,407 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:20,408 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:20,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:20,410 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:20,411 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:20,412 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:20,417 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:20,418 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:20,420 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:20,443 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:20,550 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:20,579 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:20,579 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:20,582 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:20,586 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:20,611 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:20,611 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:20,612 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:20,612 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:20,613 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:20,614 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:20,615 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:20,617 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,618 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:20,619 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:20,620 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:20,620 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,621 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:20,621 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,622 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:20,623 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:20,623 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:20,624 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:20,625 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:20,626 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:20,627 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:20,628 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:52:20,629 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:20,630 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:20,631 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:20,632 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:20,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:20,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:20,636 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,636 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,637 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,639 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:20,640 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,641 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,642 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:20,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,644 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:20,645 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:20,646 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:20,649 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:20,747 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:20,748 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,891 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:20,920 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:20,920 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:20,958 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:20,959 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:20,959 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:20,966 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:20,968 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:20,980 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:20,982 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:21,010 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:21,012 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:21,016 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:21,017 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:21,019 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:21,019 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:21,020 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:21,021 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:21,023 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:52:21,023 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 48e41f13-165c-491f-8f1c-2769370f95c6 (<unnamed>)
[DEBUG] 2023-06-04 12:52:21,024 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:21,024 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:21,053 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:21,067 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:21,077 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:21,078 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:21,082 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:21,094 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:39,397 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:39,398 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:39,399 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:39,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:39,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:39,403 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:39,404 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:39,405 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@52f6900a
[DEBUG] 2023-06-04 12:52:39,406 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7bbcf6f0
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@2b80e5a9
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4cc01c7f
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@2a50b32d
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@36c7cbe1
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ac6dd3d
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@562919fe
[DEBUG] 2023-06-04 12:52:39,407 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@794f11cd] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:39,408 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@715f45c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d5c41e5]
[DEBUG] 2023-06-04 12:52:39,416 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:39,416 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:39,416 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:39,417 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:39,431 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:39,432 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:39,433 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7015ebef]
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:39,434 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:39,435 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:39,436 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:39,437 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:39,438 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:39,439 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:39,440 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:39,441 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:39,441 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2a87ba34, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:39,442 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@34d480b9] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6b415f5f] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@66749eea] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:39,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7135ce0a] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@617449dd] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e590b] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df5c7e3] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:39,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@2c18a3ea] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@166c2c17] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@25953be6] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@19dc0d32] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@70b2fa10] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7c96c85] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@b0f2d91] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7243145f] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@15c6027d] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5927f904] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2bb62414] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@413d2cd1] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@644d1b61] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2443135] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@184823ed] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30bbcf91] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3ca14cf4] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f4f0fcc] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@46c10083] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@28e8888d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1e98b788] under count; prior registration was org.hibernate.dialect.function.CountFunction@34d480b9
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@794eeaf8] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ef042a
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c5284a] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@30bbcf91
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3ca14cf4
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@5b8572df] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7aaad0] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:39,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@eed890d] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@5e0c4f21
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10f477e2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6097fca9] under format; prior registration was org.hibernate.dialect.function.FormatFunction@15c6027d
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:39,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@35eee641] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5729b410] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@64518270] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3b7c58e7] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79627d27] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6371cf2f] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@b5b9333] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@52b959df] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,449 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:39,450 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:39,451 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:39,452 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,453 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:39,454 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:39,455 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:39,455 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,468 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.deleteProduct(App.java:56)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:39,469 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:39,469 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:39,470 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:39,471 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:39,472 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5e180aaf] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@565aa4ac]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: baa9d650-9685-4218-80ea-c4ae2e14a109 (<unnamed>)
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:39,472 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:39,473 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@92784065 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:39,473 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:39,475 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:52:39,476 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 1138121345
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:52:39,477 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:52:39,479 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:52:39,479 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@ab4aa5e
[DEBUG] 2023-06-04 12:52:39,481 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:43,369 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:43,370 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:43,371 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:43,372 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:43,373 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:43,374 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:43,375 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:43,376 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@12952aff
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@76a7fcbd
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@433ea2ac
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7f977fba
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@446e7065
[DEBUG] 2023-06-04 12:52:43,377 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@d653e41
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3b78c683
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7f5614f9
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@480cbe2e] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:43,378 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c3f1658] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@110e9982]
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:43,386 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:43,387 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:43,402 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,403 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e00bfe2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4702e7a5]
[DEBUG] 2023-06-04 12:52:43,404 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:43,405 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:43,406 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:43,407 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:43,408 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:43,409 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:43,410 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:43,411 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:43,412 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@73bb1337, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:43,413 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@685f5d0d] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3830b06c] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3e28d779] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:43,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15214920] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@784d9bc] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a0aaaf0] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d9618f2] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7c7e73c5] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@13cc0b90] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@58687fb7] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@3554bdc0] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a3b10f4] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@49580ca8] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:43,415 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@525647f3] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@42fc4ac4] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@20a24edf] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@29962b2f] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@491f8831] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@691541bc] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5b733ef7] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@43a4a9e5] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@764fffa0] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35145874] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77524ca7] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11df2829] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@18e4674d] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@f245bdd] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6af609ea] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@280fafd] under count; prior registration was org.hibernate.dialect.function.CountFunction@685f5d0d
[DEBUG] 2023-06-04 12:52:43,416 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@39e53bef] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@426131d7
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14b275bd] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:43,417 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@77524ca7
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@11df2829
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@4ed18798] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b03cbad] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5b29ab61] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7c7e73c5
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5c313224] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:43,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1e1e837d] under format; prior registration was org.hibernate.dialect.function.FormatFunction@29962b2f
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4b957db0] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5d71b500] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8840c98] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@626b639e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@273fa9e] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@527a8665] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7ab2a07e] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:43,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@437c4b25] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:43,420 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:43,421 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:43,422 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,423 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:43,424 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:43,425 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:43,425 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,437 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.deleteProduct(JpaProductDao.java:53)
	at com.targetindia.service.ProductManager.deleteProduct(ProductManager.java:33)
	at com.targetindia.App.deleteProduct(App.java:65)
	at com.targetindia.App.start(App.java:42)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:43,438 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:43,439 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:43,440 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:43,441 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e00bfe2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a04f730]
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 294950b4-b970-46af-9c1a-0383a05df4c3 (<unnamed>)
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:43,441 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@990994954 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:43,442 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:43,443 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 3
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#3] : 1755295609
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Condiments]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chang]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [150 gm pouch]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [98.0]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [29]
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#3
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@582e9152
[DEBUG] 2023-06-04 12:52:43,444 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,446 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:52:43,446 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:52:43,452 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:52:43,452 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:52:43,453 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:52:43,455 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:52:43,456 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=98.0, unitsInStock=29, name=Chang, id=3, quantityPerUnit=150 gm pouch, category=Condiments}
[DEBUG] 2023-06-04 12:52:43,463 main            org.hibernate.SQL [133] 
    delete 
    from
        products 
    where
        id=?
[DEBUG] 2023-06-04 12:52:43,470 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:43,470 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:52:49,295 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:52:49,296 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:52:49,297 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,298 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:52:49,299 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:52:49,300 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4c18516
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@2a0b901c
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@3d104c9b
[DEBUG] 2023-06-04 12:52:49,301 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6544899b
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6da54910
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1bd8afc8
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@24134cbc
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@65da01f4
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@22f02996] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:49,302 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c8874ef] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@42c0a16e]
[DEBUG] 2023-06-04 12:52:49,308 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:52:49,308 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:52:49,309 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:52:49,321 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:52:49,322 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d1bdd4a]
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,323 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:52:49,324 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:52:49,325 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:52:49,326 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:52:49,327 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:52:49,328 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:52:49,329 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:49,329 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3457cc8d, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7a66c35a] under count; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7994a0d1] under every; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@73e4387] under any; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:52:49,330 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d87d449] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4137aab0] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1df9186f] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682e422c] under pi; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5bb8e6fc] under log; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,331 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2726a511] under position; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@72c9ebfa] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@686cf8ad] under trim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@747f6c5a] under cast; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66e341e9] under collate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@5b48f0f4] under extract; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@546ed2a0] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5bfc79cb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@27ec8754] under str; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3bbf1c0d] under format; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@19662208] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@216c22ce] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62f9c790] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21e5f0b6] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@93bf0e0] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4981d95b] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@656842bc] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6b867ee7] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3dec3f87] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:52:49,332 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a606260] under instant; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5dbab232] under sql; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5939e24] under count; prior registration was org.hibernate.dialect.function.CountFunction@7a66c35a
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@595f9916] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@682e422c
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2055833f] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:52:49,333 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@656842bc
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6b867ee7
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@28768e25] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@310d57b1] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@143fefaf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2726a511
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@18ffca6c] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:52:49,334 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@46468f0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@3bbf1c0d
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5f8f1712] under mode; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@34a6d9db] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@52ecc989] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@756808cc] under rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@52f8a6f4] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@5012c571] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6486fe7b] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@511da44f] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,335 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:52:49,336 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:52:49,337 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,338 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:52:49,339 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:52:49,340 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,351 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:52:49,352 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:52:49,353 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:52:49,354 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:52:49,355 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1b8aaeab] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@37d3e140]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 98abed4d-70c6-400c-b4b5-a04b004d4ddb (<unnamed>)
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1045677229 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:52:49,355 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:52:49,357 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:52:50,253 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:09,435 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:53:11,718 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:53:11,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:53:11,720 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,721 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:53:11,722 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:53:11,723 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:53:11,724 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@40bd0f8
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7eb27768
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6169be09
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5e3db14
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5fb54740
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@325162e9
[DEBUG] 2023-06-04 12:53:11,725 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1ee40b5c
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5c448ef
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@703e8050] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:53:11,726 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@49c1e294] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7741ae1b]
[DEBUG] 2023-06-04 12:53:11,736 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:53:11,736 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:53:11,737 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:53:11,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9690008] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@42cf6349]
[DEBUG] 2023-06-04 12:53:11,751 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:53:11,752 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:53:11,753 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:53:11,754 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:53:11,755 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:53:11,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:53:11,757 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:53:11,757 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:53:11,758 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:53:11,758 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1a2e563e, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:53:11,759 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5b066c33] under count; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@62ea8931] under every; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47fb7ec9] under any; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2f8c4fae] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4703c998] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@71166348] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d874695] under pi; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@20bb85b4] under log; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:53:11,760 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@79add732] under position; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3be3e76c] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6c07ad6b] under trim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@10ed037a] under cast; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@76e4212] under collate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@23121d14] under extract; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@72af90e8] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@aa1bb14] under pad; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@7faa0680] under str; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4c635edc] under format; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4245bf68] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@45bbc52f] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6a8a551e] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3cc9632d] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@53982523] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,761 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@489110c2] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@700b9e6b] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ac5b4c] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@150fc7a7] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@55d8c2c4] under instant; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@798cf6d2] under sql; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1c1fa494] under count; prior registration was org.hibernate.dialect.function.CountFunction@5b066c33
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@77c66a4f] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d874695
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@649b5891] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,762 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@700b9e6b
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7ac5b4c
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a3f08b6] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1be52861] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:53:11,763 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fb5ad40] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@79add732
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@615439f7] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@632cf7d3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4c635edc
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,764 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@51b87df7] under mode; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2315052d] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@634e1b39] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@67d8faec] under rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@751d7425] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7eaa2bc6] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6dae70f9] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4d81e83a] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:53:11,765 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:53:11,766 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:53:11,767 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,768 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:53:11,769 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:53:11,770 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:53:11,770 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,780 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.editProductDetails(App.java:82)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:53:11,781 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:53:11,782 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:53:11,783 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@9690008] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@718989fa]
[DEBUG] 2023-06-04 12:53:11,783 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: ecb97528-8b52-4880-bcde-3ab78e57ffa2 (<unnamed>)
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@1777369261 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:53:11,784 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 2016400644
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:53:11,786 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:53:11,787 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@1537c744
[DEBUG] 2023-06-04 12:53:11,787 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:53:13,405 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-04 12:53:19,322 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:54:47,039 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:54:53,461 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:54:53,466 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:54:53,469 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:54:53,473 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-04 12:54:53,507 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-04 12:54:53,508 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-04 12:54:53,509 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-04 12:54:53,528 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:54:53,531 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:54:53,532 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:54:53,533 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:54:53,534 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:54:53,535 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:54:53,536 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:54:53,544 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:54:53,545 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:54:53,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,627 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:54:53,628 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,629 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,630 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:54:53,631 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:54:53,632 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:54:53,633 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:54:53,634 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:54:53,635 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:54:53,636 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:54:53,637 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:54:53,637 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:54:53,640 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:54:53,640 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-04 12:54:53,641 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-04 12:54:53,642 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-04 12:54:53,644 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:54:53,644 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-04 12:54:53,685 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:54:53,685 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:54:53,697 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:54:53,700 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:54:53,702 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:54:53,702 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:54:53,926 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:54:53,955 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:54:53,959 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:54:53,959 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:54:53,971 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,971 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,972 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:54:53,973 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:54:53,973 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:54:53,974 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:54:53,975 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:54:53,978 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-04 12:54:54,004 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:54:54,024 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,035 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:54:54,039 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:54:54,046 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:54:54,057 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,058 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:54:54,058 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,060 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:54:54,063 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:54:54,066 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:54:54,069 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:54:54,069 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:54:54,071 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:54:54,072 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:54:54,073 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,074 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:54:54,075 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:54:54,076 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:54:54,080 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:54:54,081 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:54:54,082 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:54:54,083 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:54:54,104 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:54:54,195 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:54:54,220 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:54:54,221 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:54:54,223 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:54:54,227 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:54:54,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:54:54,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:54:54,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:54:54,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-04 12:54:54,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:54:54,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:54:54,255 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:54:54,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-04 12:54:54,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-04 12:54:54,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:54:54,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-04 12:54:54,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-04 12:54:54,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-04 12:54:54,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:54:54,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:54:54,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:54:54,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:54:54,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-04 12:54:54,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:54:54,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:54:54,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:54:54,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:54:54,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:54:54,273 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,274 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,276 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,277 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:54:54,278 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:54:54,279 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:54:54,280 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:54:54,281 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:54:54,282 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,283 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:54:54,284 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:54:54,287 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:54:54,382 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:54:54,382 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,525 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.editProductDetails(App.java:82)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:54:54,556 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:54:54,556 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:54:54,597 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:54:54,597 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:54:54,598 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:54:54,606 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:54:54,608 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:54:54,619 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:54:54,621 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:54:54,646 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:54:54,647 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:54:54,651 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:54:54,651 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:54:54,653 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:54:54,653 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:54:54,654 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:54:54,655 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: cc5a9473-1e1d-4601-9232-d22573325714 (<unnamed>)
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:54:54,657 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:54:54,683 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:54:54,695 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:54:54,705 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:54:54,705 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@91273747 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:54:54,711 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:54:54,723 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1235151206
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:54:54,725 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:54:54,728 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:54:54,728 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@39da5e49
[DEBUG] 2023-06-04 12:54:54,730 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:55:10,058 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:55:10,059 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:55:10,060 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:10,061 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,062 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:10,063 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:10,064 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,065 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:10,066 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@14d25b6e
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@51c65a43
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@740dcae3
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@4e140497
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@481b2f10
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2b6c7012
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@31acfd4e
[DEBUG] 2023-06-04 12:55:10,067 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5f726750
[DEBUG] 2023-06-04 12:55:10,068 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4e80a001] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:10,068 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@624b523] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50b46e24]
[DEBUG] 2023-06-04 12:55:10,077 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:10,077 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:55:10,078 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:55:10,096 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:10,097 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62ade015] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70ede57d]
[DEBUG] 2023-06-04 12:55:10,098 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:55:10,099 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:55:10,100 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:55:10,101 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:55:10,102 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:55:10,103 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:55:10,104 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:55:10,105 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:55:10,106 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:55:10,106 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61f377d1, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:55:10,107 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6c538eb2] under count; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@738a5848] under every; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@487cd177] under any; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@324b6a56] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@421d54b3] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,108 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63f40ca0] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dad8ec0] under pi; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@24dd44f9] under log; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@ccd341d] under position; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4f1fb828] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@6ee5f485] under trim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@20d19f2c] under cast; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@45592af7] under collate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@77b5148c] under extract; prior registration was null
[DEBUG] 2023-06-04 12:55:10,109 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@36359723] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@1ab14636] under pad; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@16b3c905] under str; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@49fdbe2b] under format; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@53eba4b8] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@437bd805] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b88ca8e] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6fa02932] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@61608e1a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7c46c9c3] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7197b07f] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1f10fec6] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7a65a360] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30a7653e] under instant; prior registration was null
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:55:10,110 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@7cff3f1d] under sql; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6401188a] under count; prior registration was org.hibernate.dialect.function.CountFunction@6c538eb2
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@33a8c9c9] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4dad8ec0
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@382dc417] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:55:10,111 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7197b07f
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1f10fec6
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3daf03d8] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@510689af] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:55:10,112 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2415e4c7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@ccd341d
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@72ce812e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:55:10,113 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@373afd6c] under format; prior registration was org.hibernate.dialect.function.FormatFunction@49fdbe2b
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@521441d5] under mode; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@592ca48c] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5fed9976] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3fdcde7a] under rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4f363abd] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7302ff13] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4017fe2c] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1961d75a] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,114 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,115 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,116 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:55:10,117 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:55:10,118 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,119 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:55:10,120 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:55:10,121 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:55:10,122 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:10,122 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,137 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.updateProduct(JpaProductDao.java:48)
	at com.targetindia.service.ProductManager.updateProduct(ProductManager.java:28)
	at com.targetindia.App.editProductDetails(App.java:126)
	at com.targetindia.App.start(App.java:35)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:55:10,138 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:10,139 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:55:10,140 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:55:10,141 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@62ade015] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6274f21c]
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: fd464c64-7823-48c2-bcb4-02e02137c7fc (<unnamed>)
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:55:10,141 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:55:10,142 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[DEBUG] 2023-06-04 12:55:10,142 main            org.hibernate.engine.transaction.internal.TransactionImpl [81] begin
[DEBUG] 2023-06-04 12:55:10,146 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@327574313 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:55:10,147 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 2144659477
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [35.0]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [20]
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:55:10,149 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@5f6b53ed
[DEBUG] 2023-06-04 12:55:10,151 main            org.hibernate.engine.transaction.internal.TransactionImpl [98] committing
[DEBUG] 2023-06-04 12:55:10,151 main            org.hibernate.event.internal.AbstractFlushingEventListener [136] Processing flush-time cascades
[DEBUG] 2023-06-04 12:55:10,152 main            org.hibernate.event.internal.AbstractFlushingEventListener [179] Dirty checking collections
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.event.internal.AbstractFlushingEventListener [110] Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.event.internal.AbstractFlushingEventListener [117] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2023-06-04 12:55:10,157 main            org.hibernate.internal.util.EntityPrinter [111] Listing entities:
[DEBUG] 2023-06-04 12:55:10,158 main            org.hibernate.internal.util.EntityPrinter [118] com.targetindia.model.Product{unitPrice=38.0, unitsInStock=22, name=Cold Coffee, id=7, quantityPerUnit=200ml tetrapack, category=Beverages}
[DEBUG] 2023-06-04 12:55:10,166 main            org.hibernate.SQL [133] 
    update
        products 
    set
        category=?,
        name=?,
        quantity_per_unit=?,
        unit_price=?,
        units_in_stock=? 
    where
        id=?
[DEBUG] 2023-06-04 12:55:10,172 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:10,173 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-04 12:55:14,201 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-04 12:55:14,202 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-04 12:55:14,202 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,203 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,204 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-04 12:55:14,205 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-04 12:55:14,206 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-04 12:55:14,207 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-04 12:55:14,208 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@51ff3c4b
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1472208d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@35bd8bc9
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6de004f1
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@45d56062
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@4026461d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@191c6e13
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7436364d
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1a8e9ed9] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:14,209 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@68ea253b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12fcb2c3]
[DEBUG] 2023-06-04 12:55:14,216 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-04 12:55:14,216 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-04 12:55:14,217 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-04 12:55:14,230 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-04 12:55:14,231 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-04 12:55:14,232 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@482c351d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@75eaba95]
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-04 12:55:14,233 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-04 12:55:14,234 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-04 12:55:14,235 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-04 12:55:14,236 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-04 12:55:14,237 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-04 12:55:14,238 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-04 12:55:14,239 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-04 12:55:14,239 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@435e416c, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-04 12:55:14,240 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6af310c7] under count; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4aed311e] under every; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@4c38cd16] under any; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-04 12:55:14,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ddcb0dc] under sinh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f5bf288] under cosh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2c1d57bc] under tanh; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c77f54] under pi; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e856100] under log; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6e9a0bea] under position; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@28fc1132] under overlay; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@355ce6a6] under trim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@20440c6c] under cast; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1e3f86d5] under collate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@560271a1] under extract; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-04 12:55:14,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4b9c411] under ifnull; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@41e9f86] under pad; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@66f5b8fe] under str; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@233f52f8] under format; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@69ec93c2] under timestampadd; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@19fec3d6] under timestampdiff; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5287ba5f] under current_date; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b768a65] under current_time; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6897a4a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6986f93e] under local_date; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6bce313] under local_time; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@39266403] under local_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@74b00247] under offset_datetime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2aa14ae6] under instant; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4be490da] under sql; prior registration was null
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-04 12:55:14,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4168f3d9] under count; prior registration was org.hibernate.dialect.function.CountFunction@6af310c7
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@353e6389] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26c77f54
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@15e8f9b2] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-04 12:55:14,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6bce313
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@39266403
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7a65c995] under trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7c950b3b] under date_trunc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3af10d0b] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6e9a0bea
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6806468e] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-04 12:55:14,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3c7b137a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@233f52f8
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@68631b1d] under mode; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5a48da4f] under percentile_cont; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@a0c5be] under percentile_disc; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6424e613] under rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@14efa279] under dense_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@8e99809] under percent_rank; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@e62319f] under cume_dist; prior registration was null
[DEBUG] 2023-06-04 12:55:14,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4d354a3e] under listagg; prior registration was null
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-04 12:55:14,247 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-04 12:55:14,248 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-04 12:55:14,249 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-04 12:55:14,250 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-04 12:55:14,251 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-04 12:55:14,252 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-04 12:55:14,253 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,266 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductById(JpaProductDao.java:38)
	at com.targetindia.service.ProductManager.getProduct(ProductManager.java:23)
	at com.targetindia.App.displayProductForId(App.java:183)
	at com.targetindia.App.start(App.java:26)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-04 12:55:14,267 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-04 12:55:14,268 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-04 12:55:14,269 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-04 12:55:14,269 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-04 12:55:14,270 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@482c351d] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@22f02996]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 0a689234-c536-45a8-bc0c-6b28b21b07e0 (<unnamed>)
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = IGNORE
[DEBUG] 2023-06-04 12:55:14,270 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-04 12:55:14,271 main            org.hibernate.orm.results [150]     com.targetindia.model.Product -> EntityResultInitializer(com.targetindia.model.Product)@2089317615 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-04 12:55:14,271 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.id=?
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product): 7
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product#7] : 1413473944
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-04 12:55:14,272 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product#7
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6b2fdffc
[DEBUG] 2023-06-04 12:55:14,273 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-04 12:55:23,930 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-04 12:55:25,828 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-10 11:08:36,515 main            com.targetindia.App [275] starting the app
[TRACE] 2023-06-10 11:08:45,907 main            com.targetindia.App [277] terminating the app gracefully
[TRACE] 2023-06-10 11:11:34,918 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-10 11:11:39,672 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:11:39,672 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:11:39,673 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:11:39,677 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:11:39,680 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:11:39,683 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:11:39,714 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:11:39,715 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:11:39,716 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:11:39,730 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:11:39,734 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:11:39,734 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:11:39,734 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:11:39,734 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:11:39,735 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:11:39,735 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:11:39,735 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:11:39,736 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:11:39,736 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:11:39,737 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:11:39,737 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:11:39,737 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:11:39,745 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:11:39,745 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:39,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:39,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:39,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:11:39,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:11:39,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:11:39,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:11:39,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:11:39,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:11:39,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:11:39,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:11:39,825 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:11:39,825 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:11:39,825 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:11:39,830 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:11:39,830 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:11:39,831 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:11:39,834 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:11:39,834 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-10 11:11:39,879 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:11:39,880 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:11:39,892 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:11:39,899 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:11:39,899 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:11:39,899 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:11:39,899 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:11:39,901 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:11:39,901 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:11:40,236 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:11:40,239 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:11:40,239 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:11:40,274 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:11:40,277 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:11:40,277 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:11:40,288 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:40,288 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:40,288 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:40,289 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:11:40,289 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:11:40,291 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:11:40,292 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-10 11:11:40,295 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-10 11:11:40,316 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:11:40,336 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:40,347 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:11:40,351 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:11:40,357 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:11:40,368 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:40,369 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:11:40,369 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:40,372 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:11:40,375 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:11:40,378 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:11:40,381 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:11:40,381 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:11:40,383 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:11:40,384 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:11:40,385 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:11:40,386 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:11:40,387 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:11:40,388 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:11:40,388 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:11:40,388 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:11:40,388 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:11:40,388 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:11:40,392 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:11:40,393 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:11:40,394 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:11:40,394 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:11:40,394 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:11:40,394 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:11:40,396 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:11:40,420 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:11:40,518 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:11:40,543 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:11:40,543 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:11:40,546 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:11:40,551 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:11:40,573 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:11:40,573 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:11:40,574 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:11:40,574 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:11:40,575 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:11:40,576 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:11:40,577 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:11:40,578 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:11:40,578 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:11:40,578 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:11:40,578 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:11:40,579 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:11:40,579 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:11:40,579 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:11:40,579 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-10 11:11:40,579 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:11:40,580 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:11:40,581 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:11:40,581 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:11:40,581 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-10 11:11:40,582 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:11:40,582 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-10 11:11:40,583 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-10 11:11:40,583 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-10 11:11:40,583 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:11:40,584 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-10 11:11:40,585 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-10 11:11:40,585 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-10 11:11:40,586 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:11:40,587 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:11:40,588 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:11:40,589 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:11:40,590 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:11:40,591 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-10 11:11:40,592 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:11:40,593 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:11:40,594 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:11:40,595 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:11:40,596 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:11:40,596 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:11:40,596 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:11:40,596 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:11:40,596 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:11:40,598 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:11:40,599 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:11:40,601 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,601 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,601 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:40,601 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:11:40,602 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,602 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:40,604 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:11:40,605 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:11:40,606 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:11:40,607 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:11:40,608 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:40,609 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:11:40,610 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:11:40,611 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:11:40,612 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:11:40,615 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:11:40,711 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:11:40,711 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:40,839 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getAllProducts(JpaProductDao.java:102)
	at com.targetindia.service.ProductManager.getAllProducts(ProductManager.java:19)
	at com.targetindia.App.displayAllProducts(App.java:225)
	at com.targetindia.App.start(App.java:23)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-10 11:11:40,873 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:11:40,873 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:11:40,920 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:40,920 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:11:40,920 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:11:40,920 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:11:40,920 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:11:40,931 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:11:40,933 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:11:40,945 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:11:40,948 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:11:40,978 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:11:40,979 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:11:40,983 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:11:40,983 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:11:40,985 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:11:40,985 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:11:40,986 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-10 11:11:40,987 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:11:40,987 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:11:40,988 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:11:40,988 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:11:40,989 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-10 11:11:40,989 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: c1f69d5d-0c9a-4e0a-bc64-371a68490d62 (<unnamed>)
[DEBUG] 2023-06-10 11:11:40,989 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:11:40,989 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:11:41,017 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:11:41,019 main            org.hibernate.orm.query.hql [75] HQL : from Product
[DEBUG] 2023-06-10 11:11:41,124 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:11:41,129 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProduct
[DEBUG] 2023-06-10 11:11:41,136 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(4160491478030)`
            <- [root] - `com.targetindia.model.Product(4160491478030)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(4160491478030)`
          <- [root] - `com.targetindia.model.Product(4160491478030)`
        <- [from]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:11:41,164 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:11:41,164 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(4160491478030))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:11:41,169 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(4160491478030)]
 |  +-BasicFetch [com.targetindia.model.Product(4160491478030).category]
 |  +-BasicFetch [com.targetindia.model.Product(4160491478030).name]
 |  +-BasicFetch [com.targetindia.model.Product(4160491478030).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(4160491478030).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(4160491478030).unitsInStock]

[DEBUG] 2023-06-10 11:11:41,170 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(4160491478030)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:11:41,176 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:11:41,181 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:11:41,182 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(4160491478030) -> EntityResultInitializer(com.targetindia.model.Product(4160491478030))@560165559 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:11:41,185 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0
[DEBUG] 2023-06-10 11:11:41,193 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:11:41,194 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4160491478030)): 1
[DEBUG] 2023-06-10 11:11:41,195 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4160491478030)#1] : 2047521920
[DEBUG] 2023-06-10 11:11:41,195 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:11:41,195 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:11:41,195 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:11:41,195 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:11:41,196 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:11:41,198 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4160491478030)#1
[DEBUG] 2023-06-10 11:11:41,198 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:11:41,198 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:11:41,198 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4160491478030)): 4
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4160491478030)#4] : 995030431
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4160491478030)#4
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4160491478030)): 5
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4160491478030)#5] : 583744857
[DEBUG] 2023-06-10 11:11:41,199 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4160491478030)#5
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4160491478030)): 6
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4160491478030)#6] : 870627780
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:11:41,200 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4160491478030)#6
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4160491478030)): 7
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4160491478030)#7] : 1560244891
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:11:41,201 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4160491478030)#7
[DEBUG] 2023-06-10 11:11:41,202 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:11:41,203 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:11:41,204 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:11:51,465 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:11:51,465 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:11:51,465 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:11:51,465 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:11:51,466 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:11:51,466 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:11:51,468 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:11:51,468 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:11:51,468 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:11:51,468 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:11:51,469 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:11:51,470 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:11:51,470 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:11:51,470 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:11:51,471 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:51,472 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:11:51,473 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:11:51,474 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:11:51,475 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4fd74223
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4fea840f
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@32ae8f27
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@75e80a97
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5b8853
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1b8aaeab
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@5d1bdd4a
[DEBUG] 2023-06-10 11:11:51,476 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6812c8cc
[DEBUG] 2023-06-10 11:11:51,477 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3457cc8d] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:11:51,477 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7a66c35a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7994a0d1]
[DEBUG] 2023-06-10 11:11:51,484 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:11:51,484 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:11:51,485 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:11:51,501 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:11:51,501 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:11:51,501 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:11:51,502 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:11:51,502 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:11:51,502 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c2a95d5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24d8f87a]
[DEBUG] 2023-06-10 11:11:51,503 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:11:51,504 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:51,504 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:11:51,504 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:11:51,504 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:11:51,505 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:11:51,506 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:11:51,507 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:11:51,508 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:11:51,509 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:11:51,510 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:11:51,511 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:11:51,511 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:11:51,512 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:11:51,512 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@255d9277, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:11:51,512 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:11:51,512 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1de13f34] under count; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7e191fda] under every; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@6562cc23] under any; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:11:51,513 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ce524d2] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3869a6e5] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@e3899fd] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d484fcd] under pi; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@788e3702] under log; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@d25e878] under position; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@47187f50] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78116659] under trim; prior registration was null
[DEBUG] 2023-06-10 11:11:51,514 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@712e787e] under cast; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ea380b] under collate; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@578c3fd9] under extract; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@245cb8df] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@26b3c9a2] under pad; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@241b971f] under str; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@125f16b2] under format; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5384ce66] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6b42e36d] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@13192275] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79195c22] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@c9b5a99] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70be89ec] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2aee0704] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@19a5b637] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f3c7808] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:11:51,515 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4b4969ea] under instant; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@11c581a0] under sql; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@256589a1] under count; prior registration was org.hibernate.dialect.function.CountFunction@1de13f34
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@935493d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7d484fcd
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9b367c8] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:11:51,516 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2aee0704
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@19a5b637
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@34c62fdf] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3de79067] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:11:51,517 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1eb85a47] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@d25e878
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@ca7e37f] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@99a8de3] under format; prior registration was org.hibernate.dialect.function.FormatFunction@125f16b2
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:11:51,518 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@87f501f] under mode; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@54495935] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@67c6f4d8] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a6e9856] under rank; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4863c8ac] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@56fda064] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6cdee57] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@482f7af0] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:11:51,519 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:11:51,520 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,521 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:11:51,522 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:11:51,523 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:11:51,524 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:11:51,524 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:11:51,524 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:51,537 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByCategory(JpaProductDao.java:110)
	at com.targetindia.service.ProductManager.getProductsByCategory(ProductManager.java:37)
	at com.targetindia.App.displayProductsForCategory(App.java:169)
	at com.targetindia.App.start(App.java:29)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:11:51,539 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:11:51,540 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:11:51,541 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:11:51,541 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:11:51,541 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:11:51,542 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6c2a95d5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@25ce435]
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 0339ae65-97a3-4b7d-ba7b-5e2395327747 (<unnamed>)
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:11:51,542 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(category.categoryName)=lower(?1)
[DEBUG] 2023-06-10 11:11:51,588 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:11:51,588 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(category.categoryName)=lower(?1)
[DEBUG] 2023-06-10 11:11:51,590 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [category] in local from-clause
[DEBUG] 2023-06-10 11:11:51,594 main            org.hibernate.engine.transaction.internal.TransactionImpl [53] On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[TRACE] 2023-06-10 11:12:25,109 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-10 11:12:31,972 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:12:31,973 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:12:31,973 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:12:31,977 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:12:31,980 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:12:31,983 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:12:32,017 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:12:32,018 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:12:32,019 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:12:32,036 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:12:32,039 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:12:32,040 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:12:32,040 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:12:32,040 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:12:32,040 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:12:32,041 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:12:32,041 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:12:32,042 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:12:32,043 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:12:32,043 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:12:32,043 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:12:32,044 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:12:32,052 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:12:32,053 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:12:32,128 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:12:32,129 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:32,130 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:12:32,131 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:12:32,132 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:12:32,133 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:12:32,134 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:32,135 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:32,136 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:12:32,137 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:12:32,141 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:12:32,141 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:12:32,141 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:12:32,142 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:12:32,145 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:12:32,145 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:12:32,182 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:12:32,182 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:12:32,194 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:12:32,197 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:12:32,197 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:12:32,197 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:12:32,197 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:12:32,199 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:12:32,199 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:12:32,428 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:12:32,428 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:12:32,428 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:12:32,463 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:12:32,467 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:12:32,467 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:12:32,479 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:32,479 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:32,480 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:32,481 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:12:32,481 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:12:32,482 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:12:32,484 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@1a6f5124)
[DEBUG] 2023-06-10 11:12:32,486 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27f9e982] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4593ff34]
[DEBUG] 2023-06-10 11:12:32,512 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:12:32,532 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:32,542 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:12:32,547 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:12:32,553 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:12:32,564 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:32,564 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:12:32,564 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:32,567 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:12:32,570 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:12:32,573 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:12:32,576 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:12:32,576 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:12:32,578 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:12:32,579 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:12:32,580 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:12:32,581 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:12:32,582 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:12:32,583 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:12:32,583 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:12:32,587 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:12:32,588 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:12:32,588 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:12:32,588 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:12:32,588 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:12:32,588 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:12:32,590 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:12:32,611 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:12:32,716 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:12:32,744 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:12:32,744 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@68b58644, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:12:32,747 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:12:32,752 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:12:32,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:12:32,775 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:12:32,776 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:12:32,776 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:12:32,777 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6fd12c5] under count; prior registration was null
[DEBUG] 2023-06-10 11:12:32,778 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under every; prior registration was null
[DEBUG] 2023-06-10 11:12:32,778 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5477a1ca] under any; prior registration was null
[DEBUG] 2023-06-10 11:12:32,778 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:12:32,779 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:12:32,780 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:12:32,780 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:12:32,780 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:12:32,780 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:12:32,780 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under pi; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under log; prior registration was null
[DEBUG] 2023-06-10 11:12:32,781 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:12:32,782 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:12:32,783 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@602ae7b6] under position; prior registration was null
[DEBUG] 2023-06-10 11:12:32,784 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@77eb5790] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:12:32,784 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@ef1695a] under trim; prior registration was null
[DEBUG] 2023-06-10 11:12:32,785 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@27b45ea] under cast; prior registration was null
[DEBUG] 2023-06-10 11:12:32,785 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e17a0a1] under collate; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@161f6623] under extract; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@69228e85] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:12:32,786 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:12:32,787 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2f61d591] under pad; prior registration was null
[DEBUG] 2023-06-10 11:12:32,787 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@53a9fcfd] under str; prior registration was null
[DEBUG] 2023-06-10 11:12:32,788 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@fb6097b] under format; prior registration was null
[DEBUG] 2023-06-10 11:12:32,788 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@55d9b8f0] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@710d89e2] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:12:32,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under instant; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@5c534b5b] under sql; prior registration was null
[DEBUG] 2023-06-10 11:12:32,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@396639b] under count; prior registration was org.hibernate.dialect.function.CountFunction@6fd12c5
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@14229fa7] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:12:32,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2ab0702e] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:12:32,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:12:32,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:12:32,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:12:32,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:12:32,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-10 11:12:32,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1dd7796b
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3ee69ad8] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:12:32,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@602ae7b6
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59d77850] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:12:32,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@53ed09e8] under format; prior registration was org.hibernate.dialect.function.FormatFunction@fb6097b
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:12:32,797 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:12:32,798 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:12:32,798 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:12:32,798 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:12:32,798 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:12:32,798 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:12:32,799 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under mode; prior registration was null
[DEBUG] 2023-06-10 11:12:32,799 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:12:32,799 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6631cb64] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:12:32,799 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under rank; prior registration was null
[DEBUG] 2023-06-10 11:12:32,800 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:12:32,800 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:12:32,800 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7e2c64] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:12:32,800 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@4cb40e3b] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:12:32,801 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,802 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,802 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:32,802 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:12:32,802 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,802 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:32,804 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:12:32,805 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:12:32,806 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:12:32,807 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:12:32,808 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:12:32,809 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:12:32,810 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,811 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:12:32,812 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,813 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:32,813 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:12:32,813 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:12:32,816 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:12:32,911 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:12:32,911 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:33,054 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByCategory(JpaProductDao.java:110)
	at com.targetindia.service.ProductManager.getProductsByCategory(ProductManager.java:37)
	at com.targetindia.App.displayProductsForCategory(App.java:169)
	at com.targetindia.App.start(App.java:29)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-10 11:12:33,086 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:12:33,086 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:12:33,129 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:33,129 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:12:33,129 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:12:33,130 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:12:33,130 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:12:33,139 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:12:33,141 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:12:33,154 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:12:33,156 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:12:33,188 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:12:33,189 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:12:33,194 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:12:33,195 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:12:33,197 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:12:33,197 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:12:33,198 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27f9e982] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@16a5c7e4]
[DEBUG] 2023-06-10 11:12:33,199 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:12:33,199 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:12:33,200 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:12:33,200 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:12:33,201 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@5a90265a
[DEBUG] 2023-06-10 11:12:33,201 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: f0a54155-ba8f-4739-8ba3-4beba18c136a (<unnamed>)
[DEBUG] 2023-06-10 11:12:33,201 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:12:33,201 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:12:33,231 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:12:33,234 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(category)=lower(?1)
[DEBUG] 2023-06-10 11:12:33,388 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:12:33,395 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(category)=lower(?1)
[DEBUG] 2023-06-10 11:12:33,397 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [category] in local from-clause
[DEBUG] 2023-06-10 11:12:33,412 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(4212757187800)`
            <- [root] - `com.targetindia.model.Product(4212757187800)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(4212757187800)`
          <- [root] - `com.targetindia.model.Product(4212757187800)`
        <- [from]
        -> [where]
          -> [EQUAL]
          <- [EQUAL]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:12:33,452 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:12:33,453 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(4212757187800))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:12:33,464 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:12:33,469 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(4212757187800)]
 |  +-BasicFetch [com.targetindia.model.Product(4212757187800).category]
 |  +-BasicFetch [com.targetindia.model.Product(4212757187800).name]
 |  +-BasicFetch [com.targetindia.model.Product(4212757187800).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(4212757187800).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(4212757187800).unitsInStock]

[DEBUG] 2023-06-10 11:12:33,469 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(4212757187800)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:12:33,478 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:12:33,490 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:12:33,491 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(4212757187800) -> EntityResultInitializer(com.targetindia.model.Product(4212757187800))@606061176 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:12:33,495 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.category)=lower(?)
[DEBUG] 2023-06-10 11:12:33,506 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:12:33,507 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4212757187800)): 1
[DEBUG] 2023-06-10 11:12:33,508 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4212757187800)#1] : 942649169
[DEBUG] 2023-06-10 11:12:33,508 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:33,508 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:12:33,509 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:12:33,509 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:12:33,509 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:12:33,512 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4212757187800)#1
[DEBUG] 2023-06-10 11:12:33,512 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@295b07e0
[DEBUG] 2023-06-10 11:12:33,512 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:12:33,512 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4212757187800)): 4
[DEBUG] 2023-06-10 11:12:33,512 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4212757187800)#4] : 1360209172
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4212757187800)#4
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@295b07e0
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4212757187800)): 5
[DEBUG] 2023-06-10 11:12:33,513 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4212757187800)#5] : 545672401
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:12:33,514 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4212757187800)#5
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@295b07e0
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4212757187800)): 7
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4212757187800)#7] : 1552127607
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:12:33,515 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4212757187800)#7
[DEBUG] 2023-06-10 11:12:33,516 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@295b07e0
[DEBUG] 2023-06-10 11:12:33,517 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:12:33,518 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:12:43,659 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:12:43,659 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:12:43,659 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:12:43,659 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:12:43,660 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:12:43,660 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:12:43,670 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:12:43,671 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:12:43,672 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:43,673 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:12:43,674 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:12:43,675 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:12:43,676 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:12:43,677 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5834198f
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4eb63dc8
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@402d6012
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@395281c2
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@41d20f06
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3e753289
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@1573e8a5
[DEBUG] 2023-06-10 11:12:43,678 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@38022758
[DEBUG] 2023-06-10 11:12:43,679 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@69f9b561] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:12:43,679 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7e8f23ad] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7433ca19]
[DEBUG] 2023-06-10 11:12:43,687 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:12:43,687 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:12:43,688 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:12:43,704 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:12:43,704 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:12:43,704 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:12:43,705 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:12:43,705 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:12:43,705 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@1a6f5124)
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dc335a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a95cb11]
[DEBUG] 2023-06-10 11:12:43,706 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:12:43,707 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:43,707 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:12:43,707 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:12:43,707 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:12:43,708 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:12:43,709 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:12:43,710 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:12:43,711 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:12:43,712 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:12:43,713 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:12:43,714 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:12:43,714 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:12:43,714 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2513155a, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:12:43,715 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6313b441] under count; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47fa3671] under every; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@60f662bd] under any; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5df2023c] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:12:43,716 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@23bd047f] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3562e7c7] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66d2885c] under pi; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2bfc8558] under log; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@6029f2a4] under position; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@42576db9] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@30358dc7] under trim; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7fac18dc] under cast; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@50bf795f] under collate; prior registration was null
[DEBUG] 2023-06-10 11:12:43,717 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@29fcfc54] under extract; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@353b0719] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@2a4e939a] under pad; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@110620d] under str; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4f402027] under format; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@22aee519] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@7c226095] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ea07516] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30af23fd] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65fc8edc] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a357c3e] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7740b0ab] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3eb9c575] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:12:43,718 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3f322610] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1e477944] under instant; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@6cf047cf] under sql; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1c92a549] under count; prior registration was org.hibernate.dialect.function.CountFunction@6313b441
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@323e026d] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@66d2885c
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:12:43,719 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1716c037] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:12:43,720 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7740b0ab
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3eb9c575
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@79b63325] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@708769b7] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32e830a0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@6029f2a4
[DEBUG] 2023-06-10 11:12:43,721 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@135e49b2] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5bb97fe7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4f402027
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:12:43,722 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10b87ff6] under mode; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@63262071] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2d4f67e] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1282f784] under rank; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@41167ded] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@13e1e816] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@36238b12] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@33187485] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:12:43,723 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:12:43,724 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:12:43,725 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:12:43,726 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:12:43,727 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:12:43,728 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:12:43,729 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:43,743 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getAllProducts(JpaProductDao.java:102)
	at com.targetindia.service.ProductManager.getAllProducts(ProductManager.java:19)
	at com.targetindia.App.displayAllProducts(App.java:225)
	at com.targetindia.App.start(App.java:23)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-10 11:12:43,744 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:12:43,745 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:12:43,745 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:12:43,745 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:12:43,746 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:12:43,747 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:12:43,747 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:12:43,747 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:12:43,747 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:12:43,748 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@27dc335a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@49122853]
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 6941f970-3bca-4879-8477-04ba5b63591f (<unnamed>)
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:12:43,748 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:12:43,749 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:12:43,749 main            org.hibernate.orm.query.hql [75] HQL : from Product
[DEBUG] 2023-06-10 11:12:43,749 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:12:43,749 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProduct
[DEBUG] 2023-06-10 11:12:43,749 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(4223111863643)`
            <- [root] - `com.targetindia.model.Product(4223111863643)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(4223111863643)`
          <- [root] - `com.targetindia.model.Product(4223111863643)`
        <- [from]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:12:43,750 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:12:43,750 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(4223111863643))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:12:43,750 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(4223111863643)]
 |  +-BasicFetch [com.targetindia.model.Product(4223111863643).category]
 |  +-BasicFetch [com.targetindia.model.Product(4223111863643).name]
 |  +-BasicFetch [com.targetindia.model.Product(4223111863643).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(4223111863643).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(4223111863643).unitsInStock]

[DEBUG] 2023-06-10 11:12:43,750 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(4223111863643)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:12:43,751 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:12:43,751 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:12:43,751 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(4223111863643) -> EntityResultInitializer(com.targetindia.model.Product(4223111863643))@22426187 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:12:43,751 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0
[DEBUG] 2023-06-10 11:12:43,752 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:12:43,752 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4223111863643)): 1
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4223111863643)#1] : 2068545945
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4223111863643)#1
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbf20d1
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4223111863643)): 4
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4223111863643)#4] : 1875825244
[DEBUG] 2023-06-10 11:12:43,753 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4223111863643)#4
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbf20d1
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4223111863643)): 5
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4223111863643)#5] : 1022680775
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:12:43,754 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4223111863643)#5
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbf20d1
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4223111863643)): 6
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4223111863643)#6] : 462735241
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4223111863643)#6
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbf20d1
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4223111863643)): 7
[DEBUG] 2023-06-10 11:12:43,755 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4223111863643)#7] : 698336642
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4223111863643)#7
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4bbf20d1
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:12:43,756 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-10 11:13:41,244 main            com.targetindia.App [275] starting the app
[DEBUG] 2023-06-10 11:13:43,621 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:13:43,621 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:13:43,621 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:13:43,626 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:13:43,629 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:13:43,632 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:13:43,666 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:13:43,667 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:13:43,668 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:13:43,686 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:13:43,689 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:13:43,690 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:13:43,690 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:13:43,690 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:13:43,691 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:13:43,691 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:13:43,691 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:13:43,692 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:13:43,693 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:13:43,693 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:13:43,693 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:13:43,694 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:13:43,702 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:13:43,703 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:13:43,784 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:13:43,785 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:13:43,786 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:13:43,787 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:13:43,788 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:13:43,789 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:13:43,790 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:13:43,791 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:13:43,792 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:13:43,793 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:13:43,794 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:13:43,795 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:13:43,796 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:13:43,800 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:13:43,801 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:13:43,801 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:13:43,802 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:13:43,805 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:13:43,805 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-10 11:13:43,850 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:13:43,850 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:13:43,863 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:13:43,867 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:13:43,867 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:13:43,868 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:13:43,868 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:13:43,870 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:13:43,870 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:13:44,098 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:13:44,098 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:13:44,098 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:13:44,127 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:13:44,131 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:13:44,131 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:13:44,140 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:13:44,141 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:13:44,141 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:13:44,142 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:13:44,142 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:13:44,143 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:13:44,144 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@2a551a63)
[DEBUG] 2023-06-10 11:13:44,147 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@27f9e982]
[DEBUG] 2023-06-10 11:13:44,169 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:13:44,186 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:13:44,190 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:13:44,199 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:13:44,204 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:13:44,214 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:13:44,215 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:13:44,215 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:13:44,217 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:13:44,219 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:13:44,222 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:13:44,224 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:13:44,224 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:13:44,226 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:13:44,227 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:13:44,228 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:13:44,228 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:13:44,228 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:13:44,228 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:13:44,228 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:13:44,229 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:13:44,230 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:13:44,231 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:13:44,231 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:13:44,231 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:13:44,231 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:13:44,231 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:13:44,235 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:13:44,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:13:44,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:13:44,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:13:44,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:13:44,236 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:13:44,237 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:13:44,260 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:13:44,364 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:13:44,393 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:13:44,393 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2cc04358, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:13:44,396 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:13:44,401 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:13:44,424 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:13:44,424 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:13:44,425 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:13:44,426 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:13:44,426 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@3e1a3801] under count; prior registration was null
[DEBUG] 2023-06-10 11:13:44,427 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@149debbb] under every; prior registration was null
[DEBUG] 2023-06-10 11:13:44,427 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@25cd49a4] under any; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:13:44,428 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:13:44,429 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@216914] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ba30587] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@35764bef] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd] under pi; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under log; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:13:44,431 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:13:44,432 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:13:44,433 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3901f6af] under position; prior registration was null
[DEBUG] 2023-06-10 11:13:44,434 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3724b43e] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:13:44,434 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@238bfd6c] under trim; prior registration was null
[DEBUG] 2023-06-10 11:13:44,435 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b3fe06e] under cast; prior registration was null
[DEBUG] 2023-06-10 11:13:44,435 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27b45ea] under collate; prior registration was null
[DEBUG] 2023-06-10 11:13:44,435 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@150ede8b] under extract; prior registration was null
[DEBUG] 2023-06-10 11:13:44,435 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@4e1ce44] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@524a2ffb] under pad; prior registration was null
[DEBUG] 2023-06-10 11:13:44,436 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@72456279] under str; prior registration was null
[DEBUG] 2023-06-10 11:13:44,437 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@bfc14b9] under format; prior registration was null
[DEBUG] 2023-06-10 11:13:44,438 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6a9b9909] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:13:44,438 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3419e23b] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:13:44,438 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:13:44,438 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34b27915] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29eda4f8] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1b9776f5] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5e048149] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:13:44,439 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under instant; prior registration was null
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@a18649a] under sql; prior registration was null
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:13:44,440 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5c534b5b] under count; prior registration was org.hibernate.dialect.function.CountFunction@3e1a3801
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2418ba04] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5633dafd
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@14229fa7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:13:44,441 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:13:44,442 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@79d9214d
[DEBUG] 2023-06-10 11:13:44,443 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3d5790ea
[DEBUG] 2023-06-10 11:13:44,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@2d82408] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:13:44,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:13:44,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee69ad8] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:13:44,444 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:13:44,445 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@f679798] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3901f6af
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a6cf771] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:13:44,446 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@59d77850] under format; prior registration was org.hibernate.dialect.function.FormatFunction@bfc14b9
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:13:44,447 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:13:44,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:13:44,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:13:44,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:13:44,448 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@18acfe88] under mode; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@8a2a6a] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@772861aa] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c8f9c2e] under rank; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@140d1230] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3cbf1ba4] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:13:44,449 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@10bea4] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:13:44,450 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3dd818e8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,451 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:13:44,454 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:13:44,455 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,456 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:13:44,457 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:13:44,458 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:13:44,459 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:13:44,460 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,461 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:13:44,462 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,463 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:13:44,463 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:13:44,463 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:13:44,466 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:13:44,560 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:13:44,561 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:13:44,690 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getAllProducts(JpaProductDao.java:102)
	at com.targetindia.service.ProductManager.getAllProducts(ProductManager.java:19)
	at com.targetindia.App.displayAllProducts(App.java:225)
	at com.targetindia.App.start(App.java:23)
	at com.targetindia.App.main(App.java:276)
[DEBUG] 2023-06-10 11:13:44,720 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:13:44,721 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:13:44,764 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:13:44,764 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:13:44,764 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:13:44,764 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:13:44,765 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:13:44,773 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:13:44,775 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:13:44,788 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:13:44,790 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:13:44,823 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:13:44,823 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:13:44,829 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:13:44,829 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:13:44,831 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:13:44,832 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:13:44,832 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2d35442b] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@14168e1]
[DEBUG] 2023-06-10 11:13:44,833 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:13:44,833 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:13:44,834 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:13:44,834 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:13:44,835 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@134f8ef6
[DEBUG] 2023-06-10 11:13:44,835 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: c3243ba0-4418-4187-8a13-535de0ad136f (<unnamed>)
[DEBUG] 2023-06-10 11:13:44,835 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:13:44,835 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:13:44,866 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:13:44,870 main            org.hibernate.orm.query.hql [75] HQL : from Product
[DEBUG] 2023-06-10 11:13:44,979 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:13:44,984 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProduct
[DEBUG] 2023-06-10 11:13:44,992 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(4284346404629)`
            <- [root] - `com.targetindia.model.Product(4284346404629)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(4284346404629)`
          <- [root] - `com.targetindia.model.Product(4284346404629)`
        <- [from]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:13:45,020 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:13:45,020 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(4284346404629))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:13:45,024 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(4284346404629)]
 |  +-BasicFetch [com.targetindia.model.Product(4284346404629).category]
 |  +-BasicFetch [com.targetindia.model.Product(4284346404629).name]
 |  +-BasicFetch [com.targetindia.model.Product(4284346404629).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(4284346404629).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(4284346404629).unitsInStock]

[DEBUG] 2023-06-10 11:13:45,025 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(4284346404629)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:13:45,031 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:13:45,037 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:13:45,038 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(4284346404629) -> EntityResultInitializer(com.targetindia.model.Product(4284346404629))@560165559 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:13:45,041 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0
[DEBUG] 2023-06-10 11:13:45,048 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:13:45,049 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4284346404629)): 1
[DEBUG] 2023-06-10 11:13:45,050 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4284346404629)#1] : 2047521920
[DEBUG] 2023-06-10 11:13:45,050 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:13:45,050 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:13:45,050 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:13:45,050 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:13:45,051 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:13:45,053 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4284346404629)#1
[DEBUG] 2023-06-10 11:13:45,053 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:13:45,053 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:13:45,053 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4284346404629)): 4
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4284346404629)#4] : 995030431
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4284346404629)#4
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4284346404629)): 5
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4284346404629)#5] : 583744857
[DEBUG] 2023-06-10 11:13:45,054 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4284346404629)#5
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4284346404629)): 6
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4284346404629)#6] : 870627780
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:13:45,055 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4284346404629)#6
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(4284346404629)): 7
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(4284346404629)#7] : 1560244891
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:13:45,056 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:13:45,057 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(4284346404629)#7
[DEBUG] 2023-06-10 11:13:45,057 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2407a36c
[DEBUG] 2023-06-10 11:13:45,058 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:13:45,059 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-10 11:35:49,935 main            com.targetindia.App [289] starting the app
[DEBUG] 2023-06-10 11:35:52,651 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:35:52,651 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:35:52,652 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:35:52,656 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:35:52,659 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:35:52,662 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:35:52,695 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:35:52,696 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:35:52,697 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:35:52,714 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:35:52,717 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:35:52,717 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:35:52,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:35:52,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:35:52,718 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:35:52,719 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:35:52,720 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:35:52,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:35:52,721 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:35:52,722 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:35:52,722 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:35:52,723 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:35:52,730 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:35:52,731 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:35:52,813 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:35:52,814 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:35:52,815 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:35:52,816 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:35:52,817 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:35:52,818 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:35:52,819 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:35:52,820 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:35:52,821 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:35:52,822 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:35:52,823 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:35:52,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:35:52,824 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:35:52,827 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:35:52,827 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@17497425
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:35:52,828 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:35:52,829 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:35:52,831 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@47d9a273] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:35:52,831 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4b8ee4de] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6]
[DEBUG] 2023-06-10 11:35:52,872 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:35:52,872 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:35:52,883 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:35:52,886 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:35:52,886 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:35:52,887 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:35:52,887 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:35:52,888 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:35:52,888 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:35:53,124 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:35:53,124 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:35:53,124 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:35:53,159 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:35:53,163 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:35:53,164 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:35:53,174 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:35:53,175 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:35:53,175 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:35:53,176 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:35:53,176 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:35:53,177 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:35:53,179 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@cc62a3b)
[DEBUG] 2023-06-10 11:35:53,182 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30c0ccff] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@581d969c]
[DEBUG] 2023-06-10 11:35:53,209 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:35:53,229 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:35:53,239 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:35:53,243 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:35:53,249 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:35:53,260 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:35:53,260 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:35:53,261 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:35:53,263 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:35:53,266 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:35:53,269 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:35:53,271 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:35:53,272 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:35:53,274 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:35:53,274 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:35:53,275 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:35:53,275 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:35:53,275 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:35:53,275 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:35:53,275 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:35:53,276 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:35:53,277 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:35:53,278 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:35:53,279 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:35:53,283 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:35:53,284 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:35:53,284 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:35:53,284 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:35:53,284 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:35:53,284 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:35:53,286 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:35:53,307 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:35:53,397 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:35:53,423 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:35:53,424 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4417af13, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:35:53,426 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:35:53,431 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:35:53,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:35:53,456 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:35:53,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:35:53,457 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:35:53,458 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@222afc67] under count; prior registration was null
[DEBUG] 2023-06-10 11:35:53,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@41522537] under every; prior registration was null
[DEBUG] 2023-06-10 11:35:53,459 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@e9dc4d0] under any; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:35:53,460 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:35:53,461 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:35:53,462 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:35:53,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5d5160e6] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:35:53,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:35:53,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2903c6ff] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:35:53,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61af1510] under pi; prior registration was null
[DEBUG] 2023-06-10 11:35:53,463 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37af1f93] under log; prior registration was null
[DEBUG] 2023-06-10 11:35:53,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:35:53,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:35:53,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:35:53,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:35:53,464 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:35:53,465 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:35:53,466 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@47af099e] under position; prior registration was null
[DEBUG] 2023-06-10 11:35:53,467 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@238bfd6c] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:35:53,468 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7487b142] under trim; prior registration was null
[DEBUG] 2023-06-10 11:35:53,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4d8286c4] under cast; prior registration was null
[DEBUG] 2023-06-10 11:35:53,469 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@150ede8b] under collate; prior registration was null
[DEBUG] 2023-06-10 11:35:53,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@4e1ce44] under extract; prior registration was null
[DEBUG] 2023-06-10 11:35:53,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:35:53,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:35:53,470 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@524a2ffb] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:35:53,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:35:53,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:35:53,471 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@72456279] under pad; prior registration was null
[DEBUG] 2023-06-10 11:35:53,472 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1416cf9f] under str; prior registration was null
[DEBUG] 2023-06-10 11:35:53,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6a9b9909] under format; prior registration was null
[DEBUG] 2023-06-10 11:35:53,473 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@75361cf6] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:35:53,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@34b27915] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:35:53,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:35:53,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:35:53,474 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@79d9214d] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:35:53,475 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under instant; prior registration was null
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:35:53,476 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@62573c86] under sql; prior registration was null
[DEBUG] 2023-06-10 11:35:53,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:35:53,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:35:53,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:35:53,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:35:53,477 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2418ba04] under count; prior registration was org.hibernate.dialect.function.CountFunction@222afc67
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@10f19647] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61af1510
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:35:53,478 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@102efc59] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:35:53,479 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:35:53,480 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@57402ba1
[DEBUG] 2023-06-10 11:35:53,481 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@56913163
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@59d77850] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ed09e8] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:35:53,482 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60859f5a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@47af099e
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1daf3b44] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:35:53,483 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@7fd8c559] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6a9b9909
[DEBUG] 2023-06-10 11:35:53,484 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:35:53,485 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:35:53,485 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:35:53,485 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:35:53,486 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:35:53,486 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:35:53,486 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:35:53,487 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@19962194] under mode; prior registration was null
[DEBUG] 2023-06-10 11:35:53,487 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@481e91b6] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:35:53,487 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c8f9c2e] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:35:53,487 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7e2c64] under rank; prior registration was null
[DEBUG] 2023-06-10 11:35:53,487 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c1e32c9] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:35:53,488 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@383864d5] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:35:53,488 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3dd818e8] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:35:53,488 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@47b67fcb] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:35:53,490 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,491 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,491 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:35:53,491 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:35:53,491 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,491 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:35:53,494 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:35:53,495 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:35:53,496 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:35:53,497 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:35:53,498 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:35:53,499 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:35:53,500 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:35:53,501 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:35:53,502 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,503 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:35:53,504 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:35:53,505 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:35:53,508 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:35:53,617 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:35:53,618 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:35:53,762 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getAllProducts(JpaProductDao.java:102)
	at com.targetindia.service.ProductManager.getAllProducts(ProductManager.java:19)
	at com.targetindia.App.displayAllProducts(App.java:239)
	at com.targetindia.App.start(App.java:23)
	at com.targetindia.App.main(App.java:290)
[DEBUG] 2023-06-10 11:35:53,793 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:35:53,793 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:35:53,833 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:35:53,833 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:35:53,833 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:35:53,833 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:35:53,834 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:35:53,842 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:35:53,844 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:35:53,855 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:35:53,856 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:35:53,880 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:35:53,881 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:35:53,885 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:35:53,885 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:35:53,888 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:35:53,888 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:35:53,888 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@30c0ccff] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@2a2dc0a]
[DEBUG] 2023-06-10 11:35:53,890 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:35:53,890 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:35:53,890 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:35:53,890 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:35:53,892 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@9accff0
[DEBUG] 2023-06-10 11:35:53,892 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 6ed182ff-7b66-44bb-ac27-566172d1fe2a (<unnamed>)
[DEBUG] 2023-06-10 11:35:53,892 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:35:53,892 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:35:53,919 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:35:53,923 main            org.hibernate.orm.query.hql [75] HQL : from Product
[DEBUG] 2023-06-10 11:35:54,043 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:35:54,049 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProduct
[DEBUG] 2023-06-10 11:35:54,057 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5613362852416)`
            <- [root] - `com.targetindia.model.Product(5613362852416)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5613362852416)`
          <- [root] - `com.targetindia.model.Product(5613362852416)`
        <- [from]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:35:54,088 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:35:54,089 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5613362852416))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:35:54,094 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5613362852416)]
 |  +-BasicFetch [com.targetindia.model.Product(5613362852416).category]
 |  +-BasicFetch [com.targetindia.model.Product(5613362852416).name]
 |  +-BasicFetch [com.targetindia.model.Product(5613362852416).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5613362852416).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5613362852416).unitsInStock]

[DEBUG] 2023-06-10 11:35:54,094 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5613362852416)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:35:54,101 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:35:54,108 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:35:54,108 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5613362852416) -> EntityResultInitializer(com.targetindia.model.Product(5613362852416))@362140338 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:35:54,112 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0
[DEBUG] 2023-06-10 11:35:54,121 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:35:54,121 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5613362852416)): 1
[DEBUG] 2023-06-10 11:35:54,122 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5613362852416)#1] : 728740247
[DEBUG] 2023-06-10 11:35:54,123 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:35:54,123 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:35:54,123 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:35:54,123 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:35:54,123 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:35:54,126 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5613362852416)#1
[DEBUG] 2023-06-10 11:35:54,126 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22cb3d59
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5613362852416)): 4
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5613362852416)#4] : 282166934
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5613362852416)#4
[DEBUG] 2023-06-10 11:35:54,127 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22cb3d59
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5613362852416)): 5
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5613362852416)#5] : 1804292128
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5613362852416)#5
[DEBUG] 2023-06-10 11:35:54,128 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22cb3d59
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5613362852416)): 6
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5613362852416)#6] : 2100817420
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5613362852416)#6
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22cb3d59
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:35:54,129 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5613362852416)): 7
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5613362852416)#7] : 1518022811
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5613362852416)#7
[DEBUG] 2023-06-10 11:35:54,130 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@22cb3d59
[DEBUG] 2023-06-10 11:35:54,132 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:35:54,133 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:36:05,744 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:36:05,745 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:05,746 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:05,747 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:36:05,748 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:05,749 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:05,750 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:05,751 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5b8853
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@1b8aaeab
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@5d1bdd4a
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6812c8cc
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3457cc8d
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7a66c35a
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7994a0d1
[DEBUG] 2023-06-10 11:36:05,752 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@73e4387
[DEBUG] 2023-06-10 11:36:05,753 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@d87d449] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:05,753 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4137aab0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1df9186f]
[DEBUG] 2023-06-10 11:36:05,761 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:05,761 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:36:05,761 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:36:05,776 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:05,777 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:05,777 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:36:05,777 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:36:05,777 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:36:05,777 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:36:05,778 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@cc62a3b)
[DEBUG] 2023-06-10 11:36:05,779 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3869a6e5] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@e3899fd]
[DEBUG] 2023-06-10 11:36:05,779 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:36:05,779 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:05,779 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:36:05,779 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:36:05,780 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:36:05,780 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:05,780 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:05,780 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:36:05,781 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:36:05,782 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:36:05,783 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:36:05,784 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:36:05,784 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:36:05,784 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:36:05,784 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:36:05,784 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:36:05,785 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:36:05,787 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:36:05,787 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:36:05,788 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:05,788 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@788e3702, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:36:05,788 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:36:05,789 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:05,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:36:05,789 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@d25e878] under count; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47187f50] under every; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@78116659] under any; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:36:05,790 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@712e787e] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53ea380b] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@578c3fd9] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@245cb8df] under pi; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@26b3c9a2] under log; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@241b971f] under position; prior registration was null
[DEBUG] 2023-06-10 11:36:05,791 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@125f16b2] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@5384ce66] under trim; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6b42e36d] under cast; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13192275] under collate; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@79195c22] under extract; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@c9b5a99] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@70be89ec] under pad; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@2aee0704] under str; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@19a5b637] under format; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@4f3c7808] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4b4969ea] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11c581a0] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@256589a1] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@935493d] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@9b367c8] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@34c62fdf] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:36:05,792 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3de79067] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1eb85a47] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@ca7e37f] under instant; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@99a8de3] under sql; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@87f501f] under count; prior registration was org.hibernate.dialect.function.CountFunction@d25e878
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@54495935] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@245cb8df
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67c6f4d8] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:36:05,793 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@34c62fdf
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3de79067
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3a6e9856] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:05,794 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4863c8ac] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@56fda064] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@241b971f
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6cdee57] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:36:05,795 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@482f7af0] under format; prior registration was org.hibernate.dialect.function.FormatFunction@19a5b637
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1edfedf1] under mode; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@251a90ce] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@4c4c7d6c] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7f0766ef] under rank; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e56bc9b] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f3bd37f] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@403364e9] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@447521e] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:36:05,796 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:36:05,797 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:36:05,798 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:36:05,799 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:36:05,800 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:36:05,801 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:36:05,802 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:36:05,803 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:05,803 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:05,819 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:290)
[DEBUG] 2023-06-10 11:36:05,820 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:36:05,821 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:36:05,822 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:05,822 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:05,822 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:36:05,822 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:05,823 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:05,823 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:36:05,823 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:36:05,823 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:36:05,824 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3869a6e5] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@9690008]
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e67a54df-e424-40fa-91ea-92a4fc6cc327 (<unnamed>)
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:36:05,824 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:36:05,825 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:36:05,825 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:36:05,873 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:36:05,873 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:36:05,875 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:36:05,881 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5625187079524)`
            <- [root] - `com.targetindia.model.Product(5625187079524)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5625187079524)`
          <- [root] - `com.targetindia.model.Product(5625187079524)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:36:05,886 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:05,886 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5625187079524))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:05,892 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:36:05,896 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5625187079524)]
 |  +-BasicFetch [com.targetindia.model.Product(5625187079524).category]
 |  +-BasicFetch [com.targetindia.model.Product(5625187079524).name]
 |  +-BasicFetch [com.targetindia.model.Product(5625187079524).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5625187079524).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5625187079524).unitsInStock]

[DEBUG] 2023-06-10 11:36:05,896 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5625187079524)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:05,897 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:36:05,897 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:36:05,897 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5625187079524) -> EntityResultInitializer(com.targetindia.model.Product(5625187079524))@657046385 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:36:05,897 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:36:05,902 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:36:05,902 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5625187079524)): 4
[DEBUG] 2023-06-10 11:36:05,902 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5625187079524)#4] : 1300256447
[DEBUG] 2023-06-10 11:36:05,902 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5625187079524)#4
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42211e04
[DEBUG] 2023-06-10 11:36:05,903 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5625187079524)): 7
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5625187079524)#7] : 1647560386
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5625187079524)#7
[DEBUG] 2023-06-10 11:36:05,904 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@42211e04
[DEBUG] 2023-06-10 11:36:05,905 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:05,906 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:15,583 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:36:15,583 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:36:15,584 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:36:15,584 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:36:15,584 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:36:15,584 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:15,585 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:15,586 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:15,587 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:36:15,588 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:36:15,589 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:15,590 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3f6f9cef
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@61dd1c3d
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7858d31d
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@782e6b40
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3b65084e
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@32d0d7eb
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@cae2a97
[DEBUG] 2023-06-10 11:36:15,591 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@7d12429
[DEBUG] 2023-06-10 11:36:15,592 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@14656be5] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:15,592 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@20be890d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5db9f51f]
[DEBUG] 2023-06-10 11:36:15,600 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:15,600 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:36:15,600 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:36:15,600 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:36:15,601 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:36:15,601 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:36:15,601 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:36:15,601 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:36:15,601 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:36:15,620 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:15,620 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:15,621 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:36:15,621 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:36:15,622 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:36:15,622 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@cc62a3b)
[DEBUG] 2023-06-10 11:36:15,623 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@139089a4] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6a6e9289]
[DEBUG] 2023-06-10 11:36:15,624 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:36:15,624 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:15,624 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:36:15,624 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:36:15,625 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:36:15,626 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:36:15,627 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:36:15,628 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:36:15,629 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:36:15,630 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:36:15,631 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:36:15,631 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:36:15,632 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:15,632 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@61554b6b, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:36:15,632 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:36:15,632 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@761f234c] under count; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@687b0ddc] under every; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@42b4df5a] under any; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:36:15,633 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@9f1ca74] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67b8d45] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@365e65bb] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52f43225] under pi; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55d1f065] under log; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:36:15,634 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@f9a5e3f] under position; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4aac81ca] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@393ae7a0] under trim; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@63326a3a] under cast; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e04abc5] under collate; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@1008df1e] under extract; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@7ee12d58] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@e72fb04] under pad; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1533338c] under str; prior registration was null
[DEBUG] 2023-06-10 11:36:15,635 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@4315fe1b] under format; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@34e990cc] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@2d5ae78e] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@21f91efa] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4df0d9f8] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@35e75f7a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4f7bb8df] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@269c7104] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6de84336] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@627bcd7e] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@70543cae] under instant; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@350567f1] under sql; prior registration was null
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:36:15,636 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1a5b7394] under count; prior registration was org.hibernate.dialect.function.CountFunction@761f234c
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@26f75d9c] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@52f43225
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7717b4a0] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:36:15,637 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:36:15,638 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@269c7104
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6de84336
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@69b37f5c] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:15,639 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28b5662d] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@34b2d51a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@f9a5e3f
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e4ac598] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:36:15,640 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@cf10c92] under format; prior registration was org.hibernate.dialect.function.FormatFunction@4315fe1b
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@f76872f] under mode; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2d4e99de] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@580ffea] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@191e654] under rank; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a6556b6] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@63bca84d] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:15,641 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6141647f] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@6f6c8d45] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,642 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:36:15,643 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:36:15,644 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:15,650 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:36:15,651 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,652 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:36:15,653 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:36:15,654 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:15,654 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:15,668 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:290)
[DEBUG] 2023-06-10 11:36:15,669 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:36:15,669 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:15,670 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:15,671 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:36:15,671 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:15,671 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:15,672 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:36:15,672 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:36:15,672 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:36:15,673 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@139089a4] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@5fc7255c]
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: e1f08ac7-4777-4ca0-bf59-718c04109a99 (<unnamed>)
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:36:15,673 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:36:15,674 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:36:15,674 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:36:15,674 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:36:15,674 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:36:15,674 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:36:15,675 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5634988615406)`
            <- [root] - `com.targetindia.model.Product(5634988615406)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5634988615406)`
          <- [root] - `com.targetindia.model.Product(5634988615406)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:36:15,675 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:15,675 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5634988615406))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5634988615406)]
 |  +-BasicFetch [com.targetindia.model.Product(5634988615406).category]
 |  +-BasicFetch [com.targetindia.model.Product(5634988615406).name]
 |  +-BasicFetch [com.targetindia.model.Product(5634988615406).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5634988615406).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5634988615406).unitsInStock]

[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5634988615406)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5634988615406) -> EntityResultInitializer(com.targetindia.model.Product(5634988615406))@646339415 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:36:15,676 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5634988615406)): 1
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5634988615406)#1] : 2042233477
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:36:15,678 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5634988615406)#1
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6df2a206
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:15,679 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:23,127 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-10 11:36:26,100 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:36:26,100 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:36:26,100 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:36:26,101 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:36:26,101 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:36:26,101 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:36:26,101 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:36:26,102 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:36:26,103 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:36:26,104 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:26,105 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:26,106 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:26,107 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@3386ed8
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@727453a3
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67dc6b48
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@57f2e67
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@4571cebe
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@154864f8
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@11cadb32
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@6d3ad37a
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@26f5e45d] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:26,108 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@704c3bdf] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@37986daf]
[DEBUG] 2023-06-10 11:36:26,115 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:26,115 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:36:26,116 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:36:26,129 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:26,129 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:26,129 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:26,130 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@cc62a3b)
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@857f74a] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@10a0d93a]
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:36:26,131 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:26,132 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:36:26,133 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:36:26,134 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:36:26,135 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:36:26,136 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:36:26,137 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:36:26,137 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:36:26,138 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:26,138 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@66b31d46, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:36:26,138 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:36:26,138 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@51e94b7d] under count; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@47162173] under every; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@3a4f8e8a] under any; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:36:26,139 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4468fda8] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5fc1e4fb] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@29aa4bc9] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fd7aba8] under pi; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c519e47] under log; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:36:26,140 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3ce7490a] under position; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@4768b95c] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@1530d0f2] under trim; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@7573c7b5] under cast; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@73da7f08] under collate; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@717a8a76] under extract; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@62de73eb] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@97b5e6a] under pad; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@29f95272] under str; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@c754401] under format; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1da53f4f] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@4e7eba9f] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2df71be0] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:36:26,141 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@b841713] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3fef1e6b] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fee14b] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@11c3d22f] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3a54638b] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7d8f2eec] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e886caf] under instant; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1d585fb] under sql; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1884e671] under count; prior registration was org.hibernate.dialect.function.CountFunction@51e94b7d
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@1c7843c3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6fd7aba8
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5158a9f7] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:36:26,142 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@11c3d22f
[DEBUG] 2023-06-10 11:36:26,143 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3a54638b
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7c8f047a] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4387d2f4] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1dbff71c] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3ce7490a
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@93ce24d] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:36:26,144 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@d949bc4] under format; prior registration was org.hibernate.dialect.function.FormatFunction@c754401
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7079f8f0] under mode; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@121cf6f4] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7cdc4070] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@553fbe94] under rank; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6abe62bb] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1f60824e] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:26,145 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1218e12] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@29c25bbc] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,146 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:36:26,147 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,148 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,149 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:36:26,150 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:26,151 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:26,163 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:290)
[DEBUG] 2023-06-10 11:36:26,164 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:36:26,164 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:26,165 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:26,166 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:36:26,166 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:26,166 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:26,166 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:36:26,166 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:36:26,167 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:36:26,167 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:36:26,168 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@857f74a] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7a117dc2]
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 97fca55b-738b-4fb5-8e90-af20b2748a15 (<unnamed>)
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:36:26,168 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:36:26,169 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:36:26,169 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:36:26,169 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:36:26,169 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5645483085871)`
            <- [root] - `com.targetindia.model.Product(5645483085871)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5645483085871)`
          <- [root] - `com.targetindia.model.Product(5645483085871)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:36:26,170 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:26,170 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5645483085871))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:26,170 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5645483085871)]
 |  +-BasicFetch [com.targetindia.model.Product(5645483085871).category]
 |  +-BasicFetch [com.targetindia.model.Product(5645483085871).name]
 |  +-BasicFetch [com.targetindia.model.Product(5645483085871).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5645483085871).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5645483085871).unitsInStock]

[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5645483085871)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5645483085871) -> EntityResultInitializer(com.targetindia.model.Product(5645483085871))@1440325059 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:36:26,171 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:36:26,173 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:36:26,173 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5645483085871)): 1
[DEBUG] 2023-06-10 11:36:26,173 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5645483085871)#1] : 1470053518
[DEBUG] 2023-06-10 11:36:26,173 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:26,173 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5645483085871)#1
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb1943b
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5645483085871)): 4
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5645483085871)#4] : 1311253681
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:36:26,174 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5645483085871)#4
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb1943b
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5645483085871)): 5
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5645483085871)#5] : 1397558816
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5645483085871)#5
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb1943b
[DEBUG] 2023-06-10 11:36:26,175 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5645483085871)): 6
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5645483085871)#6] : 818464427
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5645483085871)#6
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@4eb1943b
[DEBUG] 2023-06-10 11:36:26,176 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:26,177 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:35,780 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-10 11:36:40,528 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:36:40,528 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:36:40,528 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:36:40,529 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:36:40,529 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:36:40,529 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:36:40,529 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:36:40,530 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@24fcf36f
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:36:40,531 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:36:40,532 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:36:40,533 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:36:40,534 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@5a56cdac
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@3c7f66c4
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@1328f482
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@7b8b07ae
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@19ec5357
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@351d93bd
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@61c5fd78
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@42503099
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@39dda56f
[DEBUG] 2023-06-10 11:36:40,535 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@60844992
[DEBUG] 2023-06-10 11:36:40,536 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@2ee456c7] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:40,536 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6df37f7a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@39514976]
[DEBUG] 2023-06-10 11:36:40,542 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:36:40,542 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:36:40,543 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:36:40,556 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:40,556 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:36:40,556 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:36:40,557 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@cc62a3b)
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5310e451] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@52d63b7e]
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:40,558 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:36:40,559 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:36:40,560 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:36:40,561 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:36:40,562 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:36:40,563 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:36:40,564 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:36:40,564 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:36:40,565 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:40,565 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1827fc4e, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:36:40,565 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4c41a177] under count; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2faf6e4a] under every; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@43ab0659] under any; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:36:40,566 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@644947ee] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@25421809] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@714bffd5] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac9b66b] under pi; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4491eaeb] under log; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@71262020] under position; prior registration was null
[DEBUG] 2023-06-10 11:36:40,567 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@5f3ddc86] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@78e043e4] under trim; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@336d28a1] under cast; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@738a39cc] under collate; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@42e202d7] under extract; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@38e7860c] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@62158991] under pad; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@40738846] under str; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@1255de25] under format; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1686ed85] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5891b7c5] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4fc3529] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@38e46765] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@192f5f39] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4cd5fc46] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2965dd88] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3221588e] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@51141f64] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@32c0fecc] under instant; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@35ceec81] under sql; prior registration was null
[DEBUG] 2023-06-10 11:36:40,568 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@d13379e] under count; prior registration was org.hibernate.dialect.function.CountFunction@4c41a177
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@7c8df667] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ac9b66b
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@498e41a4] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:36:40,569 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@2965dd88
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@3221588e
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@be616f0] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1f5d7fd5] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@cf08c97] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@71262020
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:36:40,570 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37c87fcc] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@ca2be53] under format; prior registration was org.hibernate.dialect.function.FormatFunction@1255de25
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@78f5cbc5] under mode; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@70697478] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@42b43a6] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1d622556] under rank; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4b9f7edc] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@70ee1963] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2e0652ab] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:36:40,571 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@22c29aa8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,572 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:36:40,573 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,574 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:36:40,575 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] basicType@76(java.lang.Long,-5)|basicType@67(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:36:40,576 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:36:40,577 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:36:40,577 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:40,588 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:290)
[DEBUG] 2023-06-10 11:36:40,590 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:36:40,590 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:40,591 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:40,592 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:36:40,592 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:40,592 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:36:40,592 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:36:40,593 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:36:40,593 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:36:40,594 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5310e451] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7e3d168e]
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 8b95d0c4-3202-4402-89a4-e83a9615fdbf (<unnamed>)
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:36:40,594 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:36:40,595 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:36:40,595 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:36:40,595 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:36:40,595 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5659908870825)`
            <- [root] - `com.targetindia.model.Product(5659908870825)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5659908870825)`
          <- [root] - `com.targetindia.model.Product(5659908870825)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5659908870825))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5659908870825)]
 |  +-BasicFetch [com.targetindia.model.Product(5659908870825).category]
 |  +-BasicFetch [com.targetindia.model.Product(5659908870825).name]
 |  +-BasicFetch [com.targetindia.model.Product(5659908870825).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5659908870825).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5659908870825).unitsInStock]

[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5659908870825)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:36:40,596 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:36:40,597 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5659908870825) -> EntityResultInitializer(com.targetindia.model.Product(5659908870825))@767814888 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:36:40,597 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:36:40,598 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:40,598 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:36:45,622 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-10 11:36:52,770 main            com.targetindia.App [291] terminating the app gracefully
[TRACE] 2023-06-10 11:37:16,400 main            com.targetindia.App [291] starting the app
[DEBUG] 2023-06-10 11:37:20,151 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:37:20,151 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:37:20,152 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:37:20,156 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:37:20,159 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:37:20,163 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:37:20,197 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:37:20,198 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:37:20,198 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:37:20,216 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:37:20,219 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:37:20,219 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:37:20,220 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:20,220 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:20,220 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:37:20,221 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:37:20,221 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:37:20,222 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:20,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:37:20,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:37:20,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:20,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:37:20,234 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:37:20,234 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:37:20,314 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:20,314 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:20,314 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:20,315 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:20,316 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:20,317 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:37:20,318 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:20,319 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:20,320 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:20,321 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:20,322 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:20,323 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:20,324 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:20,325 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:37:20,329 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:20,329 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:20,330 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:37:20,330 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:37:20,330 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:37:20,330 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:37:20,331 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:37:20,331 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:37:20,331 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:37:20,331 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:37:20,331 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:37:20,334 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:20,334 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:37:20,374 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:20,374 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:37:20,385 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:37:20,389 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:37:20,389 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:37:20,389 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:37:20,389 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:37:20,391 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:37:20,391 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:37:20,611 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:20,611 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:20,611 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:37:20,641 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:37:20,645 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:37:20,645 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:37:20,657 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:20,657 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:20,657 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:20,658 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:20,659 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:20,660 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:37:20,661 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@6cc0bcf6)
[DEBUG] 2023-06-10 11:37:20,664 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@581d969c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22db8f4]
[DEBUG] 2023-06-10 11:37:20,691 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:37:20,713 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:20,724 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:37:20,728 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:37:20,734 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:37:20,747 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:20,747 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:37:20,747 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:20,750 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:37:20,753 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:37:20,756 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:37:20,758 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:37:20,759 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:37:20,761 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:37:20,762 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:37:20,763 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:37:20,764 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:37:20,765 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:37:20,766 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:37:20,766 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:37:20,766 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:37:20,766 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:37:20,766 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:37:20,771 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:37:20,772 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:37:20,772 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:37:20,772 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:37:20,772 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:37:20,772 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:37:20,774 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:37:20,797 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:37:20,894 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:37:20,924 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:37:20,925 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@d48673, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:37:20,927 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:37:20,932 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:37:20,956 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:37:20,956 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:37:20,957 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:37:20,957 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:37:20,958 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4c2fb9dd] under count; prior registration was null
[DEBUG] 2023-06-10 11:37:20,959 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@e9dc4d0] under every; prior registration was null
[DEBUG] 2023-06-10 11:37:20,959 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@670d4d38] under any; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:37:20,960 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:37:20,961 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:37:20,962 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:37:20,962 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2903c6ff] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61af1510] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37af1f93] under pi; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778d82e9] under log; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:37:20,963 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:37:20,964 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:37:20,965 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:37:20,965 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@700f518a] under position; prior registration was null
[DEBUG] 2023-06-10 11:37:20,966 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@ef1695a] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:37:20,966 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7139bd31] under trim; prior registration was null
[DEBUG] 2023-06-10 11:37:20,967 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@150ede8b] under cast; prior registration was null
[DEBUG] 2023-06-10 11:37:20,967 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@161f6623] under collate; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@69228e85] under extract; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2f61d591] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:37:20,968 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@53a9fcfd] under pad; prior registration was null
[DEBUG] 2023-06-10 11:37:20,969 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@84487f4] under str; prior registration was null
[DEBUG] 2023-06-10 11:37:20,970 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@55d9b8f0] under format; prior registration was null
[DEBUG] 2023-06-10 11:37:20,970 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6d303498] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@29eda4f8] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:37:20,971 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c534b5b] under instant; prior registration was null
[DEBUG] 2023-06-10 11:37:20,972 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2418ba04] under sql; prior registration was null
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@14229fa7] under count; prior registration was org.hibernate.dialect.function.CountFunction@4c2fb9dd
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@102efc59] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37af1f93
[DEBUG] 2023-06-10 11:37:20,973 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3936df72] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:37:20,974 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:37:20,975 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:37:20,976 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:37:20,976 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:37:20,976 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@56913163
[DEBUG] 2023-06-10 11:37:20,976 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@702b06fb
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@53ed09e8] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60859f5a] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:37:20,977 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1daf3b44] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@700f518a
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fd8c559] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:37:20,978 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44c13103] under format; prior registration was org.hibernate.dialect.function.FormatFunction@55d9b8f0
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:37:20,979 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:37:20,980 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:37:20,980 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:37:20,980 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:37:20,980 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:37:20,980 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:37:20,981 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@481e91b6] under mode; prior registration was null
[DEBUG] 2023-06-10 11:37:20,981 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c8f9c2e] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:37:20,981 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@140d1230] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:37:20,981 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c1e32c9] under rank; prior registration was null
[DEBUG] 2023-06-10 11:37:20,982 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@383864d5] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:37:20,982 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3dd818e8] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:37:20,982 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4cb40e3b] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:37:20,982 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@2b9f74d0] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:37:20,983 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,984 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,984 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:20,984 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:37:20,984 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,984 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:37:20,986 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,987 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:20,988 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:37:20,989 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:37:20,990 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,991 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,992 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:37:20,993 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,994 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:37:20,995 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:37:20,998 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:37:21,094 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:37:21,094 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:21,235 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:292)
[DEBUG] 2023-06-10 11:37:21,268 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:37:21,268 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:37:21,314 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:21,314 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:37:21,314 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:37:21,314 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:37:21,315 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:37:21,324 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:37:21,326 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:37:21,338 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:37:21,341 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:37:21,370 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:37:21,371 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:37:21,375 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:37:21,376 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:37:21,378 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:37:21,378 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:37:21,379 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@581d969c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3a00b15d]
[DEBUG] 2023-06-10 11:37:21,380 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:37:21,380 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:37:21,380 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:37:21,380 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:37:21,382 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@52559a69
[DEBUG] 2023-06-10 11:37:21,382 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 04946f5e-6295-40b8-8d86-809c8ac74603 (<unnamed>)
[DEBUG] 2023-06-10 11:37:21,382 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:37:21,382 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:37:21,416 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:37:21,419 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:37:21,574 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:37:21,579 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:37:21,582 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:37:21,595 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5700892377238)`
            <- [root] - `com.targetindia.model.Product(5700892377238)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5700892377238)`
          <- [root] - `com.targetindia.model.Product(5700892377238)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:37:21,633 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:37:21,633 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5700892377238))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:37:21,641 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:37:21,647 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5700892377238)]
 |  +-BasicFetch [com.targetindia.model.Product(5700892377238).category]
 |  +-BasicFetch [com.targetindia.model.Product(5700892377238).name]
 |  +-BasicFetch [com.targetindia.model.Product(5700892377238).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5700892377238).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5700892377238).unitsInStock]

[DEBUG] 2023-06-10 11:37:21,647 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5700892377238)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:37:21,655 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:37:21,667 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:37:21,668 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5700892377238) -> EntityResultInitializer(com.targetindia.model.Product(5700892377238))@1582427182 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:37:21,672 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:37:21,683 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:37:21,684 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:37:28,178 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:37:28,179 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:28,180 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:28,181 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:28,182 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:37:28,183 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:28,184 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:28,185 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:28,185 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:28,185 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:28,185 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:28,185 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:28,195 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:28,196 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5086623f
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@20027c44
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@7eae55
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@5d84e363
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@3ef0e576
[DEBUG] 2023-06-10 11:37:28,197 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@da34eb0
[DEBUG] 2023-06-10 11:37:28,198 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@785a4557
[DEBUG] 2023-06-10 11:37:28,198 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@2bf3ec4
[DEBUG] 2023-06-10 11:37:28,198 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@3b5da0b0] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:28,198 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2c9cafa5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6c6379c]
[DEBUG] 2023-06-10 11:37:28,206 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:28,207 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:37:28,207 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:37:28,223 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:28,223 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:28,223 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:37:28,224 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:37:28,224 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:37:28,224 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@6cc0bcf6)
[DEBUG] 2023-06-10 11:37:28,225 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e477944] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@6cf047cf]
[DEBUG] 2023-06-10 11:37:28,226 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:37:28,226 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:28,226 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:37:28,227 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:37:28,227 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:37:28,228 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:37:28,229 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:37:28,230 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:37:28,231 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:37:28,232 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:37:28,233 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:37:28,234 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:37:28,234 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:37:28,234 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@323e026d, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@1716c037] under count; prior registration was null
[DEBUG] 2023-06-10 11:37:28,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@79b63325] under every; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@708769b7] under any; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@32e830a0] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:37:28,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@135e49b2] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5bb97fe7] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10b87ff6] under pi; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@63262071] under log; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:37:28,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2d4f67e] under position; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@1282f784] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@41167ded] under trim; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@13e1e816] under cast; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@36238b12] under collate; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@33187485] under extract; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@41938e1e] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@5d2e6f62] under pad; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@77ff14ce] under str; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@733fae8] under format; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5a8d676e] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:37:28,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@74764622] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7ba06506] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@63dc3420] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@525b8922] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@145a821d] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6caa4dc5] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6ed51944] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60c98f25] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@20c3b34b] under instant; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@1eb906f3] under sql; prior registration was null
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:37:28,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@58e02359] under count; prior registration was org.hibernate.dialect.function.CountFunction@1716c037
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@74fc3fc7] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@10b87ff6
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@491893f8] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:37:28,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@6caa4dc5
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@6ed51944
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@1f408ab6] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:37:28,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@46e388ec] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@53f495f0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2d4f67e
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5efe5b25] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:37:28,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@45707f76] under format; prior registration was org.hibernate.dialect.function.FormatFunction@733fae8
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1f0e2bdc] under mode; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@682266d8] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@44a93f8a] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@26463a6] under rank; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6c5ae8fd] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@17354708] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1aed6f0b] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:37:28,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@3b3546a3] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:37:28,244 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,245 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:37:28,246 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:37:28,247 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:37:28,248 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:37:28,249 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:37:28,250 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:37:28,250 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:28,267 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:292)
[DEBUG] 2023-06-10 11:37:28,269 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:37:28,269 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:37:28,269 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:37:28,269 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:37:28,269 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:37:28,270 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:37:28,271 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:37:28,272 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:37:28,272 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:37:28,272 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:37:28,274 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:37:28,274 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:37:28,274 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1e477944] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@7bc2bb58]
[DEBUG] 2023-06-10 11:37:28,274 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:37:28,274 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: b1bdcfc1-acd2-41ee-87f6-ef313b4af980 (<unnamed>)
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:37:28,275 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:37:28,276 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:37:28,276 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:37:28,276 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:37:28,276 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5707589423536)`
            <- [root] - `com.targetindia.model.Product(5707589423536)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5707589423536)`
          <- [root] - `com.targetindia.model.Product(5707589423536)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:37:28,277 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:37:28,277 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5707589423536))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:37:28,277 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:37:28,277 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5707589423536)]
 |  +-BasicFetch [com.targetindia.model.Product(5707589423536).category]
 |  +-BasicFetch [com.targetindia.model.Product(5707589423536).name]
 |  +-BasicFetch [com.targetindia.model.Product(5707589423536).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5707589423536).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5707589423536).unitsInStock]

[DEBUG] 2023-06-10 11:37:28,278 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5707589423536)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:37:28,278 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:37:28,278 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:37:28,278 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5707589423536) -> EntityResultInitializer(com.targetindia.model.Product(5707589423536))@1628676719 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:37:28,279 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:37:28,282 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:37:28,283 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5707589423536)): 1
[DEBUG] 2023-06-10 11:37:28,284 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5707589423536)#1] : 1043170851
[DEBUG] 2023-06-10 11:37:28,285 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:37:28,285 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:37:28,285 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:37:28,285 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:37:28,285 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:37:28,288 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5707589423536)#1
[DEBUG] 2023-06-10 11:37:28,289 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@6c24f61d
[DEBUG] 2023-06-10 11:37:28,290 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:37:28,290 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-10 11:37:32,323 main            com.targetindia.App [293] terminating the app gracefully
[TRACE] 2023-06-10 11:37:55,044 main            com.targetindia.App [291] starting the app
[DEBUG] 2023-06-10 11:37:59,456 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:37:59,456 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:37:59,456 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:37:59,461 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:37:59,464 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:37:59,467 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:37:59,502 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:37:59,503 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:37:59,503 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:37:59,522 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:37:59,526 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:37:59,527 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:37:59,527 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:59,527 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:37:59,528 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:37:59,528 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:37:59,529 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:37:59,529 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:59,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:37:59,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:37:59,530 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:37:59,531 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:37:59,538 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:37:59,539 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:37:59,611 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:37:59,612 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:59,613 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:59,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:37:59,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:59,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:37:59,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:37:59,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:59,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:37:59,620 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:37:59,621 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:37:59,624 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:59,624 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:37:59,625 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:37:59,625 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:37:59,625 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:37:59,626 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:37:59,628 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:59,628 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:37:59,665 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:37:59,665 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:37:59,675 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:37:59,679 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:37:59,679 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:37:59,679 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:37:59,679 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:37:59,681 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:37:59,681 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:37:59,905 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:59,905 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:37:59,905 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:37:59,939 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:37:59,944 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:37:59,944 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:37:59,957 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:59,957 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:59,958 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:37:59,959 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:59,960 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:37:59,961 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:37:59,962 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@6cc0bcf6)
[DEBUG] 2023-06-10 11:37:59,965 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@581d969c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@22db8f4]
[DEBUG] 2023-06-10 11:37:59,992 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:38:00,014 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:38:00,025 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:38:00,029 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:38:00,035 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:38:00,047 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:38:00,048 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:38:00,048 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:38:00,050 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:38:00,053 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:38:00,056 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:38:00,059 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:38:00,059 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:38:00,061 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:38:00,062 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:38:00,062 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:38:00,062 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:38:00,062 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:38:00,062 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:38:00,063 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:38:00,063 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:38:00,063 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:38:00,063 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:38:00,064 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:38:00,065 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:38:00,066 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:38:00,071 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:38:00,072 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:38:00,072 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:38:00,072 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:38:00,073 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:38:00,073 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:38:00,074 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:38:00,098 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:38:00,191 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:38:00,219 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:38:00,220 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@d48673, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:38:00,223 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:38:00,229 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:38:00,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:38:00,256 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:38:00,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:38:00,257 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:38:00,258 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4c2fb9dd] under count; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@e9dc4d0] under every; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@670d4d38] under any; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:38:00,259 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:38:00,260 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:38:00,261 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:38:00,262 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2eadc9f6] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2903c6ff] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@61af1510] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37af1f93] under pi; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778d82e9] under log; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:38:00,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:38:00,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:38:00,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:38:00,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@700f518a] under position; prior registration was null
[DEBUG] 2023-06-10 11:38:00,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@ef1695a] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:38:00,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7139bd31] under trim; prior registration was null
[DEBUG] 2023-06-10 11:38:00,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@150ede8b] under cast; prior registration was null
[DEBUG] 2023-06-10 11:38:00,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@161f6623] under collate; prior registration was null
[DEBUG] 2023-06-10 11:38:00,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@69228e85] under extract; prior registration was null
[DEBUG] 2023-06-10 11:38:00,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:38:00,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:38:00,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@2f61d591] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:38:00,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:38:00,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:38:00,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@53a9fcfd] under pad; prior registration was null
[DEBUG] 2023-06-10 11:38:00,271 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@84487f4] under str; prior registration was null
[DEBUG] 2023-06-10 11:38:00,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@55d9b8f0] under format; prior registration was null
[DEBUG] 2023-06-10 11:38:00,272 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@6d303498] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@29eda4f8] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@3d5790ea] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1dd7796b] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@67a3bd51] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:38:00,273 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@57402ba1] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c534b5b] under instant; prior registration was null
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:38:00,274 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2418ba04] under sql; prior registration was null
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@14229fa7] under count; prior registration was org.hibernate.dialect.function.CountFunction@4c2fb9dd
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@102efc59] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@37af1f93
[DEBUG] 2023-06-10 11:38:00,275 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3936df72] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:38:00,276 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:38:00,277 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@56913163
[DEBUG] 2023-06-10 11:38:00,278 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@702b06fb
[DEBUG] 2023-06-10 11:38:00,279 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@53ed09e8] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@60859f5a] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:38:00,280 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1daf3b44] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@700f518a
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7fd8c559] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:38:00,281 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@44c13103] under format; prior registration was org.hibernate.dialect.function.FormatFunction@55d9b8f0
[DEBUG] 2023-06-10 11:38:00,282 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:38:00,283 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:38:00,284 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@481e91b6] under mode; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c8f9c2e] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@140d1230] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@7c1e32c9] under rank; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@383864d5] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3dd818e8] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:38:00,285 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@4cb40e3b] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:38:00,286 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@2b9f74d0] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:38:00,287 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,288 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,288 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:38:00,288 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:38:00,288 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,288 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:38:00,291 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:38:00,292 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,293 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:38:00,294 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:38:00,295 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:38:00,296 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:38:00,297 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:38:00,298 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:38:00,299 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:38:00,302 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:38:00,409 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:38:00,409 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:38:00,559 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByName(JpaProductDao.java:120)
	at com.targetindia.service.ProductManager.getProductsByName(ProductManager.java:77)
	at com.targetindia.App.acceptNameAndDisplayProducts(App.java:57)
	at com.targetindia.App.start(App.java:38)
	at com.targetindia.App.main(App.java:292)
[DEBUG] 2023-06-10 11:38:00,591 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:38:00,591 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:38:00,633 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:38:00,633 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:38:00,634 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:38:00,634 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:38:00,634 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:38:00,643 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:38:00,646 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:38:00,656 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:38:00,659 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:38:00,686 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:38:00,687 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:38:00,692 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:38:00,692 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:38:00,694 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:38:00,694 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:38:00,695 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@581d969c] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@3a00b15d]
[DEBUG] 2023-06-10 11:38:00,696 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:38:00,696 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:38:00,697 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:38:00,697 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:38:00,699 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@52559a69
[DEBUG] 2023-06-10 11:38:00,699 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: a4b5529b-bd44-47ec-9fc8-539f268efc64 (<unnamed>)
[DEBUG] 2023-06-10 11:38:00,699 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:38:00,699 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:38:00,730 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:38:00,733 main            org.hibernate.orm.query.hql [75] HQL : from Product where lower(name) like lower(?1)
[DEBUG] 2023-06-10 11:38:00,910 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:38:00,917 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwherelower(name)likelower(?1)
[DEBUG] 2023-06-10 11:38:00,921 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [name] in local from-clause
[DEBUG] 2023-06-10 11:38:00,937 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5740229965608)`
            <- [root] - `com.targetindia.model.Product(5740229965608)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5740229965608)`
          <- [root] - `com.targetindia.model.Product(5740229965608)`
        <- [from]
        -> [where]
          -> [is-like]
          <- [is-like]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:38:00,983 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:38:00,983 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5740229965608))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:38:00,993 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:38:00,999 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5740229965608)]
 |  +-BasicFetch [com.targetindia.model.Product(5740229965608).category]
 |  +-BasicFetch [com.targetindia.model.Product(5740229965608).name]
 |  +-BasicFetch [com.targetindia.model.Product(5740229965608).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5740229965608).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5740229965608).unitsInStock]

[DEBUG] 2023-06-10 11:38:00,999 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5740229965608)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:38:01,008 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:38:01,020 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:38:01,021 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5740229965608) -> EntityResultInitializer(com.targetindia.model.Product(5740229965608))@1582427182 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:38:01,026 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        lower(p1_0.name) like lower(?) escape ''
[DEBUG] 2023-06-10 11:38:01,037 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:38:01,038 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5740229965608)): 1
[DEBUG] 2023-06-10 11:38:01,039 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5740229965608)#1] : 737810352
[DEBUG] 2023-06-10 11:38:01,039 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:38:01,039 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:38:01,040 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:38:01,040 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:38:01,040 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:38:01,043 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5740229965608)#1
[DEBUG] 2023-06-10 11:38:01,043 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@60816371
[DEBUG] 2023-06-10 11:38:01,045 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:38:01,046 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[TRACE] 2023-06-10 11:38:05,139 main            com.targetindia.App [293] terminating the app gracefully
[TRACE] 2023-06-10 11:41:09,011 main            com.targetindia.App [308] starting the app
[DEBUG] 2023-06-10 11:41:31,233 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:41:31,233 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:41:31,234 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:41:31,238 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:41:31,242 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:41:31,245 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:41:31,279 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:41:31,280 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:41:31,281 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:41:31,298 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:41:31,302 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:41:31,302 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:41:31,302 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:41:31,303 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:41:31,303 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:41:31,303 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:41:31,304 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:41:31,305 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:41:31,305 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:41:31,305 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:41:31,305 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:41:31,306 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:41:31,314 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:41:31,315 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:41:31,390 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:41:31,391 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:41:31,392 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:41:31,393 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:41:31,394 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:41:31,395 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:41:31,396 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:41:31,397 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:41:31,398 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:41:31,399 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:41:31,400 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:41:31,401 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:41:31,402 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:41:31,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:41:31,406 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:41:31,407 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:41:31,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:41:31,407 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:41:31,408 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:41:31,411 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:41:31,411 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:41:31,458 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:41:31,458 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:41:31,471 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:41:31,474 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:41:31,474 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:41:31,475 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:41:31,475 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:41:31,477 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:41:31,477 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:41:31,716 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:41:31,716 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:41:31,716 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:41:31,747 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:41:31,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:41:31,750 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:41:31,760 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:41:31,760 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:41:31,760 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:41:31,761 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:41:31,762 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:41:31,763 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:41:31,764 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:41:31,767 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46cf05f7]
[DEBUG] 2023-06-10 11:41:31,793 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:41:31,819 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:41:31,825 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:41:31,830 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:41:31,837 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:41:31,850 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:41:31,851 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:41:31,851 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:41:31,854 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:41:31,857 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:41:31,861 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:41:31,864 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:41:31,864 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:41:31,866 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:41:31,867 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:41:31,867 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:41:31,868 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:41:31,868 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:41:31,868 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:41:31,868 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:41:31,869 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:41:31,869 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:41:31,869 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:41:31,870 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:41:31,870 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:41:31,870 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:41:31,871 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:41:31,872 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:41:31,873 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:41:31,873 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:41:31,873 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:41:31,873 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:41:31,873 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:41:31,878 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:41:31,879 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:41:31,879 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:41:31,879 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:41:31,879 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:41:31,879 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:41:31,881 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:41:31,906 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:41:32,001 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:41:32,024 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:41:32,025 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7c129ef6, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:41:32,027 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:41:32,031 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:41:32,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:41:32,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:41:32,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:41:32,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:41:32,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25cd49a4] under count; prior registration was null
[DEBUG] 2023-06-10 11:41:32,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23eff5d1] under every; prior registration was null
[DEBUG] 2023-06-10 11:41:32,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e060819] under any; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:41:32,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:41:32,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:41:32,061 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778d82e9] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:41:32,061 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@408e96d9] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:41:32,061 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59901c4d] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:41:32,061 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b] under pi; prior registration was null
[DEBUG] 2023-06-10 11:41:32,061 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d8d9199] under log; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:41:32,062 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:41:32,063 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7] under position; prior registration was null
[DEBUG] 2023-06-10 11:41:32,064 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7139bd31] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:41:32,065 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3e17a0a1] under trim; prior registration was null
[DEBUG] 2023-06-10 11:41:32,065 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e1ce44] under cast; prior registration was null
[DEBUG] 2023-06-10 11:41:32,065 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69228e85] under collate; prior registration was null
[DEBUG] 2023-06-10 11:41:32,066 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2f61d591] under extract; prior registration was null
[DEBUG] 2023-06-10 11:41:32,066 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:41:32,066 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:41:32,066 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@53a9fcfd] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:41:32,066 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:41:32,067 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:41:32,067 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@84487f4] under pad; prior registration was null
[DEBUG] 2023-06-10 11:41:32,067 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1290c49] under str; prior registration was null
[DEBUG] 2023-06-10 11:41:32,068 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d303498] under format; prior registration was null
[DEBUG] 2023-06-10 11:41:32,068 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d75e7af] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:41:32,069 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3d5790ea] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:41:32,069 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:41:32,069 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:41:32,069 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c534b5b] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@396639b] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b22a1cc] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62573c86] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2418ba04] under instant; prior registration was null
[DEBUG] 2023-06-10 11:41:32,070 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10f19647] under sql; prior registration was null
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:41:32,071 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@102efc59] under count; prior registration was org.hibernate.dialect.function.CountFunction@25cd49a4
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@75fa1be3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a389761] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:41:32,072 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:41:32,073 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@396639b
[DEBUG] 2023-06-10 11:41:32,074 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b22a1cc
[DEBUG] 2023-06-10 11:41:32,075 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@44c13103] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8f2098e] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c6366cf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:41:32,076 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a88417] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:41:32,077 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18acfe88] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d303498
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:41:32,078 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:41:32,079 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:41:32,079 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:41:32,079 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:41:32,079 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:41:32,079 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:41:32,080 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10bea4] under mode; prior registration was null
[DEBUG] 2023-06-10 11:41:32,080 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e2c64] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:41:32,081 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c1e32c9] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:41:32,081 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@41b1f51e] under rank; prior registration was null
[DEBUG] 2023-06-10 11:41:32,081 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a543f31] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:41:32,081 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@47b67fcb] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:41:32,081 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2b9f74d0] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:41:32,082 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5a2bd7c8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:41:32,083 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,084 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,084 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:41:32,084 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:41:32,084 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,084 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:41:32,086 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:41:32,087 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:41:32,088 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:41:32,089 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:41:32,090 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:41:32,091 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:41:32,092 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,093 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:41:32,094 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:41:32,095 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:41:32,098 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:41:32,198 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:41:32,198 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:41:32,335 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:41:32,369 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:41:32,369 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:41:32,411 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:41:32,411 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:41:32,411 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:41:32,411 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:41:32,412 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:41:32,419 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:41:32,422 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:41:32,431 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:41:32,433 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:41:32,458 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:41:32,458 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:41:32,462 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:41:32,463 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:41:32,464 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:41:32,464 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:41:32,465 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6003ad65]
[DEBUG] 2023-06-10 11:41:32,466 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:41:32,466 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:41:32,467 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:41:32,467 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:41:32,468 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1fd7a37
[DEBUG] 2023-06-10 11:41:32,468 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 7ac4b22f-29f8-493d-8639-3aaa9b3f8383 (<unnamed>)
[DEBUG] 2023-06-10 11:41:32,468 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:41:32,468 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:41:32,495 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:41:32,498 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:41:32,626 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:41:32,632 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:41:32,635 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:41:32,638 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:41:32,638 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:41:32,647 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5951943261900)`
            <- [root] - `com.targetindia.model.Product(5951943261900)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5951943261900)`
          <- [root] - `com.targetindia.model.Product(5951943261900)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(5951943261900).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[ WARN] 2023-06-10 11:41:32,665 main            com.targetindia.App [67] Error while accepting id for deleting
org.hibernate.QueryException: Ordinal parameter not bound : 2
	at org.hibernate.query.internal.QueryParameterBindingsImpl.lambda$validate$0(QueryParameterBindingsImpl.java:146)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.Collections$UnmodifiableCollection.forEach(Collections.java:1092)
	at org.hibernate.query.internal.ParameterMetadataImpl.visitParameters(ParameterMetadataImpl.java:194)
	at org.hibernate.query.spi.ParameterMetadataImplementor.visitRegistrations(ParameterMetadataImplementor.java:29)
	at org.hibernate.query.internal.QueryParameterBindingsImpl.validate(QueryParameterBindingsImpl.java:139)
	at org.hibernate.query.spi.AbstractSelectionQuery.beforeQuery(AbstractSelectionQuery.java:386)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:364)
	at org.hibernate.query.Query.getResultList(Query.java:119)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:135)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[TRACE] 2023-06-10 11:42:13,042 main            com.targetindia.App [308] starting the app
[DEBUG] 2023-06-10 11:42:18,051 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:42:18,052 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:42:18,052 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:42:18,056 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:42:18,059 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:42:18,063 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:42:18,096 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:42:18,096 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:42:18,097 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:42:18,114 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:42:18,118 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:42:18,118 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:42:18,118 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:18,119 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:18,119 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:42:18,120 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:42:18,120 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:42:18,121 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:18,121 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:42:18,122 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:42:18,122 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:18,122 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:42:18,130 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:42:18,131 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:18,214 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:18,215 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:18,216 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:18,217 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:42:18,218 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:18,219 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:18,220 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:42:18,221 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:18,222 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:18,223 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:18,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:18,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:42:18,229 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:18,229 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:18,230 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:42:18,231 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:42:18,235 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:18,235 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:42:18,280 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:18,280 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:42:18,293 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:42:18,298 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:42:18,298 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:42:18,298 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:42:18,298 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:42:18,301 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:42:18,301 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:42:18,541 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:18,541 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:18,541 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:42:18,576 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:42:18,580 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:42:18,580 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:42:18,593 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:18,593 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:18,593 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:18,594 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:18,594 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:18,596 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:42:18,597 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:42:18,600 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46cf05f7]
[DEBUG] 2023-06-10 11:42:18,625 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:42:18,650 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:18,656 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:42:18,660 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:42:18,666 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:42:18,677 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:18,677 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:18,678 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:18,681 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:42:18,684 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:42:18,687 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:42:18,689 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:42:18,690 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:42:18,692 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:42:18,692 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:18,692 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:42:18,693 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:42:18,693 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:42:18,693 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:42:18,693 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:42:18,693 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:18,694 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:42:18,694 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:42:18,694 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:42:18,694 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:42:18,694 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:42:18,695 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:42:18,696 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:42:18,696 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:42:18,696 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:42:18,696 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:42:18,696 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:42:18,697 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:42:18,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:42:18,703 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:42:18,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:42:18,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:42:18,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:42:18,704 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:42:18,706 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:42:18,728 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:42:18,818 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:42:18,848 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:18,849 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7c129ef6, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:42:18,851 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:42:18,857 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:18,885 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:42:18,885 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:42:18,886 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:42:18,886 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:42:18,887 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25cd49a4] under count; prior registration was null
[DEBUG] 2023-06-10 11:42:18,888 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23eff5d1] under every; prior registration was null
[DEBUG] 2023-06-10 11:42:18,888 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e060819] under any; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:42:18,889 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:42:18,890 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:42:18,891 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778d82e9] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@408e96d9] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59901c4d] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b] under pi; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d8d9199] under log; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:42:18,892 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:42:18,893 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:42:18,894 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:42:18,895 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7] under position; prior registration was null
[DEBUG] 2023-06-10 11:42:18,896 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7139bd31] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:42:18,896 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3e17a0a1] under trim; prior registration was null
[DEBUG] 2023-06-10 11:42:18,897 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e1ce44] under cast; prior registration was null
[DEBUG] 2023-06-10 11:42:18,897 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69228e85] under collate; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2f61d591] under extract; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@53a9fcfd] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:42:18,898 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:42:18,899 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@84487f4] under pad; prior registration was null
[DEBUG] 2023-06-10 11:42:18,899 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1290c49] under str; prior registration was null
[DEBUG] 2023-06-10 11:42:18,900 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d303498] under format; prior registration was null
[DEBUG] 2023-06-10 11:42:18,901 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d75e7af] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:42:18,901 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3d5790ea] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:42:18,901 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:42:18,901 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c534b5b] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@396639b] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b22a1cc] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62573c86] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:42:18,902 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2418ba04] under instant; prior registration was null
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10f19647] under sql; prior registration was null
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:18,903 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@102efc59] under count; prior registration was org.hibernate.dialect.function.CountFunction@25cd49a4
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@75fa1be3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a389761] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:42:18,904 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:42:18,905 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@396639b
[DEBUG] 2023-06-10 11:42:18,906 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b22a1cc
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@44c13103] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8f2098e] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:42:18,908 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c6366cf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a88417] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:42:18,909 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18acfe88] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d303498
[DEBUG] 2023-06-10 11:42:18,910 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:42:18,911 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:42:18,911 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:42:18,911 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:42:18,912 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:42:18,912 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:42:18,912 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10bea4] under mode; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e2c64] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c1e32c9] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@41b1f51e] under rank; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a543f31] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@47b67fcb] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:18,913 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2b9f74d0] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:42:18,914 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5a2bd7c8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:42:18,915 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,916 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,916 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:18,916 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:42:18,916 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,916 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,918 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:18,918 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,918 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:42:18,918 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,919 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:18,920 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:42:18,921 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:18,922 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:18,923 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:42:18,924 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:42:18,925 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,926 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:42:18,927 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:42:18,930 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:42:19,035 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:19,035 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:19,176 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:42:19,207 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:42:19,207 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:42:19,246 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:19,246 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:42:19,246 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:42:19,246 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:42:19,247 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:42:19,254 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:19,256 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:19,266 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:42:19,268 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:19,292 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:19,293 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:42:19,297 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:42:19,297 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:42:19,299 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:42:19,299 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:42:19,300 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6003ad65]
[DEBUG] 2023-06-10 11:42:19,301 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:42:19,301 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:42:19,302 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:19,302 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:42:19,303 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1fd7a37
[DEBUG] 2023-06-10 11:42:19,303 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: b980bf4b-2214-4043-89f8-dfe71947722f (<unnamed>)
[DEBUG] 2023-06-10 11:42:19,303 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:42:19,303 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:42:19,332 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:42:19,335 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:42:19,468 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:42:19,473 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:42:19,476 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:42:19,479 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:19,479 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:19,488 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(5998783829631)`
            <- [root] - `com.targetindia.model.Product(5998783829631)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(5998783829631)`
          <- [root] - `com.targetindia.model.Product(5998783829631)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(5998783829631).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:42:19,525 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:19,526 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(5998783829631))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:19,532 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:42:19,533 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(5998783829631).unitPrice) 
[DEBUG] 2023-06-10 11:42:19,535 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:42:19,535 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(5998783829631).unitPrice) 
[DEBUG] 2023-06-10 11:42:19,539 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(5998783829631)]
 |  +-BasicFetch [com.targetindia.model.Product(5998783829631).category]
 |  +-BasicFetch [com.targetindia.model.Product(5998783829631).name]
 |  +-BasicFetch [com.targetindia.model.Product(5998783829631).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(5998783829631).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(5998783829631).unitsInStock]

[DEBUG] 2023-06-10 11:42:19,539 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(5998783829631)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:19,546 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:42:19,554 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:42:19,555 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(5998783829631) -> EntityResultInitializer(com.targetindia.model.Product(5998783829631))@280960713 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:42:19,559 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:42:19,571 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:42:19,571 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5998783829631)): 1
[DEBUG] 2023-06-10 11:42:19,572 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5998783829631)#1] : 599203108
[DEBUG] 2023-06-10 11:42:19,573 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:42:19,573 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:42:19,573 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:42:19,573 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:42:19,573 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:42:19,577 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5998783829631)#1
[DEBUG] 2023-06-10 11:42:19,577 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64910b2d
[DEBUG] 2023-06-10 11:42:19,577 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:42:19,577 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5998783829631)): 4
[DEBUG] 2023-06-10 11:42:19,577 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5998783829631)#4] : 1600249858
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5998783829631)#4
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64910b2d
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(5998783829631)): 7
[DEBUG] 2023-06-10 11:42:19,578 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(5998783829631)#7] : 860176544
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(5998783829631)#7
[DEBUG] 2023-06-10 11:42:19,579 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64910b2d
[DEBUG] 2023-06-10 11:42:19,581 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:19,582 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:27,145 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:42:27,146 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:42:27,146 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:42:27,146 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:42:27,146 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:42:27,146 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:42:27,147 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:27,148 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:27,149 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:27,150 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:42:27,151 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:27,152 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:42:27,153 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@d0b814d
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@6ce15112
[DEBUG] 2023-06-10 11:42:27,154 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ba4f370
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@2ba024cb
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@7af0d91b
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1c7f6e96
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@30ec211a
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1ac0cdb0
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6684f7f2] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:27,155 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1682e6a] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@505d2bac]
[DEBUG] 2023-06-10 11:42:27,164 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:27,164 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:42:27,165 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:42:27,181 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:27,181 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:27,181 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:42:27,182 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:42:27,182 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:42:27,182 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:42:27,183 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:42:27,184 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@376af784] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@a9a8ec3]
[DEBUG] 2023-06-10 11:42:27,184 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:42:27,184 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:27,184 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:42:27,184 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:42:27,185 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:42:27,185 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:27,185 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:27,185 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:42:27,186 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:42:27,187 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:42:27,188 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:42:27,189 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:42:27,190 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:42:27,191 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:42:27,192 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:42:27,192 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:27,193 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@40016ce1, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:42:27,193 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:42:27,193 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:27,193 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:42:27,193 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@203765b2] under count; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@7e050be1] under every; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@1b47b7f5] under any; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:42:27,194 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@506aa618] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b6b5352] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d6713dd] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b39e79b] under pi; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3ee6dc82] under log; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:42:27,195 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2f86f9cf] under position; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@adafe19] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@7e2bd5e6] under trim; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@76a1146d] under cast; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6ef1c3f7] under collate; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3386c206] under extract; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@1322b575] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@6dded900] under pad; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@d504137] under str; prior registration was null
[DEBUG] 2023-06-10 11:42:27,196 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@8432469] under format; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@e4ca109] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@15c16f19] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a17dd6f] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@be6d228] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60c96eb4] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7eee6c13] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ab63a04] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@677cc4e8] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4c6bba7d] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:42:27,197 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@41e8d917] under instant; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2ae5bd34] under sql; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@2b3f7704] under count; prior registration was org.hibernate.dialect.function.CountFunction@203765b2
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@3a16984c] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3b39e79b
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3db1ce78] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:42:27,198 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:42:27,199 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@5ab63a04
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@677cc4e8
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3a3ad8e7] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a6d1ff3] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:42:27,200 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@64b73e0a] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2f86f9cf
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@57c6feea] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:42:27,205 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3b57f915] under format; prior registration was org.hibernate.dialect.function.FormatFunction@8432469
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@39c7fb0b] under mode; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@645dc557] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@48c5698] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@17884d] under rank; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@68e24e7] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:27,206 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@c732e1c] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6aad919c] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@56c42964] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:42:27,207 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:27,208 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:27,209 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:42:27,210 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:42:27,211 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:42:27,212 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:27,213 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:27,230 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:42:27,232 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:42:27,232 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:27,233 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:27,234 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:42:27,234 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:27,234 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:27,235 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:42:27,235 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:42:27,235 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:42:27,236 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@376af784] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@38c10190]
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: d75d6b01-f569-4a4c-8bc9-57b0aff03ec1 (<unnamed>)
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:42:27,236 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:42:27,237 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:42:27,237 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:42:27,237 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:42:27,237 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:27,237 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6006547948957)`
            <- [root] - `com.targetindia.model.Product(6006547948957)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6006547948957)`
          <- [root] - `com.targetindia.model.Product(6006547948957)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6006547948957).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6006547948957))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6006547948957).unitPrice) 
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:42:27,238 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6006547948957).unitPrice) 
[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6006547948957)]
 |  +-BasicFetch [com.targetindia.model.Product(6006547948957).category]
 |  +-BasicFetch [com.targetindia.model.Product(6006547948957).name]
 |  +-BasicFetch [com.targetindia.model.Product(6006547948957).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6006547948957).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6006547948957).unitsInStock]

[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6006547948957)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6006547948957) -> EntityResultInitializer(com.targetindia.model.Product(6006547948957))@1739974163 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:42:27,239 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:42:27,241 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [5]
[DEBUG] 2023-06-10 11:42:27,241 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6006547948957)): 5
[DEBUG] 2023-06-10 11:42:27,241 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6006547948957)#5] : 540537131
[DEBUG] 2023-06-10 11:42:27,241 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:42:27,241 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Pepsi]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml X 6]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [210.0]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [12]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6006547948957)#5
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@687a0e40
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [6]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6006547948957)): 6
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6006547948957)#6] : 178163105
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Seafood]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Ikura]
[DEBUG] 2023-06-10 11:42:27,242 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200gm x 4]
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [230.0]
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [18]
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6006547948957)#6
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@687a0e40
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:27,243 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:42:33,009 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:42:33,010 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:33,011 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:33,012 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:42:33,013 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:42:33,014 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:33,015 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@4abbe41c
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4fad51a3
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6d7b2319
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@acb5508
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@1f45db49
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@3ac0a14b
[DEBUG] 2023-06-10 11:42:33,016 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@e972ee1
[DEBUG] 2023-06-10 11:42:33,017 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5e24592e
[DEBUG] 2023-06-10 11:42:33,017 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6f0a4e30] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:33,017 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50ff7063] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@67a8bcbb]
[DEBUG] 2023-06-10 11:42:33,025 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:33,025 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:42:33,025 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:42:33,026 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:42:33,039 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:33,040 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:42:33,040 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:42:33,040 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:42:33,040 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:42:33,040 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:42:33,041 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:42:33,042 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@709d86a2] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@59baf2c7]
[DEBUG] 2023-06-10 11:42:33,042 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:42:33,042 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:33,043 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:42:33,044 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:42:33,045 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:42:33,046 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:42:33,047 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:42:33,048 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:42:33,049 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:42:33,050 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:42:33,050 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:42:33,051 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:33,051 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4b85edeb, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:42:33,051 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:42:33,051 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5731caaf] under count; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59933644] under every; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@67e6eb52] under any; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:42:33,052 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e8b8f0] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad57e90] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a345298] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ad896f7] under pi; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@c318864] under log; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:42:33,053 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@7d61468c] under position; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@45796b2a] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@4b98225c] under trim; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4beae1e3] under cast; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3c488b34] under collate; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@32e697ac] under extract; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@3866c96e] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@241fc278] under pad; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5c76fce4] under str; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5aab5b31] under format; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5408d4b3] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@eded048] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:42:33,054 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65a48cab] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@655621fd] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77e9dca8] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fcd0e8d] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e4d0a0b] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a4083f6] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23f5008a] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@44abdb1f] under instant; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@62108cd3] under sql; prior registration was null
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:33,055 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@7cd1ec54] under count; prior registration was org.hibernate.dialect.function.CountFunction@5731caaf
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@77ab5214] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ad896f7
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6d420cdd] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:42:33,056 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@4e4d0a0b
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@1a4083f6
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@bd273b2] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78128dd0] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:42:33,057 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55044b34] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@7d61468c
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@28dd81ad] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:33,058 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@300a38e7] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5aab5b31
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5c9a4f3b] under mode; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2bb0e277] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6f24ce45] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@e881e46] under rank; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@657b3b] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2cea921a] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@65753724] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:42:33,059 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@2bc16fe2] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:42:33,060 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:42:33,061 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,062 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:42:33,063 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:42:33,064 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:42:33,065 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:42:33,066 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:33,081 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:42:33,083 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:42:33,084 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:42:33,084 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:33,084 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:33,084 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:42:33,084 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:33,085 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:42:33,085 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:42:33,085 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:42:33,085 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:42:33,086 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@709d86a2] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@63553e9f]
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:42:33,086 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 478a2461-cb73-491f-b543-357dfcac18f0 (<unnamed>)
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:42:33,087 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6012398296884)`
            <- [root] - `com.targetindia.model.Product(6012398296884)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6012398296884)`
          <- [root] - `com.targetindia.model.Product(6012398296884)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6012398296884).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:42:33,088 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6012398296884))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6012398296884).unitPrice) 
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6012398296884).unitPrice) 
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6012398296884)]
 |  +-BasicFetch [com.targetindia.model.Product(6012398296884).category]
 |  +-BasicFetch [com.targetindia.model.Product(6012398296884).name]
 |  +-BasicFetch [com.targetindia.model.Product(6012398296884).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6012398296884).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6012398296884).unitsInStock]

[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6012398296884)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:42:33,089 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:42:33,090 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6012398296884) -> EntityResultInitializer(com.targetindia.model.Product(6012398296884))@831775261 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:42:33,090 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:42:33,091 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:33,092 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:42:48,544 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-10 11:42:57,182 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:42:59,983 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:42:59,984 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:42:59,984 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:42:59,984 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:42:59,984 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:59,984 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:42:59,985 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:59,986 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:42:59,987 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:42:59,988 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:59,989 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@44eb2452
[DEBUG] 2023-06-10 11:42:59,990 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@31940704
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@e07b4db
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@76b305e1
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@6be766d1
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@7adae08e
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@49c83262
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@273aaab7
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@77bb916f] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:59,991 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5a48d186] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@521ba38f]
[DEBUG] 2023-06-10 11:42:59,999 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:42:59,999 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:42:59,999 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:42:59,999 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:42:59,999 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:43:00,000 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:43:00,000 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:43:00,000 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:43:00,000 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:43:00,013 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:00,013 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:00,013 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:43:00,014 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:43:00,014 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:43:00,014 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:43:00,015 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd37440] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@79308a2]
[DEBUG] 2023-06-10 11:43:00,016 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:43:00,016 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:00,016 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:43:00,016 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:43:00,017 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:43:00,018 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:43:00,019 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:43:00,020 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:43:00,021 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:43:00,022 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:43:00,023 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:43:00,024 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:43:00,024 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:00,024 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@352e5a82, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:43:00,024 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@315b5913] under count; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e929182] under every; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5423a17] under any; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:43:00,025 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@42ff9a77] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2987d0fa] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13234ac9] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7254838] under pi; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39374689] under log; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:43:00,026 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@2e204155] under position; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@27dc335a] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@a95cb11] under trim; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@915d7c4] under cast; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2513155a] under collate; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@6313b441] under extract; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@47fa3671] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@60f662bd] under pad; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@5df2023c] under str; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@23bd047f] under format; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@3562e7c7] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@66d2885c] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:43:00,027 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2bfc8558] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@6029f2a4] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42576db9] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30358dc7] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fac18dc] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@50bf795f] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29fcfc54] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@353b0719] under instant; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@2a4e939a] under sql; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@110620d] under count; prior registration was org.hibernate.dialect.function.CountFunction@315b5913
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@4f402027] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7254838
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:43:00,028 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@22aee519] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:43:00,029 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@7fac18dc
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@50bf795f
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@7c226095] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ea07516] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@30af23fd] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@2e204155
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:43:00,030 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65fc8edc] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@a357c3e] under format; prior registration was org.hibernate.dialect.function.FormatFunction@23bd047f
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:43:00,031 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7740b0ab] under mode; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3eb9c575] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3f322610] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1e477944] under rank; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6cf047cf] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1c92a549] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@323e026d] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@1716c037] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,032 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:43:00,033 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:43:00,034 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:43:00,035 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:00,036 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:43:00,037 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:00,038 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:00,053 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:81)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:43:00,054 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:43:00,054 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:43:00,055 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:00,056 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:00,056 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:43:00,056 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:43:00,056 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:43:00,057 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@1fd37440] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@df7d1d4]
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 24c990d4-6110-44ec-bb37-47ba801b99bd (<unnamed>)
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:43:00,057 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:00,058 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6039368752767)`
            <- [root] - `com.targetindia.model.Product(6039368752767)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6039368752767)`
          <- [root] - `com.targetindia.model.Product(6039368752767)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6039368752767).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6039368752767))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6039368752767).unitPrice) 
[DEBUG] 2023-06-10 11:43:00,059 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6039368752767).unitPrice) 
[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6039368752767)]
 |  +-BasicFetch [com.targetindia.model.Product(6039368752767).category]
 |  +-BasicFetch [com.targetindia.model.Product(6039368752767).name]
 |  +-BasicFetch [com.targetindia.model.Product(6039368752767).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6039368752767).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6039368752767).unitsInStock]

[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6039368752767)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6039368752767) -> EntityResultInitializer(com.targetindia.model.Product(6039368752767))@930987088 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:43:00,060 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:43:00,062 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:00,062 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:03,044 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
[TRACE] 2023-06-10 11:43:42,209 main            com.targetindia.App [308] starting the app
[DEBUG] 2023-06-10 11:43:46,435 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:43:46,435 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:43:46,435 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:43:46,440 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:43:46,443 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:43:46,447 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[ INFO] 2023-06-10 11:43:46,481 main            org.hibernate.Version [44] HHH000412: Hibernate ORM core version 6.2.4.Final
[DEBUG] 2023-06-10 11:43:46,482 main            org.hibernate.cfg.Environment [174] HHH000206: hibernate.properties not found
[ INFO] 2023-06-10 11:43:46,482 main            org.hibernate.cfg.Environment [191] HHH000406: Using bytecode reflection optimizer
[DEBUG] 2023-06-10 11:43:46,501 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:43:46,505 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:43:46,505 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:43:46,506 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:46,506 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:46,506 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:43:46,507 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:43:46,507 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:43:46,508 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:46,508 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:43:46,509 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:43:46,509 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:46,510 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:43:46,518 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:43:46,518 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:46,595 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:46,596 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:46,597 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:43:46,598 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:43:46,599 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:46,600 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:46,601 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:43:46,602 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:46,603 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:46,604 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:43:46,608 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:46,608 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@f0da945
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4803b726
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@ffaa6af
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@53ce1329
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@316bcf94
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@6404f418
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3e11f9e9
[DEBUG] 2023-06-10 11:43:46,609 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1de5f259
[DEBUG] 2023-06-10 11:43:46,612 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4b8ee4de] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:46,612 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@27f981c6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1b11171f]
[DEBUG] 2023-06-10 11:43:46,656 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:46,656 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:43:46,669 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:43:46,673 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:43:46,673 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:43:46,673 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:43:46,673 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:43:46,675 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:43:46,675 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:43:46,902 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:46,902 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:46,902 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:43:46,930 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:43:46,934 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:43:46,934 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:43:46,943 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:46,943 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:46,944 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:46,945 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:46,945 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:46,946 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:43:46,947 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:43:46,949 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@46cf05f7]
[DEBUG] 2023-06-10 11:43:46,971 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:43:46,992 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:46,997 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:43:47,001 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:43:47,007 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:43:47,018 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:47,019 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:47,019 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:47,022 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:43:47,025 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:43:47,028 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:43:47,030 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:43:47,030 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:43:47,032 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:43:47,033 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:43:47,034 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:43:47,035 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:43:47,036 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:43:47,040 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:43:47,041 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:43:47,041 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:43:47,041 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:43:47,042 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:43:47,042 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:43:47,043 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:43:47,064 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:43:47,166 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:43:47,196 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:47,196 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7c129ef6, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:43:47,199 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:43:47,204 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:47,227 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:43:47,227 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:43:47,228 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:43:47,228 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:43:47,229 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@25cd49a4] under count; prior registration was null
[DEBUG] 2023-06-10 11:43:47,230 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@23eff5d1] under every; prior registration was null
[DEBUG] 2023-06-10 11:43:47,231 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2e060819] under any; prior registration was null
[DEBUG] 2023-06-10 11:43:47,231 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:43:47,231 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:43:47,231 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:43:47,231 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:43:47,232 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:43:47,233 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:43:47,234 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@778d82e9] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:43:47,234 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@408e96d9] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:43:47,234 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@59901c4d] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:43:47,234 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b] under pi; prior registration was null
[DEBUG] 2023-06-10 11:43:47,234 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@d8d9199] under log; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:43:47,235 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:43:47,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:43:47,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:43:47,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:43:47,236 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7] under position; prior registration was null
[DEBUG] 2023-06-10 11:43:47,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7139bd31] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:43:47,237 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@3e17a0a1] under trim; prior registration was null
[DEBUG] 2023-06-10 11:43:47,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4e1ce44] under cast; prior registration was null
[DEBUG] 2023-06-10 11:43:47,238 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@69228e85] under collate; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@2f61d591] under extract; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@53a9fcfd] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:43:47,239 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:43:47,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@84487f4] under pad; prior registration was null
[DEBUG] 2023-06-10 11:43:47,240 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1290c49] under str; prior registration was null
[DEBUG] 2023-06-10 11:43:47,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6d303498] under format; prior registration was null
[DEBUG] 2023-06-10 11:43:47,241 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@1d75e7af] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:43:47,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@3d5790ea] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:43:47,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:43:47,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:43:47,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@56913163] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:43:47,242 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@702b06fb] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@a18649a] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5c534b5b] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@396639b] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2b22a1cc] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@62573c86] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2418ba04] under instant; prior registration was null
[DEBUG] 2023-06-10 11:43:47,243 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@10f19647] under sql; prior registration was null
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:47,244 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@102efc59] under count; prior registration was org.hibernate.dialect.function.CountFunction@25cd49a4
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@75fa1be3] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@168cd36b
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7a389761] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:43:47,245 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:43:47,246 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@396639b
[DEBUG] 2023-06-10 11:43:47,247 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@2b22a1cc
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@44c13103] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@8f2098e] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:43:47,248 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6c6366cf] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@260ff5b7
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55a88417] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:43:47,249 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:47,250 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:47,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@18acfe88] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6d303498
[DEBUG] 2023-06-10 11:43:47,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:43:47,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:43:47,251 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:43:47,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:43:47,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:43:47,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:43:47,252 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@10bea4] under mode; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7e2c64] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@7c1e32c9] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@41b1f51e] under rank; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@3a543f31] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@47b67fcb] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:47,253 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2b9f74d0] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:43:47,254 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@5a2bd7c8] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:43:47,255 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,255 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,255 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:47,255 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:43:47,255 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,256 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:47,258 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:43:47,259 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,260 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,261 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:47,262 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,263 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:43:47,264 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:47,265 main            org.hibernate.HQL_FUNCTIONS [105] basicType@12(java.lang.Long,-5)|basicType@3(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:43:47,266 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:43:47,270 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:43:47,377 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:47,377 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:47,511 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:84)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:43:47,542 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:43:47,542 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:43:47,585 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:47,585 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:43:47,585 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:43:47,586 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:43:47,586 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:43:47,596 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:47,598 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:47,609 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:43:47,611 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:47,639 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:47,641 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:43:47,645 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:43:47,646 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:43:47,648 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:43:47,648 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:43:47,648 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@29caf222] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@6003ad65]
[DEBUG] 2023-06-10 11:43:47,650 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:43:47,650 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:43:47,650 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:47,650 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:43:47,652 main            org.hibernate.internal.SessionFactoryRegistry [52] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1fd7a37
[DEBUG] 2023-06-10 11:43:47,652 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 2ef84028-a8ff-4d0f-8e45-80cf0ba17b5d (<unnamed>)
[DEBUG] 2023-06-10 11:43:47,652 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:43:47,653 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:43:47,686 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:43:47,689 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:43:47,837 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:43:47,843 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:43:47,846 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:43:47,850 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:47,850 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:47,859 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6087153035654)`
            <- [root] - `com.targetindia.model.Product(6087153035654)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6087153035654)`
          <- [root] - `com.targetindia.model.Product(6087153035654)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6087153035654).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:43:47,896 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:47,897 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6087153035654))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:47,902 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:43:47,903 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6087153035654).unitPrice) 
[DEBUG] 2023-06-10 11:43:47,905 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:43:47,906 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6087153035654).unitPrice) 
[DEBUG] 2023-06-10 11:43:47,909 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6087153035654)]
 |  +-BasicFetch [com.targetindia.model.Product(6087153035654).category]
 |  +-BasicFetch [com.targetindia.model.Product(6087153035654).name]
 |  +-BasicFetch [com.targetindia.model.Product(6087153035654).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6087153035654).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6087153035654).unitsInStock]

[DEBUG] 2023-06-10 11:43:47,909 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6087153035654)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:47,916 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:43:47,924 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:43:47,925 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6087153035654) -> EntityResultInitializer(com.targetindia.model.Product(6087153035654))@280960713 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:43:47,929 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:43:47,939 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:43:47,939 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6087153035654)): 7
[DEBUG] 2023-06-10 11:43:47,940 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6087153035654)#7] : 599203108
[DEBUG] 2023-06-10 11:43:47,941 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:43:47,941 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:43:47,941 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:43:47,941 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:43:47,941 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:43:47,944 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6087153035654)#7
[DEBUG] 2023-06-10 11:43:47,944 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@64910b2d
[DEBUG] 2023-06-10 11:43:47,946 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:47,947 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:55,359 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:43:55,359 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:43:55,359 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:43:55,360 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:43:55,360 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:43:55,360 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:43:55,361 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:55,362 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:55,363 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:43:55,364 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:55,365 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:55,366 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:55,367 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@2b098563
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@c758a2d
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@d0b814d
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6ce15112
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@ba4f370
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@2ba024cb
[DEBUG] 2023-06-10 11:43:55,368 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@7af0d91b
[DEBUG] 2023-06-10 11:43:55,369 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@1c7f6e96
[DEBUG] 2023-06-10 11:43:55,369 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@30ec211a] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:55,369 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1ac0cdb0] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6684f7f2]
[DEBUG] 2023-06-10 11:43:55,378 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:55,378 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:43:55,378 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:43:55,396 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:55,396 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:55,396 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:43:55,396 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:43:55,397 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:43:55,397 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d815fb7] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@51af8049]
[DEBUG] 2023-06-10 11:43:55,398 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:43:55,399 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:55,399 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:43:55,399 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:43:55,400 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:43:55,400 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:55,401 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:43:55,402 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:43:55,403 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:43:55,404 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:43:55,405 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:43:55,406 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:43:55,407 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:43:55,407 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@a9a8ec3, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:43:55,408 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@6d0114c0] under count; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@40016ce1] under every; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@203765b2] under any; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e050be1] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:43:55,409 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1b47b7f5] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@506aa618] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b6b5352] under pi; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1d6713dd] under log; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@3b39e79b] under position; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@3ee6dc82] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2f86f9cf] under trim; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@adafe19] under cast; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7e2bd5e6] under collate; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@76a1146d] under extract; prior registration was null
[DEBUG] 2023-06-10 11:43:55,410 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@6ef1c3f7] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3386c206] under pad; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@1322b575] under str; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@6dded900] under format; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@d504137] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@8432469] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@e4ca109] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@15c16f19] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a17dd6f] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@be6d228] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@60c96eb4] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7eee6c13] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@5ab63a04] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:43:55,411 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@677cc4e8] under instant; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4c6bba7d] under sql; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@41e8d917] under count; prior registration was org.hibernate.dialect.function.CountFunction@6d0114c0
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@2ae5bd34] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4b6b5352
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2b3f7704] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:43:55,412 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:55,413 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@60c96eb4
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@7eee6c13
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@3a16984c] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3db1ce78] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3a3ad8e7] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@3b39e79b
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@6a6d1ff3] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:43:55,414 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:43:55,418 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@64b73e0a] under format; prior registration was org.hibernate.dialect.function.FormatFunction@6dded900
[DEBUG] 2023-06-10 11:43:55,419 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@57c6feea] under mode; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3b57f915] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@39c7fb0b] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@645dc557] under rank; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@48c5698] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@17884d] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@68e24e7] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:43:55,420 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@c732e1c] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:55,421 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:43:55,422 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:43:55,423 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,424 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:43:55,425 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:43:55,426 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] basicType@28(java.lang.Long,-5)|basicType@19(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:43:55,427 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:43:55,428 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:55,428 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:55,444 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:84)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:43:55,446 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:43:55,447 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:55,447 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:55,447 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:43:55,447 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:55,448 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:55,448 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:43:55,448 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:43:55,448 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:43:55,449 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:43:55,450 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6d815fb7] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@43deba42]
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: ac5ac902-c4ce-4117-b86e-7a1b1067e92d (<unnamed>)
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:43:55,450 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:43:55,451 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:43:55,451 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:43:55,452 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:43:55,452 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:55,452 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:55,452 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6094761226589)`
            <- [root] - `com.targetindia.model.Product(6094761226589)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6094761226589)`
          <- [root] - `com.targetindia.model.Product(6094761226589)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6094761226589).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6094761226589))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6094761226589).unitPrice) 
[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:43:55,453 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6094761226589).unitPrice) 
[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6094761226589)]
 |  +-BasicFetch [com.targetindia.model.Product(6094761226589).category]
 |  +-BasicFetch [com.targetindia.model.Product(6094761226589).name]
 |  +-BasicFetch [com.targetindia.model.Product(6094761226589).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6094761226589).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6094761226589).unitsInStock]

[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6094761226589)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6094761226589) -> EntityResultInitializer(com.targetindia.model.Product(6094761226589))@1025266421 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:43:55,454 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6094761226589)): 1
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6094761226589)#1] : 1874962678
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:43:55,456 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6094761226589)#1
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3095d401
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6094761226589)): 4
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6094761226589)#4] : 540537131
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6094761226589)#4
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3095d401
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:43:55,457 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6094761226589)): 7
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6094761226589)#7] : 1752829504
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6094761226589)#7
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3095d401
[DEBUG] 2023-06-10 11:43:55,458 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:55,459 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:43:59,222 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:43:59,223 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:43:59,224 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:59,225 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:43:59,226 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:43:59,227 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:59,228 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5ab7ac02
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@4abbe41c
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@4fad51a3
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@6d7b2319
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@acb5508
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1f45db49
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@3ac0a14b
[DEBUG] 2023-06-10 11:43:59,229 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@e972ee1
[DEBUG] 2023-06-10 11:43:59,230 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5e24592e] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:59,230 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f0a4e30] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@50ff7063]
[DEBUG] 2023-06-10 11:43:59,237 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:43:59,237 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:43:59,238 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:43:59,252 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:59,252 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:43:59,252 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:43:59,253 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:43:59,253 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:43:59,253 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@138a85d3] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@709d86a2]
[DEBUG] 2023-06-10 11:43:59,254 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:43:59,255 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:59,255 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:43:59,255 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:43:59,255 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:43:59,256 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:43:59,257 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:43:59,258 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:43:59,259 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:43:59,260 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:43:59,261 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:43:59,261 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:43:59,262 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:59,262 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@ce655b9, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:43:59,262 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:43:59,262 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@4b85edeb] under count; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@5731caaf] under every; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@59933644] under any; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:43:59,263 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@67e6eb52] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@3e8b8f0] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@5ad57e90] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a345298] under pi; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4ad896f7] under log; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:43:59,264 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@c318864] under position; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@7d61468c] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@45796b2a] under trim; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@4b98225c] under cast; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@4beae1e3] under collate; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@3c488b34] under extract; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@32e697ac] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@3866c96e] under pad; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@241fc278] under str; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@5c76fce4] under format; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@5aab5b31] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@5408d4b3] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:43:59,265 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@eded048] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@65a48cab] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@655621fd] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@77e9dca8] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@fcd0e8d] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@4e4d0a0b] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@1a4083f6] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@23f5008a] under instant; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@44abdb1f] under sql; prior registration was null
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:59,266 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@62108cd3] under count; prior registration was org.hibernate.dialect.function.CountFunction@4b85edeb
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@7cd1ec54] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@1a345298
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@77ab5214] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:43:59,267 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@fcd0e8d
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@4e4d0a0b
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@6d420cdd] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@bd273b2] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:43:59,268 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@78128dd0] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@c318864
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@55044b34] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:43:59,269 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@28dd81ad] under format; prior registration was org.hibernate.dialect.function.FormatFunction@5c76fce4
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@300a38e7] under mode; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@5c9a4f3b] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@2bb0e277] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@6f24ce45] under rank; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@e881e46] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@657b3b] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@2cea921a] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:43:59,270 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@65753724] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:43:59,271 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,272 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:43:59,273 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:43:59,274 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:43:59,275 main            org.hibernate.HQL_FUNCTIONS [105] basicType@44(java.lang.Long,-5)|basicType@35(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:43:59,276 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:59,290 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:82)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:43:59,292 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:59,293 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:59,293 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:43:59,293 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:59,293 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:43:59,293 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:43:59,294 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:43:59,294 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:43:59,295 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@138a85d3] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@1d1c37d5]
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: 9a6f8a3e-be76-4ea7-a675-6b370167924c (<unnamed>)
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:43:59,295 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6098605697665)`
            <- [root] - `com.targetindia.model.Product(6098605697665)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6098605697665)`
          <- [root] - `com.targetindia.model.Product(6098605697665)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6098605697665).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:43:59,296 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6098605697665))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6098605697665).unitPrice) 
[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6098605697665).unitPrice) 
[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6098605697665)]
 |  +-BasicFetch [com.targetindia.model.Product(6098605697665).category]
 |  +-BasicFetch [com.targetindia.model.Product(6098605697665).name]
 |  +-BasicFetch [com.targetindia.model.Product(6098605697665).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6098605697665).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6098605697665).unitsInStock]

[DEBUG] 2023-06-10 11:43:59,297 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6098605697665)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:43:59,298 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:43:59,298 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:43:59,298 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6098605697665) -> EntityResultInitializer(com.targetindia.model.Product(6098605697665))@1552127607 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:43:59,298 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6098605697665)): 7
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6098605697665)#7] : 1796366727
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:43:59,300 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:43:59,301 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:43:59,301 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6098605697665)#7
[DEBUG] 2023-06-10 11:43:59,301 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@2b6262bc
[DEBUG] 2023-06-10 11:43:59,301 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:43:59,301 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.jpa.HibernatePersistenceProvider [86] Located and parsed 1 persistence units; checking each
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.jpa.HibernatePersistenceProvider [95] Checking persistence-unit [name=h2-northwind, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [h2-northwind]
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.jpa.boot.spi.ProviderChecker [81] Persistence-unit [h2-northwind] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.jpa.internal.util.LogHelper [102] PersistenceUnitInfo [
	name: h2-northwind
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		jakarta.persistence.jdbc.password: Welcome#123
		hibernate.dialect: org.hibernate.dialect.H2Dialect
		hibernate.show_sql: false
		jakarta.persistence.jdbc.url: jdbc:mysql://localhost/targetdb_b1
		jakarta.persistence.jdbc.driver: com.mysql.cj.jdbc.Driver
		hibernate.format_sql: true
		jakarta.persistence.jdbc.user: root]
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.boot.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2023-06-10 11:44:03,612 main            org.hibernate.integrator.internal.IntegratorServiceImpl [45] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] 2023-06-10 11:44:03,613 main            org.hibernate.orm.idgen.factory [94] Ignoring CDI for resolving IdentifierGenerator instances as extended or delayed CDI support was enabled
[DEBUG] 2023-06-10 11:44:03,613 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2023-06-10 11:44:03,613 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2023-06-10 11:44:03,613 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.orm.idgen.factory [170] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.cache.internal.RegionFactoryInitiator [117] Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.cache.internal.RegionFactoryInitiator [49] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@10feca44
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@3fb1549b
[DEBUG] 2023-06-10 11:44:03,614 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration true_false -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@ea6147e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@4d02f94e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@2b48a640
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [B -> org.hibernate.type.BasicTypeReference@1e683a3e
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@2053d869
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration image -> org.hibernate.type.BasicTypeReference@7a419da4
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@14555e0a
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@4bb33f74
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@759d26fb
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@3c73951
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration int -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@3d5c822d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@6f46426d
[DEBUG] 2023-06-10 11:44:03,615 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@73700b80
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@49c7b90e
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@10d307f1
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@4d5b6aac
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@3e84448c
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@4a7f959b
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration string -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@429bffaa
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nstring -> org.hibernate.type.BasicTypeReference@5403f35f
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration characters -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration char[] -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration [C -> org.hibernate.type.BasicTypeReference@483f6d77
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@7e5afaa6
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration text -> org.hibernate.type.BasicTypeReference@63a12c68
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ntext -> org.hibernate.type.BasicTypeReference@28f3b248
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@1b1426f4
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration nclob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:44:03,616 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@32b260fa
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@581ac8a8
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@6d4e5011
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@57d7f8ca
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@76c3e77a
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@78123e82
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@67c33749
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@fba92d3
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@662b4c69
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@fa49800
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@71238fc2
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@2a54a73f
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@16a0ee18
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3d6f0054
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@505fc5a4
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@5fbdfdcf
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@4efc180e
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@bd4dc25
[DEBUG] 2023-06-10 11:44:03,617 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@25084a1e
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@156b88f5
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@3bf9ce3e
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@16610890
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@71def8f8
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@383bfa16
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@4d465b11
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@53fdffa1
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@5562c41e
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@32ee6fee
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4d0f2471
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@7133da86
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@3232a28a
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73e22a3d
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:44:03,618 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@47faa49c
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@28f2a10f
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@f736069
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration timezone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@6da21078
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@7fee8714
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration url -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@4229bb3f
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration row_version -> org.hibernate.type.BasicTypeReference@56cdfb3b
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@7c711375
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [385] Adding type registration null -> org.hibernate.type.NullType@194bcebf
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@e07b4db
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@76b305e1
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@6be766d1
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@7adae08e
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@49c83262
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@273aaab7
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@77bb916f
[DEBUG] 2023-06-10 11:44:03,619 main            org.hibernate.type.BasicTypeRegistry [410] Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@5a48d186
[DEBUG] 2023-06-10 11:44:03,620 main            org.hibernate.boot.internal.BootstrapContextImpl [301] Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@521ba38f] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:44:03,620 main            org.hibernate.boot.internal.BootstrapContextImpl [296] Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2086d469] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@b1d19ff]
[DEBUG] 2023-06-10 11:44:03,627 main            org.hibernate.boot.internal.BootstrapContextImpl [291] Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
[DEBUG] 2023-06-10 11:44:03,627 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [45] ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
[ WARN] 2023-06-10 11:44:03,627 main            org.hibernate.orm.connections.pooling [80] HHH10001002: Using built-in connection pool (not intended for production use)
[ INFO] 2023-06-10 11:44:03,627 main            org.hibernate.orm.connections.pooling [139] HHH10001005: Loaded JDBC driver class: com.mysql.cj.jdbc.Driver
[ INFO] 2023-06-10 11:44:03,627 main            org.hibernate.orm.connections.pooling [161] HHH10001012: Connecting with JDBC URL [jdbc:mysql://localhost/targetdb_b1]
[ INFO] 2023-06-10 11:44:03,627 main            org.hibernate.orm.connections.pooling [167] HHH10001001: Connection properties: {password=Welcome#123, user=root}
[ INFO] 2023-06-10 11:44:03,627 main            org.hibernate.orm.connections.pooling [174] HHH10001003: Autocommit mode: false
[DEBUG] 2023-06-10 11:44:03,628 main            org.hibernate.orm.connections.pooling [358] Initializing Connection pool with 1 Connections
[ INFO] 2023-06-10 11:44:03,628 main            org.hibernate.orm.connections.pooling [366] HHH10001115: Connection pool size: 20 (min=1)
[DEBUG] 2023-06-10 11:44:03,641 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [156] Database ->
       name : MySQL
    version : 8.0.33
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:44:03,642 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [167] Driver ->
       name : MySQL Connector/J
    version : mysql-connector-j-8.0.33 (Revision: 7d6b0800528b6b25c68b52dc10d6c1c8429c100c)
      major : 8
      minor : 0
[DEBUG] 2023-06-10 11:44:03,642 main            org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator [389] JDBC version : 4.2
[DEBUG] 2023-06-10 11:44:03,642 main            org.hibernate.orm.dialect [93] HHH035001: Using dialect: org.hibernate.dialect.H2Dialect, version: 8.0.33
[DEBUG] 2023-06-10 11:44:03,642 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [121] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2023-06-10 11:44:03,642 main            org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder [210] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [56] addDescriptor(TimestampUtcDescriptor) replaced previous registration(TimestampUtcDescriptor)
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.descriptor.jdbc.spi.JdbcTypeRegistry [64] addDescriptor(3100, NumericTypeDescriptor) replaced previous registration(org.hibernate.dialect.H2DurationIntervalSecondJdbcType@669253b7)
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.type.spi.TypeConfiguration$Scope [191] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11574592] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@352e5a82]
[DEBUG] 2023-06-10 11:44:03,643 main            org.hibernate.boot.model.relational.Namespace [64] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2023-06-10 11:44:03,644 main            org.hibernate.boot.model.internal.EntityBinder [206] Binding entity from annotated class: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:44:03,644 main            org.hibernate.boot.model.internal.EntityBinder [1224] Import with entity name Product
[DEBUG] 2023-06-10 11:44:03,644 main            org.hibernate.boot.model.internal.EntityBinder [1769] Bind entity com.targetindia.model.Product on table products
[DEBUG] 2023-06-10 11:44:03,644 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedDiscriminatorColumn(column='DTYPE')
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property id with lazy=false
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:id]
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for id
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.id
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property id
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.BinderHelper [73] #makeIdGenerator(BasicValue([Column(id)]), id, identity, , ...)
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property category with lazy=false
[DEBUG] 2023-06-10 11:44:03,645 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:category]
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for category
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.category
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property category
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn()
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property name with lazy=false
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:name]
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for name
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.name
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property name
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='quantity_per_unit')
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property quantityPerUnit with lazy=false
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:quantityPerUnit]
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for quantityPerUnit
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.quantity_per_unit
[DEBUG] 2023-06-10 11:44:03,646 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property quantityPerUnit
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='unit_price')
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitPrice with lazy=false
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitPrice]
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitPrice
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.unit_price
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitPrice
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.AnnotatedColumn [249] Binding column: AnnotatedColumn(column='units_in_stock')
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.PropertyBinder [248] MetadataSourceProcessor property unitsInStock with lazy=false
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.AbstractPropertyHolder [107] Attempting to locate auto-apply AttributeConverter for property [com.targetindia.model.Product:unitsInStock]
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.BasicValueBinder [1196] building BasicValue for unitsInStock
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.mapping.BasicValue [259] Skipping column re-registration: products.units_in_stock
[DEBUG] 2023-06-10 11:44:03,647 main            org.hibernate.boot.model.internal.PropertyBinder [388] Building property unitsInStock
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for id
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for category
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for name
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for quantityPerUnit
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitPrice
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.boot.model.internal.BasicValueBinder [1270] Starting `BasicValueBinder#fillSimpleValue` for unitsInStock
[DEBUG] 2023-06-10 11:44:03,648 main            org.hibernate.mapping.PrimaryKey [40] Forcing column [id] to be non-null as it is part of the primary key for table [products]
[ INFO] 2023-06-10 11:44:03,650 main            org.hibernate.bytecode.internal.BytecodeProviderInitiator [53] HHH000021: Bytecode provider name : bytebuddy
[DEBUG] 2023-06-10 11:44:03,650 main            org.hibernate.internal.SessionFactoryImpl [208] Building session factory
[DEBUG] 2023-06-10 11:44:03,650 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.internal.SessionFactoryImpl [225] Instantiating SessionFactory with settings: {hibernate.format_sql=true, java.specification.version=17, sun.jnu.encoding=UTF-8, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt/target/classes:/Users/vinod/.m2/repository/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar:/Users/vinod/.m2/repository/org/slf4j/slf4j-reload4j/2.0.7/slf4j-reload4j-2.0.7.jar:/Users/vinod/.m2/repository/ch/qos/reload4j/reload4j/1.2.22/reload4j-1.2.22.jar:/Users/vinod/.m2/repository/com/mysql/mysql-connector-j/8.0.33/mysql-connector-j-8.0.33.jar:/Users/vinod/.m2/repository/com/google/protobuf/protobuf-java/3.21.9/protobuf-java-3.21.9.jar:/Users/vinod/.m2/repository/org/hibernate/orm/hibernate-core/6.2.4.Final/hibernate-core-6.2.4.Final.jar:/Users/vinod/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/Users/vinod/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/Users/vinod/.m2/repository/org/jboss/logging/jboss-logging/3.5.0.Final/jboss-logging-3.5.0.Final.jar:/Users/vinod/.m2/repository/org/hibernate/common/hibernate-commons-annotations/6.0.6.Final/hibernate-commons-annotations-6.0.6.Final.jar:/Users/vinod/.m2/repository/io/smallrye/jandex/3.0.5/jandex-3.0.5.jar:/Users/vinod/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/vinod/.m2/repository/net/bytebuddy/byte-buddy/1.12.18/byte-buddy-1.12.18.jar:/Users/vinod/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.0/jakarta.xml.bind-api-4.0.0.jar:/Users/vinod/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.0/jakarta.activation-api-2.1.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.2/jaxb-runtime-4.0.2.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.2/jaxb-core-4.0.2.jar:/Users/vinod/.m2/repository/org/eclipse/angus/angus-activation/2.0.0/angus-activation-2.0.0.jar:/Users/vinod/.m2/repository/org/glassfish/jaxb/txw2/4.0.2/txw2-4.0.2.jar:/Users/vinod/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.1/istack-commons-runtime-4.1.1.jar:/Users/vinod/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/Users/vinod/.m2/repository/org/antlr/antlr4-runtime/4.10.1/antlr4-runtime-4.10.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, java.vendor.url=https://java.oracle.com/, user.timezone=Asia/Kolkata, javax.persistence.jdbc.user=****, javax.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, java.vm.specification.version=17, os.name=Mac OS X, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=IN, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home/lib, sun.java.command=com.targetindia.App, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.cpu.endian=little, user.home=/Users/vinod, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2023-04-18, java.home=/Library/Java/JavaVirtualMachines/jdk-17.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=h2-northwind, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.cj.jdbc.Driver, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=17.0.7+8-LTS-224, user.name=vinod, path.separator=:, hibernate.connection.username=****, os.version=13.4, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost/targetdb_b1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.connection.driver_class=com.mysql.cj.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=/var/folders/7x/7pmb0j1171s0xk4sc55r58kr0000gn/T/, java.version=17.0.7, user.dir=/Users/vinod/Documents/TARGET-APR-2023-BATCH-1/projects/product-mgmt, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, jakarta.persistence.jdbc.url=jdbc:mysql://localhost/targetdb_b1, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2e929182, native.encoding=US-ASCII, java.library.path=/Users/vinod/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.7+8-LTS-224, hibernate.bytecode.use_reflection_optimizer=true, sun.io.unicode.encoding=UnicodeBig, javax.persistence.jdbc.password=****, socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=61.0}
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.internal.SessionFactoryImpl [239] Session factory constructed with filter configurations : {}
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was null
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was null
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was null
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was null
[DEBUG] 2023-06-10 11:44:03,651 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@5423a17] under count; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@42ff9a77] under every; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.EveryAnyEmulation@2987d0fa] under any; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(floor)] under floor; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ceiling)] under ceiling; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(mod)] under mod; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(abs)] under abs; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sign)] under sign; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sqrt)] under sqrt; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ln)] under ln; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(exp)] under exp; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(power)] under power; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(round)] under round; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sin)] under sin; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cos)] under cos; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(tan)] under tan; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(asin)] under asin; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(acos)] under acos; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan)] under atan; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(atan2)] under atan2; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@13234ac9] under sinh; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7254838] under cosh; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@39374689] under tanh; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e204155] under pi; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@27dc335a] under log; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(coalesce)] under coalesce; prior registration was null
[DEBUG] 2023-06-10 11:44:03,652 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nullif)] under nullif; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(left)] under left; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(right)] under right; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(replace)] under replace; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(concat)] under concat; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lower)] under lower; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(upper)] under upper; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substring)] under substring; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(locate)] under locate; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(character_length)] under character_length; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : length -> character_length
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LocatePositionEmulation@a95cb11] under position; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InsertSubstringOverlayEmulation@915d7c4] under overlay; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TrimFunction@2513155a] under trim; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastFunction@6313b441] under cast; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@47fa3671] under collate; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ExtractFunction@60f662bd] under extract; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(least)] under least; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(greatest)] under greatest; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CoalesceIfnullEmulation@5df2023c] under ifnull; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lpad)] under lpad; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rpad)] under rpad; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.LpadRpadPadEmulation@23bd047f] under pad; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CastStrEmulation@3562e7c7] under str; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@66d2885c] under format; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampaddFunction@2bfc8558] under timestampadd; prior registration was null
[DEBUG] 2023-06-10 11:44:03,653 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TimestampdiffFunction@6029f2a4] under timestampdiff; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : dateadd -> timestampadd
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : datediff -> timestampdiff
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@42576db9] under current_date; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@30358dc7] under current_time; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@7fac18dc] under current_timestamp; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current date -> current_date
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current time -> current_time
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current timestamp -> current_timestamp
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@50bf795f] under local_date; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@29fcfc54] under local_time; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@353b0719] under local_datetime; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@2a4e939a] under offset_datetime; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local date -> local_date
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local time -> local_time
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : local datetime -> local_datetime
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : offset datetime -> offset_datetime
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CurrentFunction@110620d] under instant; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : current_instant -> instant
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.SqlFunction@4f402027] under sql; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(max)] under max; prior registration was NamedSqmFunctionTemplate(max)
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(min)] under min; prior registration was NamedSqmFunctionTemplate(min)
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sum)] under sum; prior registration was NamedSqmFunctionTemplate(sum)
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(avg)] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.CountFunction@22aee519] under count; prior registration was org.hibernate.dialect.function.CountFunction@5423a17
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.AvgFunction@7c226095] under avg; prior registration was NamedSqmFunctionTemplate(avg)
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(pi)] under pi; prior registration was org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@2e204155
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(cot)] under cot; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(radians)] under radians; prior registration was null
[DEBUG] 2023-06-10 11:44:03,654 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(degrees)] under degrees; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(log10)] under log10; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7ea07516] under mod; prior registration was NamedSqmFunctionTemplate(mod)
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rand)] under rand; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(soundex)] under soundex; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(translate)] under translate; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitand)] under bitand; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitor)] under bitor; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bitxor)] under bitxor; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_and)] under bit_and; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_or)] under bit_or; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day)] under day; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(month)] under month; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(year)] under year; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(hour)] under hour; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(minute)] under minute; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(second)] under second; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(microsecond)] under microsecond; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_week)] under day_of_week; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_month)] under day_of_month; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : day -> day_of_month
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(day_of_year)] under day_of_year; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(week)] under week; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(quarter)] under quarter; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(monthname)] under monthname; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(dayname)] under dayname; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under localtime; prior registration was null
[DEBUG] 2023-06-10 11:44:03,655 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under localtimestamp; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtime)] under local_time; prior registration was org.hibernate.dialect.function.CurrentFunction@29fcfc54
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(localtimestamp)] under local_datetime; prior registration was org.hibernate.dialect.function.CurrentFunction@353b0719
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.TruncFunction@30af23fd] under trunc; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : truncate -> trunc
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@65fc8edc] under date_trunc; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bit_length)] under bit_length; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ascii)] under ascii; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(octet_length)] under octet_length; prior registration was NamedSqmFunctionTemplate(octet_length)
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(space)] under space; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(repeat)] under repeat; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(char)] under char; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : chr -> char
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(instr)] under instr; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(substr)] under substr; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@a357c3e] under position; prior registration was org.hibernate.dialect.function.LocatePositionEmulation@a95cb11
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(ltrim)] under ltrim; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rtrim)] under rtrim; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.query.sqm.function.PatternBasedSqmFunctionDescriptor@7740b0ab] under concat; prior registration was NamedSqmFunctionTemplate(concat)
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curtime)] under curtime; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(curdate)] under curdate; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(now)] under now; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(sysdate)] under sysdate; prior registration was null
[DEBUG] 2023-06-10 11:44:03,656 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(insert)] under insert; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_and)] under bool_and; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : every -> bool_and
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(bool_or)] under bool_or; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [307] Registering alternate key : any -> bool_or
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(median)] under median; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_pop)] under stddev_pop; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(stddev_samp)] under stddev_samp; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_pop)] under var_pop; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(var_samp)] under var_samp; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.FormatFunction@3eb9c575] under format; prior registration was org.hibernate.dialect.function.FormatFunction@66d2885c
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(rownum)] under rownum; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(row_number)] under row_number; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lag)] under lag; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(lead)] under lead; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(first_value)] under first_value; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(last_value)] under last_value; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [NamedSqmFunctionTemplate(nth_value)] under nth_value; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@3f322610] under mode; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@1e477944] under percentile_cont; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.InverseDistributionFunction@6cf047cf] under percentile_disc; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1c92a549] under rank; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@323e026d] under dense_rank; prior registration was null
[DEBUG] 2023-06-10 11:44:03,657 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@1716c037] under percent_rank; prior registration was null
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.HypotheticalSetFunction@79b63325] under cume_dist; prior registration was null
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.query.sqm.function.SqmFunctionRegistry [90] Registered SqmFunctionTemplate [org.hibernate.dialect.function.ListaggFunction@708769b7] under listagg; prior registration was null
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] abs(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double acos(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Boolean any(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Integer ascii(STRING arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double asin(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double atan(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double atan2(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double avg(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] bit_and(arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Integer bit_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] bit_or(arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] bitand(arg0, arg1)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] bitor(arg0, arg1)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] bitxor(arg0, arg1)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_and(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Boolean bool_or(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] cast(arg as Type)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] ceiling(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Character char(INTEGER arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Integer character_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Character chr(INTEGER arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] coalesce(arg0[, arg1[, ...]])
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] String collate(STRING string as COLLATION collation)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] String concat(STRING string0[, STRING string1[, ...]])
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double cos(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,658 main            org.hibernate.HQL_FUNCTIONS [105] Double cosh(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Double cot(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Long count([distinct ]{arg|*})
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Double cume_dist([arg0[, ...]])
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Date curdate()
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Date current date
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Time current time
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current timestamp
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Date current_date
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Instant current_instant
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Time current_time
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp current_timestamp
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Time curtime()
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] date_trunc(STRING field, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] dateadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) datediff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Integer day(DATE arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_month(DATE arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_week(DATE arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Integer day_of_year(DATE arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] String dayname(DATE arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Double degrees(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Long dense_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Boolean every(BOOLEAN predicate)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Double exp(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] extract(TEMPORAL_UNIT field from TEMPORAL arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] first_valueANY value
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] floor(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] String format(TEMPORAL datetime as STRING pattern)
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] greatest(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:44:03,659 main            org.hibernate.HQL_FUNCTIONS [105] Integer hour(TIME arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] ifnull(arg0, arg1)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String insert(STRING string, INTEGER start, INTEGER length, STRING replacement)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Instant instant
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer instr(STRING string, STRING pattern[, INTEGER start[, INTEGER occurrence]])
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] lagANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] last_valueANY value
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] leadANY value[, INTEGER offset[, ANY default]]
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] least(COMPARABLE arg0, COMPARABLE arg1[, arg2[, ...]])
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String left(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String listagg(STRING arg0, STRING arg1)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Double ln(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local date
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local datetime
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local time
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalDate local_date
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalDateTime local_datetime
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] LocalTime local_time
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Time localtime
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp localtimestamp
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer locate(STRING pattern, STRING string[, INTEGER start])
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Double log(NUMERIC base, NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Double log10(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String lower(STRING string)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String lpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] String ltrim(STRING string)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] max(COMPARABLE arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Double median(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer microsecond(TIME arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] min(COMPARABLE arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer minute(TIME arg)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] Integer mod(INTEGER arg0, INTEGER arg1)
[DEBUG] 2023-06-10 11:44:03,660 main            org.hibernate.HQL_FUNCTIONS [105] mode()
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Integer month(DATE arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String monthname(DATE arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp now()
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] nth_valueANY value, INTEGER nth
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] nullif(arg0, arg1)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Integer octet_length(STRING_OR_CLOB arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset datetime
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] OffsetDateTime offset_datetime
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String overlay(STRING string placing STRING replacement from INTEGER start[ for INTEGER length])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String pad(STRING string with INTEGER length {leading|trailing}[ STRING character])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Double percent_rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] percentile_cont(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] percentile_disc(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Double pi
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Integer position(STRING pattern in STRING string)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Double power(NUMERIC arg0, NUMERIC arg1)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Integer quarter(DATE arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Double radians(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Double rand([INTEGER seed])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Long rank([arg0[, ...]])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String repeat(STRING string, INTEGER times)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String replace(STRING string, STRING pattern, STRING replacement)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String right(STRING string, INTEGER length)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] round(NUMERIC number[, INTEGER places])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Long row_number()
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Long rownum()
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String rpad(STRING string, INTEGER length[, STRING padding])
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] String rtrim(STRING string)
[DEBUG] 2023-06-10 11:44:03,661 main            org.hibernate.HQL_FUNCTIONS [105] Integer second(TIME arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Integer sign(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double sin(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double sinh(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String soundex(arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String space(INTEGER arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Object sql
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double sqrt(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double stddev_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String str(arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String substr(STRING string, INTEGER start[, INTEGER length])
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String substring(STRING string{ from|,} INTEGER start[{ for|,} INTEGER length])
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] sum(arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Timestamp sysdate
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double tan(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double tanh(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] timestampadd(TEMPORAL_UNIT field, INTEGER magnitude, TEMPORAL datetime)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] basicType@60(java.lang.Long,-5)|basicType@51(java.lang.Double,8) timestampdiff(TEMPORAL_UNIT field, TEMPORAL start, TEMPORAL end)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String translate(STRING arg0, STRING arg1, STRING arg2)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String trim([[{leading|trailing|both} ][STRING arg0 ]from] STRING arg1)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] trunc( ... )
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] truncate( ... )
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] String upper(STRING string)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double var_pop(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Double var_samp(NUMERIC arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Integer week(DATE arg)
[DEBUG] 2023-06-10 11:44:03,662 main            org.hibernate.HQL_FUNCTIONS [105] Integer year(DATE arg)
[DEBUG] 2023-06-10 11:44:03,663 main            org.hibernate.orm.query.plan.cache [48] Starting QueryPlanCache(2048)
[DEBUG] 2023-06-10 11:44:03,663 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [60] Not known whether passed class name [com.targetindia.model.Product] is safe
[DEBUG] 2023-06-10 11:44:03,663 main            org.hibernate.boot.internal.ClassLoaderAccessImpl [62] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.targetindia.model.Product
[DEBUG] 2023-06-10 11:44:03,676 main            org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl [235] HHH000513: Unable to create the ReflectionOptimizer for [com.targetindia.model.Product]
org.hibernate.bytecode.internal.bytebuddy.PrivateAccessorException: private accessor [category]
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.findAccessors(BytecodeProviderImpl.java:1251)
	at org.hibernate.bytecode.internal.bytebuddy.BytecodeProviderImpl.getReflectionOptimizer(BytecodeProviderImpl.java:232)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.resolveReflectionOptimizer(EntityRepresentationStrategyPojoStandard.java:293)
	at org.hibernate.metamodel.internal.EntityRepresentationStrategyPojoStandard.<init>(EntityRepresentationStrategyPojoStandard.java:161)
	at org.hibernate.metamodel.internal.ManagedTypeRepresentationResolverStandard.resolveStrategy(ManagedTypeRepresentationResolverStandard.java:62)
	at org.hibernate.persister.entity.AbstractEntityPersister.<init>(AbstractEntityPersister.java:505)
	at org.hibernate.persister.entity.SingleTableEntityPersister.<init>(SingleTableEntityPersister.java:140)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:92)
	at org.hibernate.persister.internal.PersisterFactoryImpl.createEntityPersister(PersisterFactoryImpl.java:75)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.processBootEntities(MappingMetamodelImpl.java:247)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.finishInitialization(MappingMetamodelImpl.java:185)
	at org.hibernate.internal.SessionFactoryImpl.initializeMappingModel(SessionFactoryImpl.java:320)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:270)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:431)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1455)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:55)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:80)
	at jakarta.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at com.targetindia.utils.JpaUtil.createEntityManager(JpaUtil.java:12)
	at com.targetindia.dao.JpaProductDao.getProductsByPriceRange(JpaProductDao.java:130)
	at com.targetindia.service.ProductManager.getProductsByPriceRange(ProductManager.java:82)
	at com.targetindia.App.acceptPriceRangeAndDisplayProducts(App.java:59)
	at com.targetindia.App.start(App.java:41)
	at com.targetindia.App.main(App.java:309)
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.orm.model.mapping.creation [93] Starting post-init callbacks
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.orm.model.mapping.creation [243] Starting PostInitCallbackEntry : Entity(com.targetindia.model.Product) `staticFetchableList` generator
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.persister.entity.AbstractEntityPersister [2861] Static SQL for entity: com.targetindia.model.Product
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.persister.entity.AbstractEntityPersister [2866]  Version select: select id from products where id=?
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.persister.entity.AbstractEntityPersister [2872]  Insert (0): insert into products (category,name,quantity_per_unit,unit_price,units_in_stock,id) values (?,?,?,?,?,default)
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.persister.entity.AbstractEntityPersister [2879]  Update (0): update products set category=?,name=?,quantity_per_unit=?,unit_price=?,units_in_stock=? where id=?
[DEBUG] 2023-06-10 11:44:03,677 main            org.hibernate.persister.entity.AbstractEntityPersister [2885]  Delete (0): delete from products where id=?
[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product)] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product]
 |  +-BasicFetch [com.targetindia.model.Product.category]
 |  +-BasicFetch [com.targetindia.model.Product.name]
 |  +-BasicFetch [com.targetindia.model.Product.quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product.unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product.unitsInStock]

[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.service.internal.SessionFactoryServiceRegistryImpl [91] EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
[DEBUG] 2023-06-10 11:44:03,678 main            org.hibernate.event.internal.EntityCopyObserverFactoryInitiator [39] Configured EntityCopyObserver strategy: disallow
[DEBUG] 2023-06-10 11:44:03,679 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [42] No JtaPlatform was specified, checking resolver
[DEBUG] 2023-06-10 11:44:03,679 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator [33] No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver [137] Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[ INFO] 2023-06-10 11:44:03,680 main            org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator [51] HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.type.spi.TypeConfiguration$Scope [203] Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11574592] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@55638165]
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.query.named.NamedObjectRepository [234] Checking 0 named HQL queries
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.query.named.NamedObjectRepository [251] Checking 0 named SQL queries
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [760] No schema actions specified for contributor `orm`; doing nothing
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator [72] No actions found; doing nothing
[DEBUG] 2023-06-10 11:44:03,680 main            org.hibernate.internal.SessionFactoryRegistry [74] Registering SessionFactory: dd8cdb56-e427-4b86-a54c-ab3b3233839b (<unnamed>)
[DEBUG] 2023-06-10 11:44:03,681 main            org.hibernate.internal.SessionFactoryRegistry [81] Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2023-06-10 11:44:03,681 main            org.hibernate.internal.SessionFactoryImpl [311] Instantiated SessionFactory
[DEBUG] 2023-06-10 11:44:03,681 main            org.hibernate.stat.internal.StatisticsInitiator [88] Statistics initialized [enabled=false]
[DEBUG] 2023-06-10 11:44:03,681 main            org.hibernate.orm.query.hql [75] HQL : from Product where unitPrice between ?1 and ?2
[DEBUG] 2023-06-10 11:44:03,681 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1904] Handling root path - Product
[DEBUG] 2023-06-10 11:44:03,682 main            org.hibernate.query.hql.internal.SemanticQueryBuilder [1151] Encountered implicit select clause : fromProductwhereunitPricebetween?1and?2
[DEBUG] 2023-06-10 11:44:03,682 main            org.hibernate.orm.query.hql [208] Unable to resolve unqualified attribute [unitPrice] in local from-clause
[DEBUG] 2023-06-10 11:44:03,682 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(1)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:44:03,682 main            org.hibernate.orm.query.sqm.creation [57] Applying inferable type to SqmExpression [SqmPositionalParameter(2)] : null -> BasicSqmPathSource(unitPrice : Double)
[DEBUG] 2023-06-10 11:44:03,682 main            org.hibernate.orm.query.sqm.ast [168] SqmStatement Tree :
    -> [select]
      -> [query-spec]
        -> [select]
          -> [selection]
            -> [root] - `com.targetindia.model.Product(6102991490069)`
            <- [root] - `com.targetindia.model.Product(6102991490069)`
          <- [selection]
        <- [select]
        -> [from]
          -> [root] - `com.targetindia.model.Product(6102991490069)`
          <- [root] - `com.targetindia.model.Product(6102991490069)`
        <- [from]
        -> [where]
          -> [is-between]
            -> [basic-path] - `com.targetindia.model.Product(6102991490069).unitPrice`
            ?1
            ?2
          <- [is-between]
        <- [where]
      <- [query-spec]
    <- [select]

[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.orm.sql.ast.create [34] Created new SQL alias : p1_0
[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.orm.sql.ast.create [98] Registration of TableGroup [StandardTableGroup(com.targetindia.model.Product(6102991490069))] with identifierForTableGroup [com.targetindia.model.Product] for NavigablePath [com.targetindia.model.Product] 
[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(1)
[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6102991490069).unitPrice) 
[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5703] Determining mapping-model type for SqmParameter : SqmPositionalParameter(2)
[DEBUG] 2023-06-10 11:44:03,683 main            org.hibernate.query.sqm.sql.BaseSqmToSqlAstConverter [5593] Determining mapping-model type for SqmPath : SqmBasicValuedSimplePath(com.targetindia.model.Product(6102991490069).unitPrice) 
[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.orm.results.graph.AST [70] DomainResult Graph:
 \-EntityResultImpl [com.targetindia.model.Product(6102991490069)]
 |  +-BasicFetch [com.targetindia.model.Product(6102991490069).category]
 |  +-BasicFetch [com.targetindia.model.Product(6102991490069).name]
 |  +-BasicFetch [com.targetindia.model.Product(6102991490069).quantityPerUnit]
 |  +-BasicFetch [com.targetindia.model.Product(6102991490069).unitPrice]
 |  \-BasicFetch [com.targetindia.model.Product(6102991490069).unitsInStock]

[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.orm.sql.ast.tree [46] SQL AST Tree:
    SelectStatement {
      FromClause {
        StandardTableGroup (p1 : com.targetindia.model.Product(6102991490069)) {
          primaryTableReference : products as p1_0
        }
      }
    }

[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.orm.sql.exec [455] Skipping reading Query result cache data: cache-enabled = false, cache-mode = NORMAL
[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.orm.results [148] Initializer list
[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.orm.results [150]     com.targetindia.model.Product(6102991490069) -> EntityResultInitializer(com.targetindia.model.Product(6102991490069))@1887979637 (SingleTableEntityPersister(com.targetindia.model.Product))
[DEBUG] 2023-06-10 11:44:03,684 main            org.hibernate.SQL [133] 
    select
        p1_0.id,
        p1_0.category,
        p1_0.name,
        p1_0.quantity_per_unit,
        p1_0.unit_price,
        p1_0.units_in_stock 
    from
        products p1_0 
    where
        p1_0.unit_price between ? and ?
[DEBUG] 2023-06-10 11:44:03,686 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [1]
[DEBUG] 2023-06-10 11:44:03,686 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6102991490069)): 1
[DEBUG] 2023-06-10 11:44:03,686 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6102991490069)#1] : 267514981
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Chai]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [100gm pack]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [129.0]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6102991490069)#1
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d88ce0e
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [4]
[DEBUG] 2023-06-10 11:44:03,687 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6102991490069)): 4
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6102991490069)#4] : 52395704
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Diet coke]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [6 x 200ml tin]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [176.0]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [10]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6102991490069)#4
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d88ce0e
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [0] - [7]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results.loading.entity [299] (EntityResultInitializer) Hydrated EntityKey (com.targetindia.model.Product(6102991490069)): 7
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results.loading.entity [678] (EntityResultInitializer) Created new entity instance [com.targetindia.model.Product(6102991490069)#7] : 1255252598
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [1] - [Beverages]
[DEBUG] 2023-06-10 11:44:03,688 main            org.hibernate.orm.results [62] Extracted JDBC value [2] - [Cold Coffee]
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.orm.results [62] Extracted JDBC value [3] - [200ml tetrapack]
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.orm.results [62] Extracted JDBC value [4] - [38.0]
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.orm.results [62] Extracted JDBC value [5] - [22]
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.orm.results.loading.entity [878] (EntityResultInitializer) Done materializing entityInstance : com.targetindia.model.Product(6102991490069)#7
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.orm.results.loading [93] Calling top-level assembler (0 / 1) : org.hibernate.sql.results.graph.entity.internal.EntityAssembler@3d88ce0e
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:44:03,689 main            org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl [179] Initiating JDBC connection release from afterTransaction
[DEBUG] 2023-06-10 11:44:16,901 Hibernate Connection Pool Validation Thread org.hibernate.orm.connections.pooling [376] Connection pool now considered primed; min-size will be maintained
